package com.hdu.edu.creditcertificatesystem.contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple11;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class LessonContract extends Contract {
    public static final String BINARY = "608060405260028054905060035534801561001957600080fd5b50613594806100296000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80636e49df43116100715780636e49df43146101a157806386aa4577146101d15780638e8878521461020257806397ddd7d71461021e578063d282424014610250578063ea27f40f1461028a576100b4565b8063485c7947146100b95780634d7dd4fe146100ea57806352c0faa61461011a57806353ed51431461014a57806359583c2a146101695780636e1f5b8314610185575b600080fd5b6100d360048036038101906100ce91906125bc565b6102ba565b6040516100e1929190612990565b60405180910390f35b61010460048036038101906100ff91906129c7565b61093e565b6040516101119190612a3e565b60405180910390f35b610134600480360381019061012f91906129c7565b6109ea565b6040516101419190612a3e565b60405180910390f35b610152610a96565b604051610160929190612990565b60405180910390f35b610183600480360381019061017e9190612c7b565b610f3e565b005b61019f600480360381019061019a9190612eda565b6112cd565b005b6101bb60048036038101906101b69190612f52565b6116e0565b6040516101c89190612faa565b60405180910390f35b6101eb60048036038101906101e69190612fc5565b611716565b6040516101f992919061315b565b60405180910390f35b61021c60048036038101906102179190612fc5565b611ad1565b005b61023860048036038101906102339190612f52565b611dd2565b60405161024793929190613192565b60405180910390f35b61026a60048036038101906102659190612f52565b611eb4565b6040516102819b9a999897969594939291906131df565b60405180910390f35b6102a4600480360381019061029f9190612f52565b6120bc565b6040516102b19190612faa565b60405180910390f35b606080600060028054905067ffffffffffffffff8111156102de576102dd612a65565b5b60405190808252806020026020018201604052801561031757816020015b610304612383565b8152602001906001900390816102fc5790505b509050600060068054905067ffffffffffffffff81111561033b5761033a612a65565b5b60405190808252806020026020018201604052801561037457816020015b6103616123dd565b8152602001906001900390816103595790505b5090506000805b6002805490508110156106125760006002828154811061039e5761039d61329f565b5b906000526020600020016040516103b591906133ce565b9081526020016040518091039020604051806101600160405290816000820180546103df906132fd565b80601f016020809104026020016040519081016040528092919081815260200182805461040b906132fd565b80156104585780601f1061042d57610100808354040283529160200191610458565b820191906000526020600020905b81548152906001019060200180831161043b57829003601f168201915b50505050508152602001600182018054610471906132fd565b80601f016020809104026020016040519081016040528092919081815260200182805461049d906132fd565b80156104ea5780601f106104bf576101008083540402835291602001916104ea565b820191906000526020600020905b8154815290600101906020018083116104cd57829003601f168201915b50505050508152602001600282018054610503906132fd565b80601f016020809104026020016040519081016040528092919081815260200182805461052f906132fd565b801561057c5780601f106105515761010080835404028352916020019161057c565b820191906000526020600020905b81548152906001019060200180831161055f57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a820154815250508483806105e190613414565b9450815181106105f4576105f361329f565b5b6020026020010181905250808061060a90613414565b91505061037b565b506000805b60068054905081101561076f5760046006828154811061063a5761063961329f565b5b9060005260206000200160405161065191906133ce565b908152602001604051809103902060405180606001604052908160008201805461067a906132fd565b80601f01602080910402602001604051908101604052809291908181526020018280546106a6906132fd565b80156106f35780601f106106c8576101008083540402835291602001916106f3565b820191906000526020600020905b8154815290600101906020018083116106d657829003601f168201915b505050505081526020016001820160009054906101000a900460ff161515151581526020016001820160019054906101000a900460ff16151515158152505084838061073e90613414565b9450815181106107515761075061329f565b5b6020026020010181905250808061076790613414565b915050610617565b50878710156107815750505050610937565b60018261078e919061345d565b8711156107a5576001826107a2919061345d565b96505b600188886107b3919061345d565b6107bd9190613491565b67ffffffffffffffff8111156107d6576107d5612a65565b5b60405190808252806020026020018201604052801561080f57816020015b6107fc612383565b8152602001906001900390816107f45790505b50955060018888610820919061345d565b61082a9190613491565b67ffffffffffffffff81111561084357610842612a65565b5b60405190808252806020026020018201604052801561087c57816020015b6108696123dd565b8152602001906001900390816108615790505b509450600091506000905060008890505b878111610931578481815181106108a7576108a661329f565b5b60200260200101518784806108bb90613414565b9550815181106108ce576108cd61329f565b5b60200260200101819052508381815181106108ec576108eb61329f565b5b602002602001015186838061090090613414565b9450815181106109135761091261329f565b5b6020026020010181905250808061092990613414565b91505061088d565b50505050505b9250929050565b6002818154811061094e57600080fd5b906000526020600020016000915090508054610969906132fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610995906132fd565b80156109e25780601f106109b7576101008083540402835291602001916109e2565b820191906000526020600020905b8154815290600101906020018083116109c557829003601f168201915b505050505081565b600681815481106109fa57600080fd5b906000526020600020016000915090508054610a15906132fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610a41906132fd565b8015610a8e5780601f10610a6357610100808354040283529160200191610a8e565b820191906000526020600020905b815481529060010190602001808311610a7157829003601f168201915b505050505081565b606080600060028054905067ffffffffffffffff811115610aba57610ab9612a65565b5b604051908082528060200260200182016040528015610af357816020015b610ae0612383565b815260200190600190039081610ad85790505b509050600060068054905067ffffffffffffffff811115610b1757610b16612a65565b5b604051908082528060200260200182016040528015610b5057816020015b610b3d6123dd565b815260200190600190039081610b355790505b50905060005b600280549050811015610de157600060028281548110610b7957610b7861329f565b5b90600052602060002001604051610b9091906133ce565b908152602001604051809103902060405180610160016040529081600082018054610bba906132fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610be6906132fd565b8015610c335780601f10610c0857610100808354040283529160200191610c33565b820191906000526020600020905b815481529060010190602001808311610c1657829003601f168201915b50505050508152602001600182018054610c4c906132fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610c78906132fd565b8015610cc55780601f10610c9a57610100808354040283529160200191610cc5565b820191906000526020600020905b815481529060010190602001808311610ca857829003601f168201915b50505050508152602001600282018054610cde906132fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0a906132fd565b8015610d575780601f10610d2c57610100808354040283529160200191610d57565b820191906000526020600020905b815481529060010190602001808311610d3a57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a82015481525050838281518110610dc357610dc261329f565b5b60200260200101819052508080610dd990613414565b915050610b56565b5060005b600680549050811015610f3157600460068281548110610e0857610e0761329f565b5b90600052602060002001604051610e1f91906133ce565b9081526020016040518091039020604051806060016040529081600082018054610e48906132fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610e74906132fd565b8015610ec15780601f10610e9657610100808354040283529160200191610ec1565b820191906000526020600020905b815481529060010190602001808311610ea457829003601f168201915b505050505081526020016001820160009054906101000a900460ff161515151581526020016001820160019054906101000a900460ff161515151581525050828281518110610f1357610f1261329f565b5b60200260200101819052508080610f2990613414565b915050610de5565b5081819350935050509091565b60005b81518110156112c9576001828281518110610f5f57610f5e61329f565b5b6020026020010151604051610f749190613518565b908152602001604051809103902060009054906101000a900460ff161561127d5760008060006001858581518110610faf57610fae61329f565b5b6020026020010151604051610fc49190613518565b908152602001604051809103902060006101000a81548160ff0219169083151502179055506000600585858151811061100057610fff61329f565b5b60200260200101516040516110159190613518565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600091505b600280549050821015611133576111168484815181106110625761106161329f565b5b60200260200101516002848154811061107e5761107d61329f565b5b906000526020600020018054611093906132fd565b80601f01602080910402602001604051908101604052809291908181526020018280546110bf906132fd565b801561110c5780601f106110e15761010080835404028352916020019161110c565b820191906000526020600020905b8154815290600101906020018083116110ef57829003601f168201915b50505050506120f2565b1561112057611133565b818061112b90613414565b92505061103f565b600090505b60068054905081101561122c5761120f84848151811061115b5761115a61329f565b5b6020026020010151600683815481106111775761117661329f565b5b90600052602060002001805461118c906132fd565b80601f01602080910402602001604051908101604052809291908181526020018280546111b8906132fd565b80156112055780601f106111da57610100808354040283529160200191611205565b820191906000526020600020905b8154815290600101906020018083116111e857829003601f168201915b50505050506120f2565b156112195761122c565b808061122490613414565b915050611138565b611235826121cf565b61123e816122a9565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a89600160405161126e9190612faa565b60405180910390a150506112b6565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a8960006040516112ad9190612faa565b60405180910390a15b80806112c190613414565b915050610f41565b5050565b600182600001516040516112e19190613518565b908152602001604051809103902060009054906101000a900460ff166114505781600083600001516040516113169190613518565b90815260200160405180910390206000820151816000019080519060200190611340929190612402565b50602082015181600101908051906020019061135d929190612402565b50604082015181600201908051906020019061137a929190612402565b50606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a015590505060018083600001516040516113e69190613518565b908152602001604051809103902060006101000a81548160ff0219169083151502179055506002826000015190806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061144a929190612402565b50611521565b81600083600001516040516114659190613518565b9081526020016040518091039020600082015181600001908051906020019061148f929190612402565b5060208201518160010190805190602001906114ac929190612402565b5060408201518160020190805190602001906114c9929190612402565b50606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a01559050505b600581600001516040516115359190613518565b908152602001604051809103902060009054906101000a900460ff1661165857806004826000015160405161156a9190613518565b90815260200160405180910390206000820151816000019080519060200190611594929190612402565b5060208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548160ff0219169083151502179055509050506001600582600001516040516115ee9190613518565b908152602001604051809103902060006101000a81548160ff02191690831515021790555060068160000151908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190611652929190612402565b506116dc565b806004826000015160405161166d9190613518565b90815260200160405180910390206000820151816000019080519060200190611697929190612402565b5060208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548160ff0219169083151502179055509050505b5050565b6005818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b61171e612383565b6117266123dd565b6001836000015160405161173a9190613518565b908152602001604051809103902060009054906101000a900460ff16801561178e5750600583600001516040516117719190613518565b908152602001604051809103902060009054906101000a900460ff165b15611acb57600083600001516040516117a79190613518565b9081526020016040518091039020600484600001516040516117c99190613518565b908152602001604051809103902081604051806101600160405290816000820180546117f4906132fd565b80601f0160208091040260200160405190810160405280929190818152602001828054611820906132fd565b801561186d5780601f106118425761010080835404028352916020019161186d565b820191906000526020600020905b81548152906001019060200180831161185057829003601f168201915b50505050508152602001600182018054611886906132fd565b80601f01602080910402602001604051908101604052809291908181526020018280546118b2906132fd565b80156118ff5780601f106118d4576101008083540402835291602001916118ff565b820191906000526020600020905b8154815290600101906020018083116118e257829003601f168201915b50505050508152602001600282018054611918906132fd565b80601f0160208091040260200160405190810160405280929190818152602001828054611944906132fd565b80156119915780601f1061196657610100808354040283529160200191611991565b820191906000526020600020905b81548152906001019060200180831161197457829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a82015481525050915080604051806060016040529081600082018054611a08906132fd565b80601f0160208091040260200160405190810160405280929190818152602001828054611a34906132fd565b8015611a815780601f10611a5657610100808354040283529160200191611a81565b820191906000526020600020905b815481529060010190602001808311611a6457829003601f168201915b505050505081526020016001820160009054906101000a900460ff161515151581526020016001820160019054906101000a900460ff161515151581525050905091509150611acc565b5b915091565b60018160000151604051611ae59190613518565b908152602001604051809103902060009054906101000a900460ff1615611d9657600080600060018460000151604051611b1f9190613518565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600060058460000151604051611b5a9190613518565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600091505b600280549050821015611c6257611c45836000015160028481548110611bad57611bac61329f565b5b906000526020600020018054611bc2906132fd565b80601f0160208091040260200160405190810160405280929190818152602001828054611bee906132fd565b8015611c3b5780601f10611c1057610100808354040283529160200191611c3b565b820191906000526020600020905b815481529060010190602001808311611c1e57829003601f168201915b50505050506120f2565b15611c4f57611c62565b8180611c5a90613414565b925050611b84565b600090505b600680549050811015611d4557611d28836000015160068381548110611c9057611c8f61329f565b5b906000526020600020018054611ca5906132fd565b80601f0160208091040260200160405190810160405280929190818152602001828054611cd1906132fd565b8015611d1e5780601f10611cf357610100808354040283529160200191611d1e565b820191906000526020600020905b815481529060010190602001808311611d0157829003601f168201915b50505050506120f2565b15611d3257611d45565b8080611d3d90613414565b915050611c67565b611d4e826121cf565b611d57816122a9565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a896001604051611d879190612faa565b60405180910390a15050611dcf565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a896000604051611dc69190612faa565b60405180910390a15b50565b600481805160208101820180518482526020830160208501208183528095505050505050600091509050806000018054611e0b906132fd565b80601f0160208091040260200160405190810160405280929190818152602001828054611e37906132fd565b8015611e845780601f10611e5957610100808354040283529160200191611e84565b820191906000526020600020905b815481529060010190602001808311611e6757829003601f168201915b5050505050908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16905083565b600081805160208101820180518482526020830160208501208183528095505050505050600091509050806000018054611eed906132fd565b80601f0160208091040260200160405190810160405280929190818152602001828054611f19906132fd565b8015611f665780601f10611f3b57610100808354040283529160200191611f66565b820191906000526020600020905b815481529060010190602001808311611f4957829003601f168201915b505050505090806001018054611f7b906132fd565b80601f0160208091040260200160405190810160405280929190818152602001828054611fa7906132fd565b8015611ff45780601f10611fc957610100808354040283529160200191611ff4565b820191906000526020600020905b815481529060010190602001808311611fd757829003601f168201915b505050505090806002018054612009906132fd565b80601f0160208091040260200160405190810160405280929190818152602001828054612035906132fd565b80156120825780601f1061205757610100808354040283529160200191612082565b820191906000526020600020905b81548152906001019060200180831161206557829003601f168201915b50505050509080600301549080600401549080600501549080600601549080600701549080600801549080600901549080600a015490508b565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b60008083905060008390508051825114612111576000925050506121c9565b60005b82518110156121c1578181815181106121305761212f61329f565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168382815181106121705761216f61329f565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146121ae57600093505050506121c9565b80806121b990613414565b915050612114565b506001925050505b92915050565b600060028054905090508082106121e657506122a6565b60008290505b6001826121f9919061345d565b81101561227357600260018261220f9190613491565b815481106122205761221f61329f565b5b906000526020600020016002828154811061223e5761223d61329f565b5b90600052602060002001908054612254906132fd565b61225f929190612488565b50808061226b90613414565b9150506121ec565b5060028054806122865761228561352f565b5b6001900381819060005260206000200160006122a29190612515565b9055505b50565b600060068054905090508082106122c05750612380565b60008290505b6001826122d3919061345d565b81101561234d5760066001826122e99190613491565b815481106122fa576122f961329f565b5b90600052602060002001600682815481106123185761231761329f565b5b9060005260206000200190805461232e906132fd565b612339929190612488565b50808061234590613414565b9150506122c6565b5060068054806123605761235f61352f565b5b60019003818190600052602060002001600061237c9190612515565b9055505b50565b60405180610160016040528060608152602001606081526020016060815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060600160405280606081526020016000151581526020016000151581525090565b82805461240e906132fd565b90600052602060002090601f0160209004810192826124305760008555612477565b82601f1061244957805160ff1916838001178555612477565b82800160010185558215612477579182015b8281111561247657825182559160200191906001019061245b565b5b5090506124849190612555565b5090565b828054612494906132fd565b90600052602060002090601f0160209004810192826124b65760008555612504565b82601f106124c75780548555612504565b8280016001018555821561250457600052602060002091601f016020900482015b828111156125035782548255916001019190600101906124e8565b5b5090506125119190612555565b5090565b508054612521906132fd565b6000825580601f106125335750612552565b601f0160209004906000526020600020908101906125519190612555565b5b50565b5b8082111561256e576000816000905550600101612556565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61259981612586565b81146125a457600080fd5b50565b6000813590506125b681612590565b92915050565b600080604083850312156125d3576125d261257c565b5b60006125e1858286016125a7565b92505060206125f2858286016125a7565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612662578082015181840152602081019050612647565b83811115612671576000848401525b50505050565b6000601f19601f8301169050919050565b600061269382612628565b61269d8185612633565b93506126ad818560208601612644565b6126b681612677565b840191505092915050565b6126ca81612586565b82525050565b60006101608301600083015184820360008601526126ee8282612688565b915050602083015184820360208601526127088282612688565b915050604083015184820360408601526127228282612688565b915050606083015161273760608601826126c1565b50608083015161274a60808601826126c1565b5060a083015161275d60a08601826126c1565b5060c083015161277060c08601826126c1565b5060e083015161278360e08601826126c1565b506101008301516127986101008601826126c1565b506101208301516127ad6101208601826126c1565b506101408301516127c26101408601826126c1565b508091505092915050565b60006127d983836126d0565b905092915050565b6000602082019050919050565b60006127f9826125fc565b6128038185612607565b93508360208202850161281585612618565b8060005b85811015612851578484038952815161283285826127cd565b945061283d836127e1565b925060208a01995050600181019050612819565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60008115159050919050565b6128a48161288f565b82525050565b600060608301600083015184820360008601526128c78282612688565b91505060208301516128dc602086018261289b565b5060408301516128ef604086018261289b565b508091505092915050565b600061290683836128aa565b905092915050565b6000602082019050919050565b600061292682612863565b612930818561286e565b9350836020820285016129428561287f565b8060005b8581101561297e578484038952815161295f85826128fa565b945061296a8361290e565b925060208a01995050600181019050612946565b50829750879550505050505092915050565b600060408201905081810360008301526129aa81856127ee565b905081810360208301526129be818461291b565b90509392505050565b6000602082840312156129dd576129dc61257c565b5b60006129eb848285016125a7565b91505092915050565b600082825260208201905092915050565b6000612a1082612628565b612a1a81856129f4565b9350612a2a818560208601612644565b612a3381612677565b840191505092915050565b60006020820190508181036000830152612a588184612a05565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612a9d82612677565b810181811067ffffffffffffffff82111715612abc57612abb612a65565b5b80604052505050565b6000612acf612572565b9050612adb8282612a94565b919050565b600067ffffffffffffffff821115612afb57612afa612a65565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff821115612b3157612b30612a65565b5b612b3a82612677565b9050602081019050919050565b82818337600083830152505050565b6000612b69612b6484612b16565b612ac5565b905082815260208101848484011115612b8557612b84612b11565b5b612b90848285612b47565b509392505050565b600082601f830112612bad57612bac612a60565b5b8135612bbd848260208601612b56565b91505092915050565b6000612bd9612bd484612ae0565b612ac5565b90508083825260208201905060208402830185811115612bfc57612bfb612b0c565b5b835b81811015612c4357803567ffffffffffffffff811115612c2157612c20612a60565b5b808601612c2e8982612b98565b85526020850194505050602081019050612bfe565b5050509392505050565b600082601f830112612c6257612c61612a60565b5b8135612c72848260208601612bc6565b91505092915050565b600060208284031215612c9157612c9061257c565b5b600082013567ffffffffffffffff811115612caf57612cae612581565b5b612cbb84828501612c4d565b91505092915050565b600080fd5b600080fd5b60006101608284031215612ce557612ce4612cc4565b5b612cf0610160612ac5565b9050600082013567ffffffffffffffff811115612d1057612d0f612cc9565b5b612d1c84828501612b98565b600083015250602082013567ffffffffffffffff811115612d4057612d3f612cc9565b5b612d4c84828501612b98565b602083015250604082013567ffffffffffffffff811115612d7057612d6f612cc9565b5b612d7c84828501612b98565b6040830152506060612d90848285016125a7565b6060830152506080612da4848285016125a7565b60808301525060a0612db8848285016125a7565b60a08301525060c0612dcc848285016125a7565b60c08301525060e0612de0848285016125a7565b60e083015250610100612df5848285016125a7565b61010083015250610120612e0b848285016125a7565b61012083015250610140612e21848285016125a7565b6101408301525092915050565b612e378161288f565b8114612e4257600080fd5b50565b600081359050612e5481612e2e565b92915050565b600060608284031215612e7057612e6f612cc4565b5b612e7a6060612ac5565b9050600082013567ffffffffffffffff811115612e9a57612e99612cc9565b5b612ea684828501612b98565b6000830152506020612eba84828501612e45565b6020830152506040612ece84828501612e45565b60408301525092915050565b60008060408385031215612ef157612ef061257c565b5b600083013567ffffffffffffffff811115612f0f57612f0e612581565b5b612f1b85828601612cce565b925050602083013567ffffffffffffffff811115612f3c57612f3b612581565b5b612f4885828601612e5a565b9150509250929050565b600060208284031215612f6857612f6761257c565b5b600082013567ffffffffffffffff811115612f8657612f85612581565b5b612f9284828501612b98565b91505092915050565b612fa48161288f565b82525050565b6000602082019050612fbf6000830184612f9b565b92915050565b600060208284031215612fdb57612fda61257c565b5b600082013567ffffffffffffffff811115612ff957612ff8612581565b5b61300584828501612cce565b91505092915050565b600061016083016000830151848203600086015261302c8282612688565b915050602083015184820360208601526130468282612688565b915050604083015184820360408601526130608282612688565b915050606083015161307560608601826126c1565b50608083015161308860808601826126c1565b5060a083015161309b60a08601826126c1565b5060c08301516130ae60c08601826126c1565b5060e08301516130c160e08601826126c1565b506101008301516130d66101008601826126c1565b506101208301516130eb6101208601826126c1565b506101408301516131006101408601826126c1565b508091505092915050565b600060608301600083015184820360008601526131288282612688565b915050602083015161313d602086018261289b565b506040830151613150604086018261289b565b508091505092915050565b60006040820190508181036000830152613175818561300e565b90508181036020830152613189818461310b565b90509392505050565b600060608201905081810360008301526131ac8186612a05565b90506131bb6020830185612f9b565b6131c86040830184612f9b565b949350505050565b6131d981612586565b82525050565b60006101608201905081810360008301526131fa818e612a05565b9050818103602083015261320e818d612a05565b90508181036040830152613222818c612a05565b9050613231606083018b6131d0565b61323e608083018a6131d0565b61324b60a08301896131d0565b61325860c08301886131d0565b61326560e08301876131d0565b6132736101008301866131d0565b6132816101208301856131d0565b61328f6101408301846131d0565b9c9b505050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061331557607f821691505b60208210811415613329576133286132ce565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461335c816132fd565b613366818661332f565b945060018216600081146133815760018114613392576133c5565b60ff198316865281860193506133c5565b61339b8561333a565b60005b838110156133bd5781548189015260018201915060208101905061339e565b838801955050505b50505092915050565b60006133da828461334f565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061341f82612586565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613452576134516133e5565b5b600182019050919050565b600061346882612586565b915061347383612586565b925082821015613486576134856133e5565b5b828203905092915050565b600061349c82612586565b91506134a783612586565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156134dc576134db6133e5565b5b828201905092915050565b60006134f282612628565b6134fc818561332f565b935061350c818560208601612644565b80840191505092915050565b600061352482846134e7565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212207d9fbfac25faa8b17217a2234a40601f82d6ea13fccb99d56b103a16894a175464736f6c634300080a0033";

    public static final String FUNC_BATCHDELETE = "batchDelete";

    public static final String FUNC_DELETESTUDENT = "deleteStudent";

    public static final String FUNC_EXTRAINFOINSERTED = "extraInfoInserted";

    public static final String FUNC_EXTRAINFOKEY = "extraInfoKey";

    public static final String FUNC_EXTRAINFOS = "extraInfos";

    public static final String FUNC_GETALL = "getAll";

    public static final String FUNC_GETENTITY = "getEntity";

    public static final String FUNC_GETLISTPAGE = "getListPage";

    public static final String FUNC_LESSONINSERTED = "lessonInserted";

    public static final String FUNC_LESSONKEY = "lessonKey";

    public static final String FUNC_LESSONS = "lessons";

    public static final String FUNC_SAVE = "save";

    public static final Event DELETEMSG_EVENT = new Event("DeleteMsg",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
    ;

    @Deprecated
    protected LessonContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected LessonContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected LessonContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected LessonContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<DeleteMsgEventResponse> getDeleteMsgEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEMSG_EVENT, transactionReceipt);
        ArrayList<DeleteMsgEventResponse> responses = new ArrayList<DeleteMsgEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.code = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, DeleteMsgEventResponse>() {
            @Override
            public DeleteMsgEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DELETEMSG_EVENT, log);
                DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
                typedResponse.log = log;
                typedResponse.code = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DELETEMSG_EVENT));
        return deleteMsgEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> batchDelete(List<String> lessonIdList) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_BATCHDELETE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                        org.web3j.abi.datatypes.Utf8String.class,
                        org.web3j.abi.Utils.typeMap(lessonIdList, org.web3j.abi.datatypes.Utf8String.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deleteStudent(Lesson _lesson) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DELETESTUDENT,
                Arrays.<Type>asList(_lesson),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> extraInfoInserted(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_EXTRAINFOINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> extraInfoKey(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_EXTRAINFOKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple3<String, Boolean, Boolean>> extraInfos(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_EXTRAINFOS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Bool>() {}, new TypeReference<Bool>() {}));
        return new RemoteFunctionCall<Tuple3<String, Boolean, Boolean>>(function,
                new Callable<Tuple3<String, Boolean, Boolean>>() {
                    @Override
                    public Tuple3<String, Boolean, Boolean> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<String, Boolean, Boolean>(
                                (String) results.get(0).getValue(),
                                (Boolean) results.get(1).getValue(),
                                (Boolean) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<List<Lesson>, List<ExtraInfo>>> getAll() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETALL,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Lesson>>() {}, new TypeReference<DynamicArray<ExtraInfo>>() {}));
        return new RemoteFunctionCall<Tuple2<List<Lesson>, List<ExtraInfo>>>(function,
                new Callable<Tuple2<List<Lesson>, List<ExtraInfo>>>() {
                    @Override
                    public Tuple2<List<Lesson>, List<ExtraInfo>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<List<Lesson>, List<ExtraInfo>>(
                                convertToNative((List<Lesson>) results.get(0).getValue()),
                                convertToNative((List<ExtraInfo>) results.get(1).getValue()));
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<Lesson, ExtraInfo>> getEntity(Lesson _lesson) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETENTITY,
                Arrays.<Type>asList(_lesson),
                Arrays.<TypeReference<?>>asList(new TypeReference<Lesson>() {}, new TypeReference<ExtraInfo>() {}));
        return new RemoteFunctionCall<Tuple2<Lesson, ExtraInfo>>(function,
                new Callable<Tuple2<Lesson, ExtraInfo>>() {
                    @Override
                    public Tuple2<Lesson, ExtraInfo> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<Lesson, ExtraInfo>(
                                (Lesson) results.get(0),
                                (ExtraInfo) results.get(1));
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<List<Lesson>, List<ExtraInfo>>> getListPage(BigInteger begin, BigInteger end) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETLISTPAGE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(begin),
                        new org.web3j.abi.datatypes.generated.Uint256(end)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Lesson>>() {}, new TypeReference<DynamicArray<ExtraInfo>>() {}));
        return new RemoteFunctionCall<Tuple2<List<Lesson>, List<ExtraInfo>>>(function,
                new Callable<Tuple2<List<Lesson>, List<ExtraInfo>>>() {
                    @Override
                    public Tuple2<List<Lesson>, List<ExtraInfo>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<List<Lesson>, List<ExtraInfo>>(
                                convertToNative((List<Lesson>) results.get(0).getValue()),
                                convertToNative((List<ExtraInfo>) results.get(1).getValue()));
                    }
                });
    }

    public RemoteFunctionCall<Boolean> lessonInserted(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_LESSONINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> lessonKey(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_LESSONKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple11<String, String, String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>> lessons(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_LESSONS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple11<String, String, String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>>(function,
                new Callable<Tuple11<String, String, String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple11<String, String, String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple11<String, String, String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (BigInteger) results.get(3).getValue(),
                                (BigInteger) results.get(4).getValue(),
                                (BigInteger) results.get(5).getValue(),
                                (BigInteger) results.get(6).getValue(),
                                (BigInteger) results.get(7).getValue(),
                                (BigInteger) results.get(8).getValue(),
                                (BigInteger) results.get(9).getValue(),
                                (BigInteger) results.get(10).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> save(Lesson _lesson, ExtraInfo _extraInfo) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SAVE,
                Arrays.<Type>asList(_lesson,
                        _extraInfo),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static LessonContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new LessonContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static LessonContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new LessonContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static LessonContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new LessonContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static LessonContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new LessonContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<LessonContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(LessonContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<LessonContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(LessonContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<LessonContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(LessonContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<LessonContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(LessonContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class Lesson extends DynamicStruct {
        public String lessonId;

        public String lessonName;

        public String openCollege;

        public BigInteger regularScore;

        public BigInteger midTermScore;

        public BigInteger finalTermScore;

        public BigInteger finalScore;

        public BigInteger credit;

        public BigInteger point;

        public BigInteger creditPoint;

        public BigInteger term;

        public Lesson(String lessonId, String lessonName, String openCollege, BigInteger regularScore, BigInteger midTermScore, BigInteger finalTermScore, BigInteger finalScore, BigInteger credit, BigInteger point, BigInteger creditPoint, BigInteger term) {
            super(new org.web3j.abi.datatypes.Utf8String(lessonId),new org.web3j.abi.datatypes.Utf8String(lessonName),new org.web3j.abi.datatypes.Utf8String(openCollege),new org.web3j.abi.datatypes.generated.Uint256(regularScore),new org.web3j.abi.datatypes.generated.Uint256(midTermScore),new org.web3j.abi.datatypes.generated.Uint256(finalTermScore),new org.web3j.abi.datatypes.generated.Uint256(finalScore),new org.web3j.abi.datatypes.generated.Uint256(credit),new org.web3j.abi.datatypes.generated.Uint256(point),new org.web3j.abi.datatypes.generated.Uint256(creditPoint),new org.web3j.abi.datatypes.generated.Uint256(term));
            this.lessonId = lessonId;
            this.lessonName = lessonName;
            this.openCollege = openCollege;
            this.regularScore = regularScore;
            this.midTermScore = midTermScore;
            this.finalTermScore = finalTermScore;
            this.finalScore = finalScore;
            this.credit = credit;
            this.point = point;
            this.creditPoint = creditPoint;
            this.term = term;
        }

        public Lesson(Utf8String lessonId, Utf8String lessonName, Utf8String openCollege, Uint256 regularScore, Uint256 midTermScore, Uint256 finalTermScore, Uint256 finalScore, Uint256 credit, Uint256 point, Uint256 creditPoint, Uint256 term) {
            super(lessonId,lessonName,openCollege,regularScore,midTermScore,finalTermScore,finalScore,credit,point,creditPoint,term);
            this.lessonId = lessonId.getValue();
            this.lessonName = lessonName.getValue();
            this.openCollege = openCollege.getValue();
            this.regularScore = regularScore.getValue();
            this.midTermScore = midTermScore.getValue();
            this.finalTermScore = finalTermScore.getValue();
            this.finalScore = finalScore.getValue();
            this.credit = credit.getValue();
            this.point = point.getValue();
            this.creditPoint = creditPoint.getValue();
            this.term = term.getValue();
        }
    }

    public static class ExtraInfo extends DynamicStruct {
        public String lessonId;

        public Boolean isRetake;

        public Boolean isReExam;

        public ExtraInfo(String lessonId, Boolean isRetake, Boolean isReExam) {
            super(new org.web3j.abi.datatypes.Utf8String(lessonId),new org.web3j.abi.datatypes.Bool(isRetake),new org.web3j.abi.datatypes.Bool(isReExam));
            this.lessonId = lessonId;
            this.isRetake = isRetake;
            this.isReExam = isReExam;
        }

        public ExtraInfo(Utf8String lessonId, Bool isRetake, Bool isReExam) {
            super(lessonId,isRetake,isReExam);
            this.lessonId = lessonId.getValue();
            this.isRetake = isRetake.getValue();
            this.isReExam = isReExam.getValue();
        }
    }

    public static class DeleteMsgEventResponse extends BaseEventResponse {
        public Boolean code;
    }
}
