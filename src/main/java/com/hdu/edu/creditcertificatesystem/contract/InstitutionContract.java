package com.hdu.edu.creditcertificatesystem.contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tuples.generated.Tuple7;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class InstitutionContract extends Contract {
    public static final String BINARY = "";

    public static final String FUNC_BATCHDELETE = "batchDelete";

    public static final String FUNC_DELETESTUDENT = "deleteStudent";

    public static final String FUNC_EXTRAINFOINSERTED = "extraInfoInserted";

    public static final String FUNC_EXTRAINFOKEY = "extraInfoKey";

    public static final String FUNC_EXTRAINFOS = "extraInfos";

    public static final String FUNC_GETALL = "getAll";

    public static final String FUNC_GETBYNAME = "getByName";

    public static final String FUNC_GETENTITY = "getEntity";

    public static final String FUNC_GETLISTPAGE = "getListPage";

    public static final String FUNC_GETLISTPAGEBYSTATUS = "getListPageByStatus";

    public static final String FUNC_INSTITUTIONINFOINSERTED = "institutionInfoInserted";

    public static final String FUNC_INSTITUTIONINFOKEY = "institutionInfoKey";

    public static final String FUNC_INSTITUTIONINFOS = "institutionInfos";

    public static final String FUNC_SAVE = "save";

    public static final Event DELETEEXTRAMSG_EVENT = new Event("DeleteExtraMsg",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
    ;

    public static final Event DELETEMSG_EVENT = new Event("DeleteMsg",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
    ;

    @Deprecated
    protected InstitutionContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected InstitutionContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected InstitutionContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected InstitutionContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<DeleteExtraMsgEventResponse> getDeleteExtraMsgEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEEXTRAMSG_EVENT, transactionReceipt);
        ArrayList<DeleteExtraMsgEventResponse> responses = new ArrayList<DeleteExtraMsgEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DeleteExtraMsgEventResponse typedResponse = new DeleteExtraMsgEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.code = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DeleteExtraMsgEventResponse> deleteExtraMsgEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, DeleteExtraMsgEventResponse>() {
            @Override
            public DeleteExtraMsgEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DELETEEXTRAMSG_EVENT, log);
                DeleteExtraMsgEventResponse typedResponse = new DeleteExtraMsgEventResponse();
                typedResponse.log = log;
                typedResponse.code = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<DeleteExtraMsgEventResponse> deleteExtraMsgEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DELETEEXTRAMSG_EVENT));
        return deleteExtraMsgEventFlowable(filter);
    }

    public List<DeleteMsgEventResponse> getDeleteMsgEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEMSG_EVENT, transactionReceipt);
        ArrayList<DeleteMsgEventResponse> responses = new ArrayList<DeleteMsgEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.code = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, DeleteMsgEventResponse>() {
            @Override
            public DeleteMsgEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DELETEMSG_EVENT, log);
                DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
                typedResponse.log = log;
                typedResponse.code = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DELETEMSG_EVENT));
        return deleteMsgEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> batchDelete(List<String> idList) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_BATCHDELETE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                        org.web3j.abi.datatypes.Utf8String.class,
                        org.web3j.abi.Utils.typeMap(idList, org.web3j.abi.datatypes.Utf8String.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deleteStudent(InstitutionInfo _institution) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DELETESTUDENT,
                Arrays.<Type>asList(_institution),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> extraInfoInserted(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_EXTRAINFOINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> extraInfoKey(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_EXTRAINFOKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple7<String, BigInteger, String, BigInteger, BigInteger, String, String>> extraInfos(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_EXTRAINFOS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple7<String, BigInteger, String, BigInteger, BigInteger, String, String>>(function,
                new Callable<Tuple7<String, BigInteger, String, BigInteger, BigInteger, String, String>>() {
                    @Override
                    public Tuple7<String, BigInteger, String, BigInteger, BigInteger, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<String, BigInteger, String, BigInteger, BigInteger, String, String>(
                                (String) results.get(0).getValue(),
                                (BigInteger) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (BigInteger) results.get(3).getValue(),
                                (BigInteger) results.get(4).getValue(),
                                (String) results.get(5).getValue(),
                                (String) results.get(6).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>> getAll() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETALL,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<InstitutionInfo>>() {}, new TypeReference<DynamicArray<ExtraInfo>>() {}));
        return new RemoteFunctionCall<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>>(function,
                new Callable<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>>() {
                    @Override
                    public Tuple2<List<InstitutionInfo>, List<ExtraInfo>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<List<InstitutionInfo>, List<ExtraInfo>>(
                                convertToNative((List<InstitutionInfo>) results.get(0).getValue()),
                                convertToNative((List<ExtraInfo>) results.get(1).getValue()));
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<InstitutionInfo, ExtraInfo>> getByName(String _institutionName) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETBYNAME,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_institutionName)),
                Arrays.<TypeReference<?>>asList(new TypeReference<InstitutionInfo>() {}, new TypeReference<ExtraInfo>() {}));
        return new RemoteFunctionCall<Tuple2<InstitutionInfo, ExtraInfo>>(function,
                new Callable<Tuple2<InstitutionInfo, ExtraInfo>>() {
                    @Override
                    public Tuple2<InstitutionInfo, ExtraInfo> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<InstitutionInfo, ExtraInfo>(
                                (InstitutionInfo) results.get(0),
                                (ExtraInfo) results.get(1));
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<InstitutionInfo, ExtraInfo>> getEntity(InstitutionInfo _institution) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETENTITY,
                Arrays.<Type>asList(_institution),
                Arrays.<TypeReference<?>>asList(new TypeReference<InstitutionInfo>() {}, new TypeReference<ExtraInfo>() {}));
        return new RemoteFunctionCall<Tuple2<InstitutionInfo, ExtraInfo>>(function,
                new Callable<Tuple2<InstitutionInfo, ExtraInfo>>() {
                    @Override
                    public Tuple2<InstitutionInfo, ExtraInfo> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<InstitutionInfo, ExtraInfo>(
                                (InstitutionInfo) results.get(0),
                                (ExtraInfo) results.get(1));
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>> getListPage(BigInteger begin, BigInteger end) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETLISTPAGE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(begin),
                        new org.web3j.abi.datatypes.generated.Uint256(end)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<InstitutionInfo>>() {}, new TypeReference<DynamicArray<ExtraInfo>>() {}));
        return new RemoteFunctionCall<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>>(function,
                new Callable<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>>() {
                    @Override
                    public Tuple2<List<InstitutionInfo>, List<ExtraInfo>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<List<InstitutionInfo>, List<ExtraInfo>>(
                                convertToNative((List<InstitutionInfo>) results.get(0).getValue()),
                                convertToNative((List<ExtraInfo>) results.get(1).getValue()));
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>> getListPageByStatus(BigInteger _status, BigInteger begin, BigInteger end) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETLISTPAGEBYSTATUS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_status),
                        new org.web3j.abi.datatypes.generated.Uint256(begin),
                        new org.web3j.abi.datatypes.generated.Uint256(end)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<InstitutionInfo>>() {}, new TypeReference<DynamicArray<ExtraInfo>>() {}));
        return new RemoteFunctionCall<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>>(function,
                new Callable<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>>() {
                    @Override
                    public Tuple2<List<InstitutionInfo>, List<ExtraInfo>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<List<InstitutionInfo>, List<ExtraInfo>>(
                                convertToNative((List<InstitutionInfo>) results.get(0).getValue()),
                                convertToNative((List<ExtraInfo>) results.get(1).getValue()));
                    }
                });
    }

    public RemoteFunctionCall<Boolean> institutionInfoInserted(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_INSTITUTIONINFOINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> institutionInfoKey(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_INSTITUTIONINFOKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple7<String, String, String, String, String, String, String>> institutionInfos(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_INSTITUTIONINFOS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple7<String, String, String, String, String, String, String>>(function,
                new Callable<Tuple7<String, String, String, String, String, String, String>>() {
                    @Override
                    public Tuple7<String, String, String, String, String, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<String, String, String, String, String, String, String>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (String) results.get(3).getValue(),
                                (String) results.get(4).getValue(),
                                (String) results.get(5).getValue(),
                                (String) results.get(6).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> save(InstitutionInfo _institution, ExtraInfo _extraInfo) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SAVE,
                Arrays.<Type>asList(_institution,
                        _extraInfo),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static InstitutionContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new InstitutionContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static InstitutionContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new InstitutionContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static InstitutionContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new InstitutionContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static InstitutionContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new InstitutionContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<InstitutionContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(InstitutionContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<InstitutionContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(InstitutionContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<InstitutionContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(InstitutionContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<InstitutionContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(InstitutionContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class InstitutionInfo extends DynamicStruct {
        public String id;

        public String account;

        public String password;

        public String institutionName;

        public String institutionPhone;

        public String institutionEmail;

        public String institutionPlace;

        public InstitutionInfo(String id, String account, String password, String institutionName, String institutionPhone, String institutionEmail, String institutionPlace) {
            super(new org.web3j.abi.datatypes.Utf8String(id),new org.web3j.abi.datatypes.Utf8String(account),new org.web3j.abi.datatypes.Utf8String(password),new org.web3j.abi.datatypes.Utf8String(institutionName),new org.web3j.abi.datatypes.Utf8String(institutionPhone),new org.web3j.abi.datatypes.Utf8String(institutionEmail),new org.web3j.abi.datatypes.Utf8String(institutionPlace));
            this.id = id;
            this.account = account;
            this.password = password;
            this.institutionName = institutionName;
            this.institutionPhone = institutionPhone;
            this.institutionEmail = institutionEmail;
            this.institutionPlace = institutionPlace;
        }

        public InstitutionInfo(Utf8String id, Utf8String account, Utf8String password, Utf8String institutionName, Utf8String institutionPhone, Utf8String institutionEmail, Utf8String institutionPlace) {
            super(id,account,password,institutionName,institutionPhone,institutionEmail,institutionPlace);
            this.id = id.getValue();
            this.account = account.getValue();
            this.password = password.getValue();
            this.institutionName = institutionName.getValue();
            this.institutionPhone = institutionPhone.getValue();
            this.institutionEmail = institutionEmail.getValue();
            this.institutionPlace = institutionPlace.getValue();
        }
    }

    public static class ExtraInfo extends DynamicStruct {
        public String id;

        public BigInteger status;

        public String authorCertificatePic;

        public BigInteger createTime;

        public BigInteger auditTime;

        public String message;

        public String reason;

        public ExtraInfo(String id, BigInteger status, String authorCertificatePic, BigInteger createTime, BigInteger auditTime, String message, String reason) {
            super(new org.web3j.abi.datatypes.Utf8String(id),new org.web3j.abi.datatypes.generated.Uint256(status),new org.web3j.abi.datatypes.Utf8String(authorCertificatePic),new org.web3j.abi.datatypes.generated.Uint256(createTime),new org.web3j.abi.datatypes.generated.Uint256(auditTime),new org.web3j.abi.datatypes.Utf8String(message),new org.web3j.abi.datatypes.Utf8String(reason));
            this.id = id;
            this.status = status;
            this.authorCertificatePic = authorCertificatePic;
            this.createTime = createTime;
            this.auditTime = auditTime;
            this.message = message;
            this.reason = reason;
        }

        public ExtraInfo(Utf8String id, Uint256 status, Utf8String authorCertificatePic, Uint256 createTime, Uint256 auditTime, Utf8String message, Utf8String reason) {
            super(id,status,authorCertificatePic,createTime,auditTime,message,reason);
            this.id = id.getValue();
            this.status = status.getValue();
            this.authorCertificatePic = authorCertificatePic.getValue();
            this.createTime = createTime.getValue();
            this.auditTime = auditTime.getValue();
            this.message = message.getValue();
            this.reason = reason.getValue();
        }
    }

    public static class DeleteExtraMsgEventResponse extends BaseEventResponse {
        public Boolean code;
    }

    public static class DeleteMsgEventResponse extends BaseEventResponse {
        public Boolean code;
    }
}
