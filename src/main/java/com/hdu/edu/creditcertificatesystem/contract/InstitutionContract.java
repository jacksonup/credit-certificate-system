package com.hdu.edu.creditcertificatesystem.contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tuples.generated.Tuple7;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class InstitutionContract extends Contract {
    public static final String BINARY = "608060405260028054905060035534801561001957600080fd5b5061459c806100296000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063893e2b7111610071578063893e2b71146101b557806391d5b816146101eb57806397ddd7d714610207578063dd6af5c11461023d578063de3cbd0614610259578063ff145ed81461028a576100b4565b8063485c7947146100b957806352c0faa6146100ea57806353ed51431461011a57806359583c2a146101395780636e49df43146101555780637a92ca3514610185575b600080fd5b6100d360048036038101906100ce91906134c2565b6102ba565b6040516100e19291906138a5565b60405180910390f35b61010460048036038101906100ff91906138dc565b610cd3565b6040516101119190613953565b60405180910390f35b610122610d7f565b6040516101309291906138a5565b60405180910390f35b610153600480360381019061014e9190613b90565b6115bc565b005b61016f600480360381019061016a9190613bd9565b61194b565b60405161017c9190613c3d565b60405180910390f35b61019f600480360381019061019a9190613bd9565b611981565b6040516101ac9190613c3d565b60405180910390f35b6101cf60048036038101906101ca9190613bd9565b6119b7565b6040516101e29796959493929190613c58565b60405180910390f35b61020560048036038101906102009190613e7a565b611dc7565b005b610221600480360381019061021c9190613bd9565b6120c8565b6040516102349796959493929190613ed2565b60405180910390f35b61025760048036038101906102529190614081565b612340565b005b610273600480360381019061026e9190614081565b6127ff565b604051610281929190614270565b60405180910390f35b6102a4600480360381019061029f91906138dc565b612f51565b6040516102b19190613953565b60405180910390f35b606080600060028054905067ffffffffffffffff8111156102de576102dd61397a565b5b60405190808252806020026020018201604052801561031757816020015b61030461328e565b8152602001906001900390816102fc5790505b509050600060068054905067ffffffffffffffff81111561033b5761033a61397a565b5b60405190808252806020026020018201604052801561037457816020015b6103616132cb565b8152602001906001900390816103595790505b5090506000805b6002805490508110156108095760006002828154811061039e5761039d6142a7565b5b906000526020600020016040516103b591906143d6565b90815260200160405180910390206040518060e00160405290816000820180546103de90614305565b80601f016020809104026020016040519081016040528092919081815260200182805461040a90614305565b80156104575780601f1061042c57610100808354040283529160200191610457565b820191906000526020600020905b81548152906001019060200180831161043a57829003601f168201915b5050505050815260200160018201805461047090614305565b80601f016020809104026020016040519081016040528092919081815260200182805461049c90614305565b80156104e95780601f106104be576101008083540402835291602001916104e9565b820191906000526020600020905b8154815290600101906020018083116104cc57829003601f168201915b5050505050815260200160028201805461050290614305565b80601f016020809104026020016040519081016040528092919081815260200182805461052e90614305565b801561057b5780601f106105505761010080835404028352916020019161057b565b820191906000526020600020905b81548152906001019060200180831161055e57829003601f168201915b5050505050815260200160038201805461059490614305565b80601f01602080910402602001604051908101604052809291908181526020018280546105c090614305565b801561060d5780601f106105e25761010080835404028352916020019161060d565b820191906000526020600020905b8154815290600101906020018083116105f057829003601f168201915b5050505050815260200160048201805461062690614305565b80601f016020809104026020016040519081016040528092919081815260200182805461065290614305565b801561069f5780601f106106745761010080835404028352916020019161069f565b820191906000526020600020905b81548152906001019060200180831161068257829003601f168201915b505050505081526020016005820180546106b890614305565b80601f01602080910402602001604051908101604052809291908181526020018280546106e490614305565b80156107315780601f1061070657610100808354040283529160200191610731565b820191906000526020600020905b81548152906001019060200180831161071457829003601f168201915b5050505050815260200160068201805461074a90614305565b80601f016020809104026020016040519081016040528092919081815260200182805461077690614305565b80156107c35780601f10610798576101008083540402835291602001916107c3565b820191906000526020600020905b8154815290600101906020018083116107a657829003601f168201915b5050505050815250508483806107d89061441c565b9450815181106107eb576107ea6142a7565b5b602002602001018190525080806108019061441c565b91505061037b565b506000805b600680549050811015610b0457600460068281548110610831576108306142a7565b5b9060005260206000200160405161084891906143d6565b90815260200160405180910390206040518060e001604052908160008201805461087190614305565b80601f016020809104026020016040519081016040528092919081815260200182805461089d90614305565b80156108ea5780601f106108bf576101008083540402835291602001916108ea565b820191906000526020600020905b8154815290600101906020018083116108cd57829003601f168201915b505050505081526020016001820154815260200160028201805461090d90614305565b80601f016020809104026020016040519081016040528092919081815260200182805461093990614305565b80156109865780601f1061095b57610100808354040283529160200191610986565b820191906000526020600020905b81548152906001019060200180831161096957829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820180546109b390614305565b80601f01602080910402602001604051908101604052809291908181526020018280546109df90614305565b8015610a2c5780601f10610a0157610100808354040283529160200191610a2c565b820191906000526020600020905b815481529060010190602001808311610a0f57829003601f168201915b50505050508152602001600682018054610a4590614305565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7190614305565b8015610abe5780601f10610a9357610100808354040283529160200191610abe565b820191906000526020600020905b815481529060010190602001808311610aa157829003601f168201915b505050505081525050848380610ad39061441c565b945081518110610ae657610ae56142a7565b5b60200260200101819052508080610afc9061441c565b91505061080e565b5087871015610b165750505050610ccc565b600182610b239190614465565b871115610b3a57600182610b379190614465565b96505b60018888610b489190614465565b610b529190614499565b67ffffffffffffffff811115610b6b57610b6a61397a565b5b604051908082528060200260200182016040528015610ba457816020015b610b9161328e565b815260200190600190039081610b895790505b50955060018888610bb59190614465565b610bbf9190614499565b67ffffffffffffffff811115610bd857610bd761397a565b5b604051908082528060200260200182016040528015610c1157816020015b610bfe6132cb565b815260200190600190039081610bf65790505b509450600091506000905060008890505b878111610cc657848181518110610c3c57610c3b6142a7565b5b6020026020010151878480610c509061441c565b955081518110610c6357610c626142a7565b5b6020026020010181905250838181518110610c8157610c806142a7565b5b6020026020010151868380610c959061441c565b945081518110610ca857610ca76142a7565b5b60200260200101819052508080610cbe9061441c565b915050610c22565b50505050505b9250929050565b60068181548110610ce357600080fd5b906000526020600020016000915090508054610cfe90614305565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2a90614305565b8015610d775780601f10610d4c57610100808354040283529160200191610d77565b820191906000526020600020905b815481529060010190602001808311610d5a57829003601f168201915b505050505081565b606080600060028054905067ffffffffffffffff811115610da357610da261397a565b5b604051908082528060200260200182016040528015610ddc57816020015b610dc961328e565b815260200190600190039081610dc15790505b509050600060068054905067ffffffffffffffff811115610e0057610dff61397a565b5b604051908082528060200260200182016040528015610e3957816020015b610e266132cb565b815260200190600190039081610e1e5790505b50905060005b6002805490508110156112c157600060028281548110610e6257610e616142a7565b5b90600052602060002001604051610e7991906143d6565b90815260200160405180910390206040518060e0016040529081600082018054610ea290614305565b80601f0160208091040260200160405190810160405280929190818152602001828054610ece90614305565b8015610f1b5780601f10610ef057610100808354040283529160200191610f1b565b820191906000526020600020905b815481529060010190602001808311610efe57829003601f168201915b50505050508152602001600182018054610f3490614305565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6090614305565b8015610fad5780601f10610f8257610100808354040283529160200191610fad565b820191906000526020600020905b815481529060010190602001808311610f9057829003601f168201915b50505050508152602001600282018054610fc690614305565b80601f0160208091040260200160405190810160405280929190818152602001828054610ff290614305565b801561103f5780601f106110145761010080835404028352916020019161103f565b820191906000526020600020905b81548152906001019060200180831161102257829003601f168201915b5050505050815260200160038201805461105890614305565b80601f016020809104026020016040519081016040528092919081815260200182805461108490614305565b80156110d15780601f106110a6576101008083540402835291602001916110d1565b820191906000526020600020905b8154815290600101906020018083116110b457829003601f168201915b505050505081526020016004820180546110ea90614305565b80601f016020809104026020016040519081016040528092919081815260200182805461111690614305565b80156111635780601f1061113857610100808354040283529160200191611163565b820191906000526020600020905b81548152906001019060200180831161114657829003601f168201915b5050505050815260200160058201805461117c90614305565b80601f01602080910402602001604051908101604052809291908181526020018280546111a890614305565b80156111f55780601f106111ca576101008083540402835291602001916111f5565b820191906000526020600020905b8154815290600101906020018083116111d857829003601f168201915b5050505050815260200160068201805461120e90614305565b80601f016020809104026020016040519081016040528092919081815260200182805461123a90614305565b80156112875780601f1061125c57610100808354040283529160200191611287565b820191906000526020600020905b81548152906001019060200180831161126a57829003601f168201915b5050505050815250508382815181106112a3576112a26142a7565b5b602002602001018190525080806112b99061441c565b915050610e3f565b5060005b6006805490508110156115af576004600682815481106112e8576112e76142a7565b5b906000526020600020016040516112ff91906143d6565b90815260200160405180910390206040518060e001604052908160008201805461132890614305565b80601f016020809104026020016040519081016040528092919081815260200182805461135490614305565b80156113a15780601f10611376576101008083540402835291602001916113a1565b820191906000526020600020905b81548152906001019060200180831161138457829003601f168201915b50505050508152602001600182015481526020016002820180546113c490614305565b80601f01602080910402602001604051908101604052809291908181526020018280546113f090614305565b801561143d5780601f106114125761010080835404028352916020019161143d565b820191906000526020600020905b81548152906001019060200180831161142057829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201805461146a90614305565b80601f016020809104026020016040519081016040528092919081815260200182805461149690614305565b80156114e35780601f106114b8576101008083540402835291602001916114e3565b820191906000526020600020905b8154815290600101906020018083116114c657829003601f168201915b505050505081526020016006820180546114fc90614305565b80601f016020809104026020016040519081016040528092919081815260200182805461152890614305565b80156115755780601f1061154a57610100808354040283529160200191611575565b820191906000526020600020905b81548152906001019060200180831161155857829003601f168201915b505050505081525050828281518110611591576115906142a7565b5b602002602001018190525080806115a79061441c565b9150506112c5565b5081819350935050509091565b60005b81518110156119475760018282815181106115dd576115dc6142a7565b5b60200260200101516040516115f29190614520565b908152602001604051809103902060009054906101000a900460ff16156118fb576000806000600185858151811061162d5761162c6142a7565b5b60200260200101516040516116429190614520565b908152602001604051809103902060006101000a81548160ff0219169083151502179055506000600585858151811061167e5761167d6142a7565b5b60200260200101516040516116939190614520565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600091505b6002805490508210156117b1576117948484815181106116e0576116df6142a7565b5b6020026020010151600284815481106116fc576116fb6142a7565b5b90600052602060002001805461171190614305565b80601f016020809104026020016040519081016040528092919081815260200182805461173d90614305565b801561178a5780601f1061175f5761010080835404028352916020019161178a565b820191906000526020600020905b81548152906001019060200180831161176d57829003601f168201915b5050505050612ffd565b1561179e576117b1565b81806117a99061441c565b9250506116bd565b600090505b6006805490508110156118aa5761188d8484815181106117d9576117d86142a7565b5b6020026020010151600683815481106117f5576117f46142a7565b5b90600052602060002001805461180a90614305565b80601f016020809104026020016040519081016040528092919081815260200182805461183690614305565b80156118835780601f1061185857610100808354040283529160200191611883565b820191906000526020600020905b81548152906001019060200180831161186657829003601f168201915b5050505050612ffd565b15611897576118aa565b80806118a29061441c565b9150506117b6565b6118b3826130da565b6118bc816131b4565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a8960016040516118ec9190613c3d565b60405180910390a15050611934565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a89600060405161192b9190613c3d565b60405180910390a15b808061193f9061441c565b9150506115bf565b5050565b6005818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546119f090614305565b80601f0160208091040260200160405190810160405280929190818152602001828054611a1c90614305565b8015611a695780601f10611a3e57610100808354040283529160200191611a69565b820191906000526020600020905b815481529060010190602001808311611a4c57829003601f168201915b505050505090806001018054611a7e90614305565b80601f0160208091040260200160405190810160405280929190818152602001828054611aaa90614305565b8015611af75780601f10611acc57610100808354040283529160200191611af7565b820191906000526020600020905b815481529060010190602001808311611ada57829003601f168201915b505050505090806002018054611b0c90614305565b80601f0160208091040260200160405190810160405280929190818152602001828054611b3890614305565b8015611b855780601f10611b5a57610100808354040283529160200191611b85565b820191906000526020600020905b815481529060010190602001808311611b6857829003601f168201915b505050505090806003018054611b9a90614305565b80601f0160208091040260200160405190810160405280929190818152602001828054611bc690614305565b8015611c135780601f10611be857610100808354040283529160200191611c13565b820191906000526020600020905b815481529060010190602001808311611bf657829003601f168201915b505050505090806004018054611c2890614305565b80601f0160208091040260200160405190810160405280929190818152602001828054611c5490614305565b8015611ca15780601f10611c7657610100808354040283529160200191611ca1565b820191906000526020600020905b815481529060010190602001808311611c8457829003601f168201915b505050505090806005018054611cb690614305565b80601f0160208091040260200160405190810160405280929190818152602001828054611ce290614305565b8015611d2f5780601f10611d0457610100808354040283529160200191611d2f565b820191906000526020600020905b815481529060010190602001808311611d1257829003601f168201915b505050505090806006018054611d4490614305565b80601f0160208091040260200160405190810160405280929190818152602001828054611d7090614305565b8015611dbd5780601f10611d9257610100808354040283529160200191611dbd565b820191906000526020600020905b815481529060010190602001808311611da057829003601f168201915b5050505050905087565b60018160000151604051611ddb9190614520565b908152602001604051809103902060009054906101000a900460ff161561208c57600080600060018460000151604051611e159190614520565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600060058460000151604051611e509190614520565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600091505b600280549050821015611f5857611f3b836000015160028481548110611ea357611ea26142a7565b5b906000526020600020018054611eb890614305565b80601f0160208091040260200160405190810160405280929190818152602001828054611ee490614305565b8015611f315780601f10611f0657610100808354040283529160200191611f31565b820191906000526020600020905b815481529060010190602001808311611f1457829003601f168201915b5050505050612ffd565b15611f4557611f58565b8180611f509061441c565b925050611e7a565b600090505b60068054905081101561203b5761201e836000015160068381548110611f8657611f856142a7565b5b906000526020600020018054611f9b90614305565b80601f0160208091040260200160405190810160405280929190818152602001828054611fc790614305565b80156120145780601f10611fe957610100808354040283529160200191612014565b820191906000526020600020905b815481529060010190602001808311611ff757829003601f168201915b5050505050612ffd565b156120285761203b565b80806120339061441c565b915050611f5d565b612044826130da565b61204d816131b4565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a89600160405161207d9190613c3d565b60405180910390a150506120c5565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a8960006040516120bc9190613c3d565b60405180910390a15b50565b60048180516020810182018051848252602083016020850120818352809550505050505060009150905080600001805461210190614305565b80601f016020809104026020016040519081016040528092919081815260200182805461212d90614305565b801561217a5780601f1061214f5761010080835404028352916020019161217a565b820191906000526020600020905b81548152906001019060200180831161215d57829003601f168201915b50505050509080600101549080600201805461219590614305565b80601f01602080910402602001604051908101604052809291908181526020018280546121c190614305565b801561220e5780601f106121e35761010080835404028352916020019161220e565b820191906000526020600020905b8154815290600101906020018083116121f157829003601f168201915b50505050509080600301549080600401549080600501805461222f90614305565b80601f016020809104026020016040519081016040528092919081815260200182805461225b90614305565b80156122a85780601f1061227d576101008083540402835291602001916122a8565b820191906000526020600020905b81548152906001019060200180831161228b57829003601f168201915b5050505050908060060180546122bd90614305565b80601f01602080910402602001604051908101604052809291908181526020018280546122e990614305565b80156123365780601f1061230b57610100808354040283529160200191612336565b820191906000526020600020905b81548152906001019060200180831161231957829003601f168201915b5050505050905087565b600182600001516040516123549190614520565b908152602001604051809103902060009054906101000a900460ff166124e45781600083600001516040516123899190614520565b908152602001604051809103902060008201518160000190805190602001906123b3929190613308565b5060208201518160010190805190602001906123d0929190613308565b5060408201518160020190805190602001906123ed929190613308565b50606082015181600301908051906020019061240a929190613308565b506080820151816004019080519060200190612427929190613308565b5060a0820151816005019080519060200190612444929190613308565b5060c0820151816006019080519060200190612461929190613308565b50905050600180836000015160405161247a9190614520565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600282600001519080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906124de929190613308565b506125d6565b81600083600001516040516124f99190614520565b90815260200160405180910390206000820151816000019080519060200190612523929190613308565b506020820151816001019080519060200190612540929190613308565b50604082015181600201908051906020019061255d929190613308565b50606082015181600301908051906020019061257a929190613308565b506080820151816004019080519060200190612597929190613308565b5060a08201518160050190805190602001906125b4929190613308565b5060c08201518160060190805190602001906125d1929190613308565b509050505b600581600001516040516125ea9190614520565b908152602001604051809103902060009054906101000a900460ff1661274257806004826000015160405161261f9190614520565b90815260200160405180910390206000820151816000019080519060200190612649929190613308565b50602082015181600101556040820151816002019080519060200190612670929190613308565b50606082015181600301556080820151816004015560a08201518160050190805190602001906126a1929190613308565b5060c08201518160060190805190602001906126be929190613308565b509050506001600582600001516040516126d89190614520565b908152602001604051809103902060006101000a81548160ff0219169083151502179055506006816000015190806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061273c929190613308565b506127fb565b80600482600001516040516127579190614520565b90815260200160405180910390206000820151816000019080519060200190612781929190613308565b506020820151816001015560408201518160020190805190602001906127a8929190613308565b50606082015181600301556080820151816004015560a08201518160050190805190602001906127d9929190613308565b5060c08201518160060190805190602001906127f6929190613308565b509050505b5050565b61280761328e565b61280f6132cb565b600184600001516040516128239190614520565b908152602001604051809103902060009054906101000a900460ff16801561287757506005836000015160405161285a9190614520565b908152602001604051809103902060009054906101000a900460ff165b15612f4957600084600001516040516128909190614520565b9081526020016040518091039020600484600001516040516128b29190614520565b9081526020016040518091039020816040518060e00160405290816000820180546128dc90614305565b80601f016020809104026020016040519081016040528092919081815260200182805461290890614305565b80156129555780601f1061292a57610100808354040283529160200191612955565b820191906000526020600020905b81548152906001019060200180831161293857829003601f168201915b5050505050815260200160018201805461296e90614305565b80601f016020809104026020016040519081016040528092919081815260200182805461299a90614305565b80156129e75780601f106129bc576101008083540402835291602001916129e7565b820191906000526020600020905b8154815290600101906020018083116129ca57829003601f168201915b50505050508152602001600282018054612a0090614305565b80601f0160208091040260200160405190810160405280929190818152602001828054612a2c90614305565b8015612a795780601f10612a4e57610100808354040283529160200191612a79565b820191906000526020600020905b815481529060010190602001808311612a5c57829003601f168201915b50505050508152602001600382018054612a9290614305565b80601f0160208091040260200160405190810160405280929190818152602001828054612abe90614305565b8015612b0b5780601f10612ae057610100808354040283529160200191612b0b565b820191906000526020600020905b815481529060010190602001808311612aee57829003601f168201915b50505050508152602001600482018054612b2490614305565b80601f0160208091040260200160405190810160405280929190818152602001828054612b5090614305565b8015612b9d5780601f10612b7257610100808354040283529160200191612b9d565b820191906000526020600020905b815481529060010190602001808311612b8057829003601f168201915b50505050508152602001600582018054612bb690614305565b80601f0160208091040260200160405190810160405280929190818152602001828054612be290614305565b8015612c2f5780601f10612c0457610100808354040283529160200191612c2f565b820191906000526020600020905b815481529060010190602001808311612c1257829003601f168201915b50505050508152602001600682018054612c4890614305565b80601f0160208091040260200160405190810160405280929190818152602001828054612c7490614305565b8015612cc15780601f10612c9657610100808354040283529160200191612cc1565b820191906000526020600020905b815481529060010190602001808311612ca457829003601f168201915b5050505050815250509150806040518060e0016040529081600082018054612ce890614305565b80601f0160208091040260200160405190810160405280929190818152602001828054612d1490614305565b8015612d615780601f10612d3657610100808354040283529160200191612d61565b820191906000526020600020905b815481529060010190602001808311612d4457829003601f168201915b5050505050815260200160018201548152602001600282018054612d8490614305565b80601f0160208091040260200160405190810160405280929190818152602001828054612db090614305565b8015612dfd5780601f10612dd257610100808354040283529160200191612dfd565b820191906000526020600020905b815481529060010190602001808311612de057829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582018054612e2a90614305565b80601f0160208091040260200160405190810160405280929190818152602001828054612e5690614305565b8015612ea35780601f10612e7857610100808354040283529160200191612ea3565b820191906000526020600020905b815481529060010190602001808311612e8657829003601f168201915b50505050508152602001600682018054612ebc90614305565b80601f0160208091040260200160405190810160405280929190818152602001828054612ee890614305565b8015612f355780601f10612f0a57610100808354040283529160200191612f35565b820191906000526020600020905b815481529060010190602001808311612f1857829003601f168201915b505050505081525050905091509150612f4a565b5b9250929050565b60028181548110612f6157600080fd5b906000526020600020016000915090508054612f7c90614305565b80601f0160208091040260200160405190810160405280929190818152602001828054612fa890614305565b8015612ff55780601f10612fca57610100808354040283529160200191612ff5565b820191906000526020600020905b815481529060010190602001808311612fd857829003601f168201915b505050505081565b6000808390506000839050805182511461301c576000925050506130d4565b60005b82518110156130cc5781818151811061303b5761303a6142a7565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191683828151811061307b5761307a6142a7565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146130b957600093505050506130d4565b80806130c49061441c565b91505061301f565b506001925050505b92915050565b600060028054905090508082106130f157506131b1565b60008290505b6001826131049190614465565b81101561317e57600260018261311a9190614499565b8154811061312b5761312a6142a7565b5b9060005260206000200160028281548110613149576131486142a7565b5b9060005260206000200190805461315f90614305565b61316a92919061338e565b5080806131769061441c565b9150506130f7565b50600280548061319157613190614537565b5b6001900381819060005260206000200160006131ad919061341b565b9055505b50565b600060068054905090508082106131cb575061328b565b60008290505b6001826131de9190614465565b8110156132585760066001826131f49190614499565b81548110613205576132046142a7565b5b9060005260206000200160068281548110613223576132226142a7565b5b9060005260206000200190805461323990614305565b61324492919061338e565b5080806132509061441c565b9150506131d1565b50600680548061326b5761326a614537565b5b600190038181906000526020600020016000613287919061341b565b9055505b50565b6040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6040518060e00160405280606081526020016000815260200160608152602001600081526020016000815260200160608152602001606081525090565b82805461331490614305565b90600052602060002090601f016020900481019282613336576000855561337d565b82601f1061334f57805160ff191683800117855561337d565b8280016001018555821561337d579182015b8281111561337c578251825591602001919060010190613361565b5b50905061338a919061345b565b5090565b82805461339a90614305565b90600052602060002090601f0160209004810192826133bc576000855561340a565b82601f106133cd578054855561340a565b8280016001018555821561340a57600052602060002091601f016020900482015b828111156134095782548255916001019190600101906133ee565b5b509050613417919061345b565b5090565b50805461342790614305565b6000825580601f106134395750613458565b601f016020900490600052602060002090810190613457919061345b565b5b50565b5b8082111561347457600081600090555060010161345c565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61349f8161348c565b81146134aa57600080fd5b50565b6000813590506134bc81613496565b92915050565b600080604083850312156134d9576134d8613482565b5b60006134e7858286016134ad565b92505060206134f8858286016134ad565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561356857808201518184015260208101905061354d565b83811115613577576000848401525b50505050565b6000601f19601f8301169050919050565b60006135998261352e565b6135a38185613539565b93506135b381856020860161354a565b6135bc8161357d565b840191505092915050565b600060e08301600083015184820360008601526135e4828261358e565b915050602083015184820360208601526135fe828261358e565b91505060408301518482036040860152613618828261358e565b91505060608301518482036060860152613632828261358e565b9150506080830151848203608086015261364c828261358e565b91505060a083015184820360a0860152613666828261358e565b91505060c083015184820360c0860152613680828261358e565b9150508091505092915050565b600061369983836135c7565b905092915050565b6000602082019050919050565b60006136b982613502565b6136c3818561350d565b9350836020820285016136d58561351e565b8060005b8581101561371157848403895281516136f2858261368d565b94506136fd836136a1565b925060208a019950506001810190506136d9565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6137588161348c565b82525050565b600060e083016000830151848203600086015261377b828261358e565b9150506020830151613790602086018261374f565b50604083015184820360408601526137a8828261358e565b91505060608301516137bd606086018261374f565b5060808301516137d0608086018261374f565b5060a083015184820360a08601526137e8828261358e565b91505060c083015184820360c0860152613802828261358e565b9150508091505092915050565b600061381b838361375e565b905092915050565b6000602082019050919050565b600061383b82613723565b613845818561372e565b9350836020820285016138578561373f565b8060005b858110156138935784840389528151613874858261380f565b945061387f83613823565b925060208a0199505060018101905061385b565b50829750879550505050505092915050565b600060408201905081810360008301526138bf81856136ae565b905081810360208301526138d38184613830565b90509392505050565b6000602082840312156138f2576138f1613482565b5b6000613900848285016134ad565b91505092915050565b600082825260208201905092915050565b60006139258261352e565b61392f8185613909565b935061393f81856020860161354a565b6139488161357d565b840191505092915050565b6000602082019050818103600083015261396d818461391a565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6139b28261357d565b810181811067ffffffffffffffff821117156139d1576139d061397a565b5b80604052505050565b60006139e4613478565b90506139f082826139a9565b919050565b600067ffffffffffffffff821115613a1057613a0f61397a565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff821115613a4657613a4561397a565b5b613a4f8261357d565b9050602081019050919050565b82818337600083830152505050565b6000613a7e613a7984613a2b565b6139da565b905082815260208101848484011115613a9a57613a99613a26565b5b613aa5848285613a5c565b509392505050565b600082601f830112613ac257613ac1613975565b5b8135613ad2848260208601613a6b565b91505092915050565b6000613aee613ae9846139f5565b6139da565b90508083825260208201905060208402830185811115613b1157613b10613a21565b5b835b81811015613b5857803567ffffffffffffffff811115613b3657613b35613975565b5b808601613b438982613aad565b85526020850194505050602081019050613b13565b5050509392505050565b600082601f830112613b7757613b76613975565b5b8135613b87848260208601613adb565b91505092915050565b600060208284031215613ba657613ba5613482565b5b600082013567ffffffffffffffff811115613bc457613bc3613487565b5b613bd084828501613b62565b91505092915050565b600060208284031215613bef57613bee613482565b5b600082013567ffffffffffffffff811115613c0d57613c0c613487565b5b613c1984828501613aad565b91505092915050565b60008115159050919050565b613c3781613c22565b82525050565b6000602082019050613c526000830184613c2e565b92915050565b600060e0820190508181036000830152613c72818a61391a565b90508181036020830152613c86818961391a565b90508181036040830152613c9a818861391a565b90508181036060830152613cae818761391a565b90508181036080830152613cc2818661391a565b905081810360a0830152613cd6818561391a565b905081810360c0830152613cea818461391a565b905098975050505050505050565b600080fd5b600080fd5b600060e08284031215613d1857613d17613cf8565b5b613d2260e06139da565b9050600082013567ffffffffffffffff811115613d4257613d41613cfd565b5b613d4e84828501613aad565b600083015250602082013567ffffffffffffffff811115613d7257613d71613cfd565b5b613d7e84828501613aad565b602083015250604082013567ffffffffffffffff811115613da257613da1613cfd565b5b613dae84828501613aad565b604083015250606082013567ffffffffffffffff811115613dd257613dd1613cfd565b5b613dde84828501613aad565b606083015250608082013567ffffffffffffffff811115613e0257613e01613cfd565b5b613e0e84828501613aad565b60808301525060a082013567ffffffffffffffff811115613e3257613e31613cfd565b5b613e3e84828501613aad565b60a08301525060c082013567ffffffffffffffff811115613e6257613e61613cfd565b5b613e6e84828501613aad565b60c08301525092915050565b600060208284031215613e9057613e8f613482565b5b600082013567ffffffffffffffff811115613eae57613ead613487565b5b613eba84828501613d02565b91505092915050565b613ecc8161348c565b82525050565b600060e0820190508181036000830152613eec818a61391a565b9050613efb6020830189613ec3565b8181036040830152613f0d818861391a565b9050613f1c6060830187613ec3565b613f296080830186613ec3565b81810360a0830152613f3b818561391a565b905081810360c0830152613f4f818461391a565b905098975050505050505050565b600060e08284031215613f7357613f72613cf8565b5b613f7d60e06139da565b9050600082013567ffffffffffffffff811115613f9d57613f9c613cfd565b5b613fa984828501613aad565b6000830152506020613fbd848285016134ad565b602083015250604082013567ffffffffffffffff811115613fe157613fe0613cfd565b5b613fed84828501613aad565b6040830152506060614001848285016134ad565b6060830152506080614015848285016134ad565b60808301525060a082013567ffffffffffffffff81111561403957614038613cfd565b5b61404584828501613aad565b60a08301525060c082013567ffffffffffffffff81111561406957614068613cfd565b5b61407584828501613aad565b60c08301525092915050565b6000806040838503121561409857614097613482565b5b600083013567ffffffffffffffff8111156140b6576140b5613487565b5b6140c285828601613d02565b925050602083013567ffffffffffffffff8111156140e3576140e2613487565b5b6140ef85828601613f5d565b9150509250929050565b600060e0830160008301518482036000860152614116828261358e565b91505060208301518482036020860152614130828261358e565b9150506040830151848203604086015261414a828261358e565b91505060608301518482036060860152614164828261358e565b9150506080830151848203608086015261417e828261358e565b91505060a083015184820360a0860152614198828261358e565b91505060c083015184820360c08601526141b2828261358e565b9150508091505092915050565b600060e08301600083015184820360008601526141dc828261358e565b91505060208301516141f1602086018261374f565b5060408301518482036040860152614209828261358e565b915050606083015161421e606086018261374f565b506080830151614231608086018261374f565b5060a083015184820360a0860152614249828261358e565b91505060c083015184820360c0860152614263828261358e565b9150508091505092915050565b6000604082019050818103600083015261428a81856140f9565b9050818103602083015261429e81846141bf565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061431d57607f821691505b60208210811415614331576143306142d6565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461436481614305565b61436e8186614337565b94506001821660008114614389576001811461439a576143cd565b60ff198316865281860193506143cd565b6143a385614342565b60005b838110156143c5578154818901526001820191506020810190506143a6565b838801955050505b50505092915050565b60006143e28284614357565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006144278261348c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561445a576144596143ed565b5b600182019050919050565b60006144708261348c565b915061447b8361348c565b92508282101561448e5761448d6143ed565b5b828203905092915050565b60006144a48261348c565b91506144af8361348c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156144e4576144e36143ed565b5b828201905092915050565b60006144fa8261352e565b6145048185614337565b935061451481856020860161354a565b80840191505092915050565b600061452c82846144ef565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212204e333b507d4ead0602b00ee68215a9041dbfae6d40d5e9bdcfed3016f7c32d0e64736f6c634300080a0033";

    public static final String FUNC_BATCHDELETE = "batchDelete";

    public static final String FUNC_DELETESTUDENT = "deleteStudent";

    public static final String FUNC_EXTRAINFOINSERTED = "extraInfoInserted";

    public static final String FUNC_EXTRAINFOKEY = "extraInfoKey";

    public static final String FUNC_EXTRAINFOS = "extraInfos";

    public static final String FUNC_GETALL = "getAll";

    public static final String FUNC_GETENTITY = "getEntity";

    public static final String FUNC_GETLISTPAGE = "getListPage";

    public static final String FUNC_INSTITUTIONINFOINSERTED = "institutionInfoInserted";

    public static final String FUNC_INSTITUTIONINFOKEY = "institutionInfoKey";

    public static final String FUNC_INSTITUTIONINFOS = "institutionInfos";

    public static final String FUNC_SAVE = "save";

    public static final Event DELETEEXTRAMSG_EVENT = new Event("DeleteExtraMsg",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
    ;

    public static final Event DELETEMSG_EVENT = new Event("DeleteMsg",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
    ;

    @Deprecated
    protected InstitutionContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected InstitutionContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected InstitutionContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected InstitutionContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<DeleteExtraMsgEventResponse> getDeleteExtraMsgEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEEXTRAMSG_EVENT, transactionReceipt);
        ArrayList<DeleteExtraMsgEventResponse> responses = new ArrayList<DeleteExtraMsgEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DeleteExtraMsgEventResponse typedResponse = new DeleteExtraMsgEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.code = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DeleteExtraMsgEventResponse> deleteExtraMsgEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, DeleteExtraMsgEventResponse>() {
            @Override
            public DeleteExtraMsgEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DELETEEXTRAMSG_EVENT, log);
                DeleteExtraMsgEventResponse typedResponse = new DeleteExtraMsgEventResponse();
                typedResponse.log = log;
                typedResponse.code = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<DeleteExtraMsgEventResponse> deleteExtraMsgEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DELETEEXTRAMSG_EVENT));
        return deleteExtraMsgEventFlowable(filter);
    }

    public List<DeleteMsgEventResponse> getDeleteMsgEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEMSG_EVENT, transactionReceipt);
        ArrayList<DeleteMsgEventResponse> responses = new ArrayList<DeleteMsgEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.code = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, DeleteMsgEventResponse>() {
            @Override
            public DeleteMsgEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DELETEMSG_EVENT, log);
                DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
                typedResponse.log = log;
                typedResponse.code = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DELETEMSG_EVENT));
        return deleteMsgEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> batchDelete(List<String> idList) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_BATCHDELETE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                        org.web3j.abi.datatypes.Utf8String.class,
                        org.web3j.abi.Utils.typeMap(idList, org.web3j.abi.datatypes.Utf8String.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deleteStudent(InstitutionInfo _institution) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DELETESTUDENT,
                Arrays.<Type>asList(_institution),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> extraInfoInserted(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_EXTRAINFOINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> extraInfoKey(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_EXTRAINFOKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple7<String, BigInteger, String, BigInteger, BigInteger, String, String>> extraInfos(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_EXTRAINFOS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple7<String, BigInteger, String, BigInteger, BigInteger, String, String>>(function,
                new Callable<Tuple7<String, BigInteger, String, BigInteger, BigInteger, String, String>>() {
                    @Override
                    public Tuple7<String, BigInteger, String, BigInteger, BigInteger, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<String, BigInteger, String, BigInteger, BigInteger, String, String>(
                                (String) results.get(0).getValue(),
                                (BigInteger) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (BigInteger) results.get(3).getValue(),
                                (BigInteger) results.get(4).getValue(),
                                (String) results.get(5).getValue(),
                                (String) results.get(6).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>> getAll() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETALL,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<InstitutionInfo>>() {}, new TypeReference<DynamicArray<ExtraInfo>>() {}));
        return new RemoteFunctionCall<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>>(function,
                new Callable<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>>() {
                    @Override
                    public Tuple2<List<InstitutionInfo>, List<ExtraInfo>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<List<InstitutionInfo>, List<ExtraInfo>>(
                                convertToNative((List<InstitutionInfo>) results.get(0).getValue()),
                                convertToNative((List<ExtraInfo>) results.get(1).getValue()));
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<InstitutionInfo, ExtraInfo>> getEntity(InstitutionInfo _institution, ExtraInfo _extraInfo) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETENTITY,
                Arrays.<Type>asList(_institution,
                        _extraInfo),
                Arrays.<TypeReference<?>>asList(new TypeReference<InstitutionInfo>() {}, new TypeReference<ExtraInfo>() {}));
        return new RemoteFunctionCall<Tuple2<InstitutionInfo, ExtraInfo>>(function,
                new Callable<Tuple2<InstitutionInfo, ExtraInfo>>() {
                    @Override
                    public Tuple2<InstitutionInfo, ExtraInfo> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<InstitutionInfo, ExtraInfo>(
                                (InstitutionInfo) results.get(0),
                                (ExtraInfo) results.get(1));
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>> getListPage(BigInteger begin, BigInteger end) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETLISTPAGE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(begin),
                        new org.web3j.abi.datatypes.generated.Uint256(end)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<InstitutionInfo>>() {}, new TypeReference<DynamicArray<ExtraInfo>>() {}));
        return new RemoteFunctionCall<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>>(function,
                new Callable<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>>() {
                    @Override
                    public Tuple2<List<InstitutionInfo>, List<ExtraInfo>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<List<InstitutionInfo>, List<ExtraInfo>>(
                                convertToNative((List<InstitutionInfo>) results.get(0).getValue()),
                                convertToNative((List<ExtraInfo>) results.get(1).getValue()));
                    }
                });
    }

    public RemoteFunctionCall<Boolean> institutionInfoInserted(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_INSTITUTIONINFOINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> institutionInfoKey(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_INSTITUTIONINFOKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple7<String, String, String, String, String, String, String>> institutionInfos(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_INSTITUTIONINFOS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple7<String, String, String, String, String, String, String>>(function,
                new Callable<Tuple7<String, String, String, String, String, String, String>>() {
                    @Override
                    public Tuple7<String, String, String, String, String, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<String, String, String, String, String, String, String>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (String) results.get(3).getValue(),
                                (String) results.get(4).getValue(),
                                (String) results.get(5).getValue(),
                                (String) results.get(6).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> save(InstitutionInfo _institution, ExtraInfo _extraInfo) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SAVE,
                Arrays.<Type>asList(_institution,
                        _extraInfo),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static InstitutionContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new InstitutionContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static InstitutionContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new InstitutionContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static InstitutionContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new InstitutionContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static InstitutionContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new InstitutionContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<InstitutionContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(InstitutionContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<InstitutionContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(InstitutionContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<InstitutionContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(InstitutionContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<InstitutionContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(InstitutionContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class InstitutionInfo extends DynamicStruct {
        public String id;

        public String account;

        public String password;

        public String institutionName;

        public String institutionPhone;

        public String institutionEmail;

        public String institutionPlace;

        public InstitutionInfo(String id, String account, String password, String institutionName, String institutionPhone, String institutionEmail, String institutionPlace) {
            super(new org.web3j.abi.datatypes.Utf8String(id),new org.web3j.abi.datatypes.Utf8String(account),new org.web3j.abi.datatypes.Utf8String(password),new org.web3j.abi.datatypes.Utf8String(institutionName),new org.web3j.abi.datatypes.Utf8String(institutionPhone),new org.web3j.abi.datatypes.Utf8String(institutionEmail),new org.web3j.abi.datatypes.Utf8String(institutionPlace));
            this.id = id;
            this.account = account;
            this.password = password;
            this.institutionName = institutionName;
            this.institutionPhone = institutionPhone;
            this.institutionEmail = institutionEmail;
            this.institutionPlace = institutionPlace;
        }

        public InstitutionInfo(Utf8String id, Utf8String account, Utf8String password, Utf8String institutionName, Utf8String institutionPhone, Utf8String institutionEmail, Utf8String institutionPlace) {
            super(id,account,password,institutionName,institutionPhone,institutionEmail,institutionPlace);
            this.id = id.getValue();
            this.account = account.getValue();
            this.password = password.getValue();
            this.institutionName = institutionName.getValue();
            this.institutionPhone = institutionPhone.getValue();
            this.institutionEmail = institutionEmail.getValue();
            this.institutionPlace = institutionPlace.getValue();
        }
    }

    public static class ExtraInfo extends DynamicStruct {
        public String id;

        public BigInteger status;

        public String authorCertificatePic;

        public BigInteger createTime;

        public BigInteger auditTime;

        public String message;

        public String reason;

        public ExtraInfo(String id, BigInteger status, String authorCertificatePic, BigInteger createTime, BigInteger auditTime, String message, String reason) {
            super(new org.web3j.abi.datatypes.Utf8String(id),new org.web3j.abi.datatypes.generated.Uint256(status),new org.web3j.abi.datatypes.Utf8String(authorCertificatePic),new org.web3j.abi.datatypes.generated.Uint256(createTime),new org.web3j.abi.datatypes.generated.Uint256(auditTime),new org.web3j.abi.datatypes.Utf8String(message),new org.web3j.abi.datatypes.Utf8String(reason));
            this.id = id;
            this.status = status;
            this.authorCertificatePic = authorCertificatePic;
            this.createTime = createTime;
            this.auditTime = auditTime;
            this.message = message;
            this.reason = reason;
        }

        public ExtraInfo(Utf8String id, Uint256 status, Utf8String authorCertificatePic, Uint256 createTime, Uint256 auditTime, Utf8String message, Utf8String reason) {
            super(id,status,authorCertificatePic,createTime,auditTime,message,reason);
            this.id = id.getValue();
            this.status = status.getValue();
            this.authorCertificatePic = authorCertificatePic.getValue();
            this.createTime = createTime.getValue();
            this.auditTime = auditTime.getValue();
            this.message = message.getValue();
            this.reason = reason.getValue();
        }
    }

    public static class DeleteExtraMsgEventResponse extends BaseEventResponse {
        public Boolean code;
    }

    public static class DeleteMsgEventResponse extends BaseEventResponse {
        public Boolean code;
    }
}
