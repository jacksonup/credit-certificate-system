package com.hdu.edu.creditcertificatesystem.contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tuples.generated.Tuple7;
import org.web3j.tuples.generated.Tuple9;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class InstitutionContract extends Contract {
    public static final String BINARY = "608060405260028054905060035534801561001957600080fd5b5061610c806200002a6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806385bdd0b81161008c578063b336ad8311610066578063b336ad83146102a6578063b5bf3d4e146102d7578063d0ebcbe714610308578063ff145ed814610324576100ea565b806385bdd0b814610207578063893e2b711461023857806397ddd7d714610270576100ea565b806353ed5143116100c857806353ed51431461016c57806359583c2a1461018b5780636e49df43146101a75780637a92ca35146101d7576100ea565b806302971614146100ef578063485c79471461010b57806352c0faa61461013c575b600080fd5b61010960048036038101906101049190615331565b610354565b005b610125600480360381019061012091906153a9565b610889565b6040516101339291906157b2565b60405180910390f35b610156600480360381019061015191906157e9565b6113c7565b6040516101639190615860565b60405180910390f35b610174611473565b6040516101829291906157b2565b60405180910390f35b6101a560048036038101906101a09190615968565b611dd5565b005b6101c160048036038101906101bc91906159b1565b612164565b6040516101ce9190615a15565b60405180910390f35b6101f160048036038101906101ec91906159b1565b61219a565b6040516101fe9190615a15565b60405180910390f35b610221600480360381019061021c9190615a30565b6121d0565b60405161022f9291906157b2565b60405180910390f35b610252600480360381019061024d91906159b1565b612d13565b60405161026799989796959493929190615a83565b60405180910390f35b61028a600480360381019061028591906159b1565b61323f565b60405161029d9796959493929190615b5e565b60405180910390f35b6102c060048036038101906102bb91906159b1565b6134b7565b6040516102ce929190615d97565b60405180910390f35b6102f160048036038101906102ec9190615dce565b613deb565b6040516102ff929190615d97565b60405180910390f35b610322600480360381019061031d9190615dce565b614660565b005b61033e600480360381019061033991906157e9565b614961565b60405161034b9190615860565b60405180910390f35b600182600001516040516103689190615e53565b908152602001604051809103902060009054906101000a900460ff1661053357816000836000015160405161039d9190615e53565b908152602001604051809103902060008201518160000190805190602001906103c7929190614c9e565b5060208201518160010190805190602001906103e4929190614c9e565b506040820151816002019080519060200190610401929190614c9e565b50606082015181600301908051906020019061041e929190614c9e565b50608082015181600401908051906020019061043b929190614c9e565b5060a0820151816005019080519060200190610458929190614c9e565b5060c0820151816006019080519060200190610475929190614c9e565b5060e0820151816007019080519060200190610492929190614c9e565b506101008201518160080190805190602001906104b0929190614c9e565b5090505060018083600001516040516104c99190615e53565b908152602001604051809103902060006101000a81548160ff0219169083151502179055506002826000015190806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061052d929190614c9e565b50610660565b81600083600001516040516105489190615e53565b90815260200160405180910390206000820151816000019080519060200190610572929190614c9e565b50602082015181600101908051906020019061058f929190614c9e565b5060408201518160020190805190602001906105ac929190614c9e565b5060608201518160030190805190602001906105c9929190614c9e565b5060808201518160040190805190602001906105e6929190614c9e565b5060a0820151816005019080519060200190610603929190614c9e565b5060c0820151816006019080519060200190610620929190614c9e565b5060e082015181600701908051906020019061063d929190614c9e565b5061010082015181600801908051906020019061065b929190614c9e565b509050505b600581600001516040516106749190615e53565b908152602001604051809103902060009054906101000a900460ff166107cc5780600482600001516040516106a99190615e53565b908152602001604051809103902060008201518160000190805190602001906106d3929190614c9e565b506020820151816001015560408201518160020190805190602001906106fa929190614c9e565b50606082015181600301556080820151816004015560a082015181600501908051906020019061072b929190614c9e565b5060c0820151816006019080519060200190610748929190614c9e565b509050506001600582600001516040516107629190615e53565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600681600001519080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906107c6929190614c9e565b50610885565b80600482600001516040516107e19190615e53565b9081526020016040518091039020600082015181600001908051906020019061080b929190614c9e565b50602082015181600101556040820151816002019080519060200190610832929190614c9e565b50606082015181600301556080820151816004015560a0820151816005019080519060200190610863929190614c9e565b5060c0820151816006019080519060200190610880929190614c9e565b509050505b5050565b606080600060028054905067ffffffffffffffff8111156108ad576108ac614ec1565b5b6040519080825280602002602001820160405280156108e657816020015b6108d3614d24565b8152602001906001900390816108cb5790505b509050600060068054905067ffffffffffffffff81111561090a57610909614ec1565b5b60405190808252806020026020018201604052801561094357816020015b610930614d70565b8152602001906001900390816109285790505b5090506000805b600280549050811015610efd5760006002828154811061096d5761096c615e6a565b5b906000526020600020016040516109849190615f8e565b9081526020016040518091039020604051806101200160405290816000820180546109ae90615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546109da90615ec8565b8015610a275780601f106109fc57610100808354040283529160200191610a27565b820191906000526020600020905b815481529060010190602001808311610a0a57829003601f168201915b50505050508152602001600182018054610a4090615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6c90615ec8565b8015610ab95780601f10610a8e57610100808354040283529160200191610ab9565b820191906000526020600020905b815481529060010190602001808311610a9c57829003601f168201915b50505050508152602001600282018054610ad290615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054610afe90615ec8565b8015610b4b5780601f10610b2057610100808354040283529160200191610b4b565b820191906000526020600020905b815481529060010190602001808311610b2e57829003601f168201915b50505050508152602001600382018054610b6490615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9090615ec8565b8015610bdd5780601f10610bb257610100808354040283529160200191610bdd565b820191906000526020600020905b815481529060010190602001808311610bc057829003601f168201915b50505050508152602001600482018054610bf690615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2290615ec8565b8015610c6f5780601f10610c4457610100808354040283529160200191610c6f565b820191906000526020600020905b815481529060010190602001808311610c5257829003601f168201915b50505050508152602001600582018054610c8890615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb490615ec8565b8015610d015780601f10610cd657610100808354040283529160200191610d01565b820191906000526020600020905b815481529060010190602001808311610ce457829003601f168201915b50505050508152602001600682018054610d1a90615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4690615ec8565b8015610d935780601f10610d6857610100808354040283529160200191610d93565b820191906000526020600020905b815481529060010190602001808311610d7657829003601f168201915b50505050508152602001600782018054610dac90615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd890615ec8565b8015610e255780601f10610dfa57610100808354040283529160200191610e25565b820191906000526020600020905b815481529060010190602001808311610e0857829003601f168201915b50505050508152602001600882018054610e3e90615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6a90615ec8565b8015610eb75780601f10610e8c57610100808354040283529160200191610eb7565b820191906000526020600020905b815481529060010190602001808311610e9a57829003601f168201915b505050505081525050848380610ecc90615fd4565b945081518110610edf57610ede615e6a565b5b60200260200101819052508080610ef590615fd4565b91505061094a565b506000805b6006805490508110156111f857600460068281548110610f2557610f24615e6a565b5b90600052602060002001604051610f3c9190615f8e565b90815260200160405180910390206040518060e0016040529081600082018054610f6590615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9190615ec8565b8015610fde5780601f10610fb357610100808354040283529160200191610fde565b820191906000526020600020905b815481529060010190602001808311610fc157829003601f168201915b505050505081526020016001820154815260200160028201805461100190615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461102d90615ec8565b801561107a5780601f1061104f5761010080835404028352916020019161107a565b820191906000526020600020905b81548152906001019060200180831161105d57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820180546110a790615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546110d390615ec8565b80156111205780601f106110f557610100808354040283529160200191611120565b820191906000526020600020905b81548152906001019060200180831161110357829003601f168201915b5050505050815260200160068201805461113990615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461116590615ec8565b80156111b25780601f10611187576101008083540402835291602001916111b2565b820191906000526020600020905b81548152906001019060200180831161119557829003601f168201915b5050505050815250508483806111c790615fd4565b9450815181106111da576111d9615e6a565b5b602002602001018190525080806111f090615fd4565b915050610f02565b508787101561120a57505050506113c0565b600182611217919061601d565b87111561122e5760018261122b919061601d565b96505b6001888861123c919061601d565b6112469190616051565b67ffffffffffffffff81111561125f5761125e614ec1565b5b60405190808252806020026020018201604052801561129857816020015b611285614d24565b81526020019060019003908161127d5790505b509550600188886112a9919061601d565b6112b39190616051565b67ffffffffffffffff8111156112cc576112cb614ec1565b5b60405190808252806020026020018201604052801561130557816020015b6112f2614d70565b8152602001906001900390816112ea5790505b509450600091506000905060008890505b8781116113ba578481815181106113305761132f615e6a565b5b602002602001015187848061134490615fd4565b95508151811061135757611356615e6a565b5b602002602001018190525083818151811061137557611374615e6a565b5b602002602001015186838061138990615fd4565b94508151811061139c5761139b615e6a565b5b602002602001018190525080806113b290615fd4565b915050611316565b50505050505b9250929050565b600681815481106113d757600080fd5b9060005260206000200160009150905080546113f290615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461141e90615ec8565b801561146b5780601f106114405761010080835404028352916020019161146b565b820191906000526020600020905b81548152906001019060200180831161144e57829003601f168201915b505050505081565b606080600060028054905067ffffffffffffffff81111561149757611496614ec1565b5b6040519080825280602002602001820160405280156114d057816020015b6114bd614d24565b8152602001906001900390816114b55790505b509050600060068054905067ffffffffffffffff8111156114f4576114f3614ec1565b5b60405190808252806020026020018201604052801561152d57816020015b61151a614d70565b8152602001906001900390816115125790505b50905060005b600280549050811015611ada5760006002828154811061155657611555615e6a565b5b9060005260206000200160405161156d9190615f8e565b90815260200160405180910390206040518061012001604052908160008201805461159790615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546115c390615ec8565b80156116105780601f106115e557610100808354040283529160200191611610565b820191906000526020600020905b8154815290600101906020018083116115f357829003601f168201915b5050505050815260200160018201805461162990615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461165590615ec8565b80156116a25780601f10611677576101008083540402835291602001916116a2565b820191906000526020600020905b81548152906001019060200180831161168557829003601f168201915b505050505081526020016002820180546116bb90615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546116e790615ec8565b80156117345780601f1061170957610100808354040283529160200191611734565b820191906000526020600020905b81548152906001019060200180831161171757829003601f168201915b5050505050815260200160038201805461174d90615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461177990615ec8565b80156117c65780601f1061179b576101008083540402835291602001916117c6565b820191906000526020600020905b8154815290600101906020018083116117a957829003601f168201915b505050505081526020016004820180546117df90615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461180b90615ec8565b80156118585780601f1061182d57610100808354040283529160200191611858565b820191906000526020600020905b81548152906001019060200180831161183b57829003601f168201915b5050505050815260200160058201805461187190615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461189d90615ec8565b80156118ea5780601f106118bf576101008083540402835291602001916118ea565b820191906000526020600020905b8154815290600101906020018083116118cd57829003601f168201915b5050505050815260200160068201805461190390615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461192f90615ec8565b801561197c5780601f106119515761010080835404028352916020019161197c565b820191906000526020600020905b81548152906001019060200180831161195f57829003601f168201915b5050505050815260200160078201805461199590615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546119c190615ec8565b8015611a0e5780601f106119e357610100808354040283529160200191611a0e565b820191906000526020600020905b8154815290600101906020018083116119f157829003601f168201915b50505050508152602001600882018054611a2790615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054611a5390615ec8565b8015611aa05780601f10611a7557610100808354040283529160200191611aa0565b820191906000526020600020905b815481529060010190602001808311611a8357829003601f168201915b505050505081525050838281518110611abc57611abb615e6a565b5b60200260200101819052508080611ad290615fd4565b915050611533565b5060005b600680549050811015611dc857600460068281548110611b0157611b00615e6a565b5b90600052602060002001604051611b189190615f8e565b90815260200160405180910390206040518060e0016040529081600082018054611b4190615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054611b6d90615ec8565b8015611bba5780601f10611b8f57610100808354040283529160200191611bba565b820191906000526020600020905b815481529060010190602001808311611b9d57829003601f168201915b5050505050815260200160018201548152602001600282018054611bdd90615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054611c0990615ec8565b8015611c565780601f10611c2b57610100808354040283529160200191611c56565b820191906000526020600020905b815481529060010190602001808311611c3957829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582018054611c8390615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054611caf90615ec8565b8015611cfc5780601f10611cd157610100808354040283529160200191611cfc565b820191906000526020600020905b815481529060010190602001808311611cdf57829003601f168201915b50505050508152602001600682018054611d1590615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054611d4190615ec8565b8015611d8e5780601f10611d6357610100808354040283529160200191611d8e565b820191906000526020600020905b815481529060010190602001808311611d7157829003601f168201915b505050505081525050828281518110611daa57611da9615e6a565b5b60200260200101819052508080611dc090615fd4565b915050611ade565b5081819350935050509091565b60005b8151811015612160576001828281518110611df657611df5615e6a565b5b6020026020010151604051611e0b9190615e53565b908152602001604051809103902060009054906101000a900460ff16156121145760008060006001858581518110611e4657611e45615e6a565b5b6020026020010151604051611e5b9190615e53565b908152602001604051809103902060006101000a81548160ff02191690831515021790555060006005858581518110611e9757611e96615e6a565b5b6020026020010151604051611eac9190615e53565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600091505b600280549050821015611fca57611fad848481518110611ef957611ef8615e6a565b5b602002602001015160028481548110611f1557611f14615e6a565b5b906000526020600020018054611f2a90615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054611f5690615ec8565b8015611fa35780601f10611f7857610100808354040283529160200191611fa3565b820191906000526020600020905b815481529060010190602001808311611f8657829003601f168201915b5050505050614a0d565b15611fb757611fca565b8180611fc290615fd4565b925050611ed6565b600090505b6006805490508110156120c3576120a6848481518110611ff257611ff1615e6a565b5b60200260200101516006838154811061200e5761200d615e6a565b5b90600052602060002001805461202390615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461204f90615ec8565b801561209c5780601f106120715761010080835404028352916020019161209c565b820191906000526020600020905b81548152906001019060200180831161207f57829003601f168201915b5050505050614a0d565b156120b0576120c3565b80806120bb90615fd4565b915050611fcf565b6120cc82614aea565b6120d581614bc4565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a8960016040516121059190615a15565b60405180910390a1505061214d565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a8960006040516121449190615a15565b60405180910390a15b808061215890615fd4565b915050611dd8565b5050565b6005818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b606080600060028054905067ffffffffffffffff8111156121f4576121f3614ec1565b5b60405190808252806020026020018201604052801561222d57816020015b61221a614d24565b8152602001906001900390816122125790505b509050600060068054905067ffffffffffffffff81111561225157612250614ec1565b5b60405190808252806020026020018201604052801561228a57816020015b612277614d70565b81526020019060019003908161226f5790505b5090506000805b600680549050811015612b5557886004600683815481106122b5576122b4615e6a565b5b906000526020600020016040516122cc9190615f8e565b9081526020016040518091039020600101541415612b42576000600282815481106122fa576122f9615e6a565b5b906000526020600020016040516123119190615f8e565b90815260200160405180910390206040518061012001604052908160008201805461233b90615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461236790615ec8565b80156123b45780601f10612389576101008083540402835291602001916123b4565b820191906000526020600020905b81548152906001019060200180831161239757829003601f168201915b505050505081526020016001820180546123cd90615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546123f990615ec8565b80156124465780601f1061241b57610100808354040283529160200191612446565b820191906000526020600020905b81548152906001019060200180831161242957829003601f168201915b5050505050815260200160028201805461245f90615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461248b90615ec8565b80156124d85780601f106124ad576101008083540402835291602001916124d8565b820191906000526020600020905b8154815290600101906020018083116124bb57829003601f168201915b505050505081526020016003820180546124f190615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461251d90615ec8565b801561256a5780601f1061253f5761010080835404028352916020019161256a565b820191906000526020600020905b81548152906001019060200180831161254d57829003601f168201915b5050505050815260200160048201805461258390615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546125af90615ec8565b80156125fc5780601f106125d1576101008083540402835291602001916125fc565b820191906000526020600020905b8154815290600101906020018083116125df57829003601f168201915b5050505050815260200160058201805461261590615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461264190615ec8565b801561268e5780601f106126635761010080835404028352916020019161268e565b820191906000526020600020905b81548152906001019060200180831161267157829003601f168201915b505050505081526020016006820180546126a790615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546126d390615ec8565b80156127205780601f106126f557610100808354040283529160200191612720565b820191906000526020600020905b81548152906001019060200180831161270357829003601f168201915b5050505050815260200160078201805461273990615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461276590615ec8565b80156127b25780601f10612787576101008083540402835291602001916127b2565b820191906000526020600020905b81548152906001019060200180831161279557829003601f168201915b505050505081526020016008820180546127cb90615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546127f790615ec8565b80156128445780601f1061281957610100808354040283529160200191612844565b820191906000526020600020905b81548152906001019060200180831161282757829003601f168201915b5050505050815250508483815181106128605761285f615e6a565b5b602002602001018190525060046006828154811061288157612880615e6a565b5b906000526020600020016040516128989190615f8e565b90815260200160405180910390206040518060e00160405290816000820180546128c190615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546128ed90615ec8565b801561293a5780601f1061290f5761010080835404028352916020019161293a565b820191906000526020600020905b81548152906001019060200180831161291d57829003601f168201915b505050505081526020016001820154815260200160028201805461295d90615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461298990615ec8565b80156129d65780601f106129ab576101008083540402835291602001916129d6565b820191906000526020600020905b8154815290600101906020018083116129b957829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582018054612a0390615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054612a2f90615ec8565b8015612a7c5780601f10612a5157610100808354040283529160200191612a7c565b820191906000526020600020905b815481529060010190602001808311612a5f57829003601f168201915b50505050508152602001600682018054612a9590615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054612ac190615ec8565b8015612b0e5780601f10612ae357610100808354040283529160200191612b0e565b820191906000526020600020905b815481529060010190602001808311612af157829003601f168201915b505050505081525050838380612b2390615fd4565b945081518110612b3657612b35615e6a565b5b60200260200101819052505b8080612b4d90615fd4565b915050612291565b5086861015612b6657505050612d0b565b600181612b73919061601d565b861115612b8a57600181612b87919061601d565b95505b60018787612b98919061601d565b612ba29190616051565b67ffffffffffffffff811115612bbb57612bba614ec1565b5b604051908082528060200260200182016040528015612bf457816020015b612be1614d24565b815260200190600190039081612bd95790505b50945060018787612c05919061601d565b612c0f9190616051565b67ffffffffffffffff811115612c2857612c27614ec1565b5b604051908082528060200260200182016040528015612c6157816020015b612c4e614d70565b815260200190600190039081612c465790505b5093506000905060008790505b868111612d0657838181518110612c8857612c87615e6a565b5b6020026020010151868381518110612ca357612ca2615e6a565b5b6020026020010181905250828181518110612cc157612cc0615e6a565b5b6020026020010151858380612cd590615fd4565b945081518110612ce857612ce7615e6a565b5b60200260200101819052508080612cfe90615fd4565b915050612c6e565b505050505b935093915050565b600081805160208101820180518482526020830160208501208183528095505050505050600091509050806000018054612d4c90615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054612d7890615ec8565b8015612dc55780601f10612d9a57610100808354040283529160200191612dc5565b820191906000526020600020905b815481529060010190602001808311612da857829003601f168201915b505050505090806001018054612dda90615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054612e0690615ec8565b8015612e535780601f10612e2857610100808354040283529160200191612e53565b820191906000526020600020905b815481529060010190602001808311612e3657829003601f168201915b505050505090806002018054612e6890615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054612e9490615ec8565b8015612ee15780601f10612eb657610100808354040283529160200191612ee1565b820191906000526020600020905b815481529060010190602001808311612ec457829003601f168201915b505050505090806003018054612ef690615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054612f2290615ec8565b8015612f6f5780601f10612f4457610100808354040283529160200191612f6f565b820191906000526020600020905b815481529060010190602001808311612f5257829003601f168201915b505050505090806004018054612f8490615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054612fb090615ec8565b8015612ffd5780601f10612fd257610100808354040283529160200191612ffd565b820191906000526020600020905b815481529060010190602001808311612fe057829003601f168201915b50505050509080600501805461301290615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461303e90615ec8565b801561308b5780601f106130605761010080835404028352916020019161308b565b820191906000526020600020905b81548152906001019060200180831161306e57829003601f168201915b5050505050908060060180546130a090615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546130cc90615ec8565b80156131195780601f106130ee57610100808354040283529160200191613119565b820191906000526020600020905b8154815290600101906020018083116130fc57829003601f168201915b50505050509080600701805461312e90615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461315a90615ec8565b80156131a75780601f1061317c576101008083540402835291602001916131a7565b820191906000526020600020905b81548152906001019060200180831161318a57829003601f168201915b5050505050908060080180546131bc90615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546131e890615ec8565b80156132355780601f1061320a57610100808354040283529160200191613235565b820191906000526020600020905b81548152906001019060200180831161321857829003601f168201915b5050505050905089565b60048180516020810182018051848252602083016020850120818352809550505050505060009150905080600001805461327890615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546132a490615ec8565b80156132f15780601f106132c6576101008083540402835291602001916132f1565b820191906000526020600020905b8154815290600101906020018083116132d457829003601f168201915b50505050509080600101549080600201805461330c90615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461333890615ec8565b80156133855780601f1061335a57610100808354040283529160200191613385565b820191906000526020600020905b81548152906001019060200180831161336857829003601f168201915b5050505050908060030154908060040154908060050180546133a690615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546133d290615ec8565b801561341f5780601f106133f45761010080835404028352916020019161341f565b820191906000526020600020905b81548152906001019060200180831161340257829003601f168201915b50505050509080600601805461343490615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461346090615ec8565b80156134ad5780601f10613482576101008083540402835291602001916134ad565b820191906000526020600020905b81548152906001019060200180831161349057829003601f168201915b5050505050905087565b6134bf614d24565b6134c7614d70565b60005b600280549050811015613de4576135a76000600283815481106134f0576134ef615e6a565b5b906000526020600020016040516135079190615f8e565b9081526020016040518091039020600501805461352390615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461354f90615ec8565b801561359c5780601f106135715761010080835404028352916020019161359c565b820191906000526020600020905b81548152906001019060200180831161357f57829003601f168201915b505050505085614a0d565b15613dd1576000600282815481106135c2576135c1615e6a565b5b906000526020600020016040516135d99190615f8e565b90815260200160405180910390206004600683815481106135fd576135fc615e6a565b5b906000526020600020016040516136149190615f8e565b9081526020016040518091039020816040518061012001604052908160008201805461363f90615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461366b90615ec8565b80156136b85780601f1061368d576101008083540402835291602001916136b8565b820191906000526020600020905b81548152906001019060200180831161369b57829003601f168201915b505050505081526020016001820180546136d190615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546136fd90615ec8565b801561374a5780601f1061371f5761010080835404028352916020019161374a565b820191906000526020600020905b81548152906001019060200180831161372d57829003601f168201915b5050505050815260200160028201805461376390615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461378f90615ec8565b80156137dc5780601f106137b1576101008083540402835291602001916137dc565b820191906000526020600020905b8154815290600101906020018083116137bf57829003601f168201915b505050505081526020016003820180546137f590615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461382190615ec8565b801561386e5780601f106138435761010080835404028352916020019161386e565b820191906000526020600020905b81548152906001019060200180831161385157829003601f168201915b5050505050815260200160048201805461388790615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546138b390615ec8565b80156139005780601f106138d557610100808354040283529160200191613900565b820191906000526020600020905b8154815290600101906020018083116138e357829003601f168201915b5050505050815260200160058201805461391990615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461394590615ec8565b80156139925780601f1061396757610100808354040283529160200191613992565b820191906000526020600020905b81548152906001019060200180831161397557829003601f168201915b505050505081526020016006820180546139ab90615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546139d790615ec8565b8015613a245780601f106139f957610100808354040283529160200191613a24565b820191906000526020600020905b815481529060010190602001808311613a0757829003601f168201915b50505050508152602001600782018054613a3d90615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054613a6990615ec8565b8015613ab65780601f10613a8b57610100808354040283529160200191613ab6565b820191906000526020600020905b815481529060010190602001808311613a9957829003601f168201915b50505050508152602001600882018054613acf90615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054613afb90615ec8565b8015613b485780601f10613b1d57610100808354040283529160200191613b48565b820191906000526020600020905b815481529060010190602001808311613b2b57829003601f168201915b5050505050815250509150806040518060e0016040529081600082018054613b6f90615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054613b9b90615ec8565b8015613be85780601f10613bbd57610100808354040283529160200191613be8565b820191906000526020600020905b815481529060010190602001808311613bcb57829003601f168201915b5050505050815260200160018201548152602001600282018054613c0b90615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054613c3790615ec8565b8015613c845780601f10613c5957610100808354040283529160200191613c84565b820191906000526020600020905b815481529060010190602001808311613c6757829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582018054613cb190615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054613cdd90615ec8565b8015613d2a5780601f10613cff57610100808354040283529160200191613d2a565b820191906000526020600020905b815481529060010190602001808311613d0d57829003601f168201915b50505050508152602001600682018054613d4390615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054613d6f90615ec8565b8015613dbc5780601f10613d9157610100808354040283529160200191613dbc565b820191906000526020600020905b815481529060010190602001808311613d9f57829003601f168201915b50505050508152505090509250925050613de6565b8080613ddc90615fd4565b9150506134ca565b505b915091565b613df3614d24565b613dfb614d70565b60018360000151604051613e0f9190615e53565b908152602001604051809103902060009054906101000a900460ff168015613e63575060058360000151604051613e469190615e53565b908152602001604051809103902060009054906101000a900460ff165b1561465a5760008360000151604051613e7c9190615e53565b908152602001604051809103902060048460000151604051613e9e9190615e53565b90815260200160405180910390208160405180610120016040529081600082018054613ec990615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054613ef590615ec8565b8015613f425780601f10613f1757610100808354040283529160200191613f42565b820191906000526020600020905b815481529060010190602001808311613f2557829003601f168201915b50505050508152602001600182018054613f5b90615ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054613f8790615ec8565b8015613fd45780601f10613fa957610100808354040283529160200191613fd4565b820191906000526020600020905b815481529060010190602001808311613fb757829003601f168201915b50505050508152602001600282018054613fed90615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461401990615ec8565b80156140665780601f1061403b57610100808354040283529160200191614066565b820191906000526020600020905b81548152906001019060200180831161404957829003601f168201915b5050505050815260200160038201805461407f90615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546140ab90615ec8565b80156140f85780601f106140cd576101008083540402835291602001916140f8565b820191906000526020600020905b8154815290600101906020018083116140db57829003601f168201915b5050505050815260200160048201805461411190615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461413d90615ec8565b801561418a5780601f1061415f5761010080835404028352916020019161418a565b820191906000526020600020905b81548152906001019060200180831161416d57829003601f168201915b505050505081526020016005820180546141a390615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546141cf90615ec8565b801561421c5780601f106141f15761010080835404028352916020019161421c565b820191906000526020600020905b8154815290600101906020018083116141ff57829003601f168201915b5050505050815260200160068201805461423590615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461426190615ec8565b80156142ae5780601f10614283576101008083540402835291602001916142ae565b820191906000526020600020905b81548152906001019060200180831161429157829003601f168201915b505050505081526020016007820180546142c790615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546142f390615ec8565b80156143405780601f1061431557610100808354040283529160200191614340565b820191906000526020600020905b81548152906001019060200180831161432357829003601f168201915b5050505050815260200160088201805461435990615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461438590615ec8565b80156143d25780601f106143a7576101008083540402835291602001916143d2565b820191906000526020600020905b8154815290600101906020018083116143b557829003601f168201915b5050505050815250509150806040518060e00160405290816000820180546143f990615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461442590615ec8565b80156144725780601f1061444757610100808354040283529160200191614472565b820191906000526020600020905b81548152906001019060200180831161445557829003601f168201915b505050505081526020016001820154815260200160028201805461449590615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546144c190615ec8565b801561450e5780601f106144e35761010080835404028352916020019161450e565b820191906000526020600020905b8154815290600101906020018083116144f157829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201805461453b90615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461456790615ec8565b80156145b45780601f10614589576101008083540402835291602001916145b4565b820191906000526020600020905b81548152906001019060200180831161459757829003601f168201915b505050505081526020016006820180546145cd90615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546145f990615ec8565b80156146465780601f1061461b57610100808354040283529160200191614646565b820191906000526020600020905b81548152906001019060200180831161462957829003601f168201915b50505050508152505090509150915061465b565b5b915091565b600181600001516040516146749190615e53565b908152602001604051809103902060009054906101000a900460ff1615614925576000806000600184600001516040516146ae9190615e53565b908152602001604051809103902060006101000a81548160ff0219169083151502179055506000600584600001516040516146e99190615e53565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600091505b6002805490508210156147f1576147d483600001516002848154811061473c5761473b615e6a565b5b90600052602060002001805461475190615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461477d90615ec8565b80156147ca5780601f1061479f576101008083540402835291602001916147ca565b820191906000526020600020905b8154815290600101906020018083116147ad57829003601f168201915b5050505050614a0d565b156147de576147f1565b81806147e990615fd4565b925050614713565b600090505b6006805490508110156148d4576148b783600001516006838154811061481f5761481e615e6a565b5b90600052602060002001805461483490615ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461486090615ec8565b80156148ad5780601f10614882576101008083540402835291602001916148ad565b820191906000526020600020905b81548152906001019060200180831161489057829003601f168201915b5050505050614a0d565b156148c1576148d4565b80806148cc90615fd4565b9150506147f6565b6148dd82614aea565b6148e681614bc4565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a8960016040516149169190615a15565b60405180910390a1505061495e565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a8960006040516149559190615a15565b60405180910390a15b50565b6002818154811061497157600080fd5b90600052602060002001600091509050805461498c90615ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546149b890615ec8565b8015614a055780601f106149da57610100808354040283529160200191614a05565b820191906000526020600020905b8154815290600101906020018083116149e857829003601f168201915b505050505081565b60008083905060008390508051825114614a2c57600092505050614ae4565b60005b8251811015614adc57818181518110614a4b57614a4a615e6a565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916838281518110614a8b57614a8a615e6a565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614614ac95760009350505050614ae4565b8080614ad490615fd4565b915050614a2f565b506001925050505b92915050565b60006002805490509050808210614b015750614bc1565b60008290505b600182614b14919061601d565b811015614b8e576002600182614b2a9190616051565b81548110614b3b57614b3a615e6a565b5b9060005260206000200160028281548110614b5957614b58615e6a565b5b90600052602060002001908054614b6f90615ec8565b614b7a929190614dad565b508080614b8690615fd4565b915050614b07565b506002805480614ba157614ba06160a7565b5b600190038181906000526020600020016000614bbd9190614e3a565b9055505b50565b60006006805490509050808210614bdb5750614c9b565b60008290505b600182614bee919061601d565b811015614c68576006600182614c049190616051565b81548110614c1557614c14615e6a565b5b9060005260206000200160068281548110614c3357614c32615e6a565b5b90600052602060002001908054614c4990615ec8565b614c54929190614dad565b508080614c6090615fd4565b915050614be1565b506006805480614c7b57614c7a6160a7565b5b600190038181906000526020600020016000614c979190614e3a565b9055505b50565b828054614caa90615ec8565b90600052602060002090601f016020900481019282614ccc5760008555614d13565b82601f10614ce557805160ff1916838001178555614d13565b82800160010185558215614d13579182015b82811115614d12578251825591602001919060010190614cf7565b5b509050614d209190614e7a565b5090565b6040518061012001604052806060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6040518060e00160405280606081526020016000815260200160608152602001600081526020016000815260200160608152602001606081525090565b828054614db990615ec8565b90600052602060002090601f016020900481019282614ddb5760008555614e29565b82601f10614dec5780548555614e29565b82800160010185558215614e2957600052602060002091601f016020900482015b82811115614e28578254825591600101919060010190614e0d565b5b509050614e369190614e7a565b5090565b508054614e4690615ec8565b6000825580601f10614e585750614e77565b601f016020900490600052602060002090810190614e769190614e7a565b5b50565b5b80821115614e93576000816000905550600101614e7b565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b614ef982614eb0565b810181811067ffffffffffffffff82111715614f1857614f17614ec1565b5b80604052505050565b6000614f2b614e97565b9050614f378282614ef0565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115614f6657614f65614ec1565b5b614f6f82614eb0565b9050602081019050919050565b82818337600083830152505050565b6000614f9e614f9984614f4b565b614f21565b905082815260208101848484011115614fba57614fb9614f46565b5b614fc5848285614f7c565b509392505050565b600082601f830112614fe257614fe1614f41565b5b8135614ff2848260208601614f8b565b91505092915050565b6000610120828403121561501257615011614eab565b5b61501d610120614f21565b9050600082013567ffffffffffffffff81111561503d5761503c614f3c565b5b61504984828501614fcd565b600083015250602082013567ffffffffffffffff81111561506d5761506c614f3c565b5b61507984828501614fcd565b602083015250604082013567ffffffffffffffff81111561509d5761509c614f3c565b5b6150a984828501614fcd565b604083015250606082013567ffffffffffffffff8111156150cd576150cc614f3c565b5b6150d984828501614fcd565b606083015250608082013567ffffffffffffffff8111156150fd576150fc614f3c565b5b61510984828501614fcd565b60808301525060a082013567ffffffffffffffff81111561512d5761512c614f3c565b5b61513984828501614fcd565b60a08301525060c082013567ffffffffffffffff81111561515d5761515c614f3c565b5b61516984828501614fcd565b60c08301525060e082013567ffffffffffffffff81111561518d5761518c614f3c565b5b61519984828501614fcd565b60e08301525061010082013567ffffffffffffffff8111156151be576151bd614f3c565b5b6151ca84828501614fcd565b6101008301525092915050565b6000819050919050565b6151ea816151d7565b81146151f557600080fd5b50565b600081359050615207816151e1565b92915050565b600060e0828403121561522357615222614eab565b5b61522d60e0614f21565b9050600082013567ffffffffffffffff81111561524d5761524c614f3c565b5b61525984828501614fcd565b600083015250602061526d848285016151f8565b602083015250604082013567ffffffffffffffff81111561529157615290614f3c565b5b61529d84828501614fcd565b60408301525060606152b1848285016151f8565b60608301525060806152c5848285016151f8565b60808301525060a082013567ffffffffffffffff8111156152e9576152e8614f3c565b5b6152f584828501614fcd565b60a08301525060c082013567ffffffffffffffff81111561531957615318614f3c565b5b61532584828501614fcd565b60c08301525092915050565b6000806040838503121561534857615347614ea1565b5b600083013567ffffffffffffffff81111561536657615365614ea6565b5b61537285828601614ffb565b925050602083013567ffffffffffffffff81111561539357615392614ea6565b5b61539f8582860161520d565b9150509250929050565b600080604083850312156153c0576153bf614ea1565b5b60006153ce858286016151f8565b92505060206153df858286016151f8565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561544f578082015181840152602081019050615434565b8381111561545e576000848401525b50505050565b600061546f82615415565b6154798185615420565b9350615489818560208601615431565b61549281614eb0565b840191505092915050565b60006101208301600083015184820360008601526154bb8282615464565b915050602083015184820360208601526154d58282615464565b915050604083015184820360408601526154ef8282615464565b915050606083015184820360608601526155098282615464565b915050608083015184820360808601526155238282615464565b91505060a083015184820360a086015261553d8282615464565b91505060c083015184820360c08601526155578282615464565b91505060e083015184820360e08601526155718282615464565b91505061010083015184820361010086015261558d8282615464565b9150508091505092915050565b60006155a6838361549d565b905092915050565b6000602082019050919050565b60006155c6826153e9565b6155d081856153f4565b9350836020820285016155e285615405565b8060005b8581101561561e57848403895281516155ff858261559a565b945061560a836155ae565b925060208a019950506001810190506155e6565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b615665816151d7565b82525050565b600060e08301600083015184820360008601526156888282615464565b915050602083015161569d602086018261565c565b50604083015184820360408601526156b58282615464565b91505060608301516156ca606086018261565c565b5060808301516156dd608086018261565c565b5060a083015184820360a08601526156f58282615464565b91505060c083015184820360c086015261570f8282615464565b9150508091505092915050565b6000615728838361566b565b905092915050565b6000602082019050919050565b600061574882615630565b615752818561563b565b9350836020820285016157648561564c565b8060005b858110156157a05784840389528151615781858261571c565b945061578c83615730565b925060208a01995050600181019050615768565b50829750879550505050505092915050565b600060408201905081810360008301526157cc81856155bb565b905081810360208301526157e0818461573d565b90509392505050565b6000602082840312156157ff576157fe614ea1565b5b600061580d848285016151f8565b91505092915050565b600082825260208201905092915050565b600061583282615415565b61583c8185615816565b935061584c818560208601615431565b61585581614eb0565b840191505092915050565b6000602082019050818103600083015261587a8184615827565b905092915050565b600067ffffffffffffffff82111561589d5761589c614ec1565b5b602082029050602081019050919050565b600080fd5b60006158c66158c184615882565b614f21565b905080838252602082019050602084028301858111156158e9576158e86158ae565b5b835b8181101561593057803567ffffffffffffffff81111561590e5761590d614f41565b5b80860161591b8982614fcd565b855260208501945050506020810190506158eb565b5050509392505050565b600082601f83011261594f5761594e614f41565b5b813561595f8482602086016158b3565b91505092915050565b60006020828403121561597e5761597d614ea1565b5b600082013567ffffffffffffffff81111561599c5761599b614ea6565b5b6159a88482850161593a565b91505092915050565b6000602082840312156159c7576159c6614ea1565b5b600082013567ffffffffffffffff8111156159e5576159e4614ea6565b5b6159f184828501614fcd565b91505092915050565b60008115159050919050565b615a0f816159fa565b82525050565b6000602082019050615a2a6000830184615a06565b92915050565b600080600060608486031215615a4957615a48614ea1565b5b6000615a57868287016151f8565b9350506020615a68868287016151f8565b9250506040615a79868287016151f8565b9150509250925092565b6000610120820190508181036000830152615a9e818c615827565b90508181036020830152615ab2818b615827565b90508181036040830152615ac6818a615827565b90508181036060830152615ada8189615827565b90508181036080830152615aee8188615827565b905081810360a0830152615b028187615827565b905081810360c0830152615b168186615827565b905081810360e0830152615b2a8185615827565b9050818103610100830152615b3f8184615827565b90509a9950505050505050505050565b615b58816151d7565b82525050565b600060e0820190508181036000830152615b78818a615827565b9050615b876020830189615b4f565b8181036040830152615b998188615827565b9050615ba86060830187615b4f565b615bb56080830186615b4f565b81810360a0830152615bc78185615827565b905081810360c0830152615bdb8184615827565b905098975050505050505050565b6000610120830160008301518482036000860152615c078282615464565b91505060208301518482036020860152615c218282615464565b91505060408301518482036040860152615c3b8282615464565b91505060608301518482036060860152615c558282615464565b91505060808301518482036080860152615c6f8282615464565b91505060a083015184820360a0860152615c898282615464565b91505060c083015184820360c0860152615ca38282615464565b91505060e083015184820360e0860152615cbd8282615464565b915050610100830151848203610100860152615cd98282615464565b9150508091505092915050565b600060e0830160008301518482036000860152615d038282615464565b9150506020830151615d18602086018261565c565b5060408301518482036040860152615d308282615464565b9150506060830151615d45606086018261565c565b506080830151615d58608086018261565c565b5060a083015184820360a0860152615d708282615464565b91505060c083015184820360c0860152615d8a8282615464565b9150508091505092915050565b60006040820190508181036000830152615db18185615be9565b90508181036020830152615dc58184615ce6565b90509392505050565b600060208284031215615de457615de3614ea1565b5b600082013567ffffffffffffffff811115615e0257615e01614ea6565b5b615e0e84828501614ffb565b91505092915050565b600081905092915050565b6000615e2d82615415565b615e378185615e17565b9350615e47818560208601615431565b80840191505092915050565b6000615e5f8284615e22565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680615ee057607f821691505b60208210811415615ef457615ef3615e99565b5b50919050565b60008190508160005260206000209050919050565b60008154615f1c81615ec8565b615f268186615e17565b94506001821660008114615f415760018114615f5257615f85565b60ff19831686528186019350615f85565b615f5b85615efa565b60005b83811015615f7d57815481890152600182019150602081019050615f5e565b838801955050505b50505092915050565b6000615f9a8284615f0f565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000615fdf826151d7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561601257616011615fa5565b5b600182019050919050565b6000616028826151d7565b9150616033836151d7565b92508282101561604657616045615fa5565b5b828203905092915050565b600061605c826151d7565b9150616067836151d7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561609c5761609b615fa5565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122074cd50b5725c12c2ddba1ebfabe9af25d775b5dcfba1d5adcf66c92295d7737764736f6c634300080a0033";

    public static final String FUNC_BATCHDELETE = "batchDelete";

    public static final String FUNC_DELETESTUDENT = "deleteStudent";

    public static final String FUNC_EXTRAINFOINSERTED = "extraInfoInserted";

    public static final String FUNC_EXTRAINFOKEY = "extraInfoKey";

    public static final String FUNC_EXTRAINFOS = "extraInfos";

    public static final String FUNC_GETALL = "getAll";

    public static final String FUNC_GETBYNAME = "getByName";

    public static final String FUNC_GETENTITY = "getEntity";

    public static final String FUNC_GETLISTPAGE = "getListPage";

    public static final String FUNC_GETLISTPAGEBYSTATUS = "getListPageByStatus";

    public static final String FUNC_INSTITUTIONINFOINSERTED = "institutionInfoInserted";

    public static final String FUNC_INSTITUTIONINFOKEY = "institutionInfoKey";

    public static final String FUNC_INSTITUTIONINFOS = "institutionInfos";

    public static final String FUNC_SAVE = "save";

    public static final Event DELETEEXTRAMSG_EVENT = new Event("DeleteExtraMsg",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
    ;

    public static final Event DELETEMSG_EVENT = new Event("DeleteMsg",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
    ;

    @Deprecated
    protected InstitutionContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected InstitutionContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected InstitutionContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected InstitutionContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<DeleteExtraMsgEventResponse> getDeleteExtraMsgEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEEXTRAMSG_EVENT, transactionReceipt);
        ArrayList<DeleteExtraMsgEventResponse> responses = new ArrayList<DeleteExtraMsgEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DeleteExtraMsgEventResponse typedResponse = new DeleteExtraMsgEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.code = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DeleteExtraMsgEventResponse> deleteExtraMsgEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, DeleteExtraMsgEventResponse>() {
            @Override
            public DeleteExtraMsgEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DELETEEXTRAMSG_EVENT, log);
                DeleteExtraMsgEventResponse typedResponse = new DeleteExtraMsgEventResponse();
                typedResponse.log = log;
                typedResponse.code = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<DeleteExtraMsgEventResponse> deleteExtraMsgEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DELETEEXTRAMSG_EVENT));
        return deleteExtraMsgEventFlowable(filter);
    }

    public List<DeleteMsgEventResponse> getDeleteMsgEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEMSG_EVENT, transactionReceipt);
        ArrayList<DeleteMsgEventResponse> responses = new ArrayList<DeleteMsgEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.code = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, DeleteMsgEventResponse>() {
            @Override
            public DeleteMsgEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DELETEMSG_EVENT, log);
                DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
                typedResponse.log = log;
                typedResponse.code = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DELETEMSG_EVENT));
        return deleteMsgEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> batchDelete(List<String> idList) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_BATCHDELETE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                        org.web3j.abi.datatypes.Utf8String.class,
                        org.web3j.abi.Utils.typeMap(idList, org.web3j.abi.datatypes.Utf8String.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deleteStudent(InstitutionInfo _institution) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DELETESTUDENT,
                Arrays.<Type>asList(_institution),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> extraInfoInserted(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_EXTRAINFOINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> extraInfoKey(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_EXTRAINFOKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple7<String, BigInteger, String, BigInteger, BigInteger, String, String>> extraInfos(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_EXTRAINFOS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple7<String, BigInteger, String, BigInteger, BigInteger, String, String>>(function,
                new Callable<Tuple7<String, BigInteger, String, BigInteger, BigInteger, String, String>>() {
                    @Override
                    public Tuple7<String, BigInteger, String, BigInteger, BigInteger, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<String, BigInteger, String, BigInteger, BigInteger, String, String>(
                                (String) results.get(0).getValue(),
                                (BigInteger) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (BigInteger) results.get(3).getValue(),
                                (BigInteger) results.get(4).getValue(),
                                (String) results.get(5).getValue(),
                                (String) results.get(6).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>> getAll() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETALL,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<InstitutionInfo>>() {}, new TypeReference<DynamicArray<ExtraInfo>>() {}));
        return new RemoteFunctionCall<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>>(function,
                new Callable<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>>() {
                    @Override
                    public Tuple2<List<InstitutionInfo>, List<ExtraInfo>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<List<InstitutionInfo>, List<ExtraInfo>>(
                                convertToNative((List<InstitutionInfo>) results.get(0).getValue()),
                                convertToNative((List<ExtraInfo>) results.get(1).getValue()));
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<InstitutionInfo, ExtraInfo>> getByName(String _institutionName) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETBYNAME,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_institutionName)),
                Arrays.<TypeReference<?>>asList(new TypeReference<InstitutionInfo>() {}, new TypeReference<ExtraInfo>() {}));
        return new RemoteFunctionCall<Tuple2<InstitutionInfo, ExtraInfo>>(function,
                new Callable<Tuple2<InstitutionInfo, ExtraInfo>>() {
                    @Override
                    public Tuple2<InstitutionInfo, ExtraInfo> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<InstitutionInfo, ExtraInfo>(
                                (InstitutionInfo) results.get(0),
                                (ExtraInfo) results.get(1));
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<InstitutionInfo, ExtraInfo>> getEntity(InstitutionInfo _institution) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETENTITY,
                Arrays.<Type>asList(_institution),
                Arrays.<TypeReference<?>>asList(new TypeReference<InstitutionInfo>() {}, new TypeReference<ExtraInfo>() {}));
        return new RemoteFunctionCall<Tuple2<InstitutionInfo, ExtraInfo>>(function,
                new Callable<Tuple2<InstitutionInfo, ExtraInfo>>() {
                    @Override
                    public Tuple2<InstitutionInfo, ExtraInfo> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<InstitutionInfo, ExtraInfo>(
                                (InstitutionInfo) results.get(0),
                                (ExtraInfo) results.get(1));
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>> getListPage(BigInteger begin, BigInteger end) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETLISTPAGE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(begin),
                        new org.web3j.abi.datatypes.generated.Uint256(end)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<InstitutionInfo>>() {}, new TypeReference<DynamicArray<ExtraInfo>>() {}));
        return new RemoteFunctionCall<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>>(function,
                new Callable<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>>() {
                    @Override
                    public Tuple2<List<InstitutionInfo>, List<ExtraInfo>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<List<InstitutionInfo>, List<ExtraInfo>>(
                                convertToNative((List<InstitutionInfo>) results.get(0).getValue()),
                                convertToNative((List<ExtraInfo>) results.get(1).getValue()));
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>> getListPageByStatus(BigInteger _status, BigInteger begin, BigInteger end) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETLISTPAGEBYSTATUS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_status),
                        new org.web3j.abi.datatypes.generated.Uint256(begin),
                        new org.web3j.abi.datatypes.generated.Uint256(end)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<InstitutionInfo>>() {}, new TypeReference<DynamicArray<ExtraInfo>>() {}));
        return new RemoteFunctionCall<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>>(function,
                new Callable<Tuple2<List<InstitutionInfo>, List<ExtraInfo>>>() {
                    @Override
                    public Tuple2<List<InstitutionInfo>, List<ExtraInfo>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<List<InstitutionInfo>, List<ExtraInfo>>(
                                convertToNative((List<InstitutionInfo>) results.get(0).getValue()),
                                convertToNative((List<ExtraInfo>) results.get(1).getValue()));
                    }
                });
    }

    public RemoteFunctionCall<Boolean> institutionInfoInserted(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_INSTITUTIONINFOINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> institutionInfoKey(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_INSTITUTIONINFOKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple9<String, String, String, String, String, String, String, String, String>> institutionInfos(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_INSTITUTIONINFOS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple9<String, String, String, String, String, String, String, String, String>>(function,
                new Callable<Tuple9<String, String, String, String, String, String, String, String, String>>() {
                    @Override
                    public Tuple9<String, String, String, String, String, String, String, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple9<String, String, String, String, String, String, String, String, String>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (String) results.get(3).getValue(),
                                (String) results.get(4).getValue(),
                                (String) results.get(5).getValue(),
                                (String) results.get(6).getValue(),
                                (String) results.get(7).getValue(),
                                (String) results.get(8).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> save(InstitutionInfo _institution, ExtraInfo _extraInfo) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SAVE,
                Arrays.<Type>asList(_institution,
                        _extraInfo),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static InstitutionContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new InstitutionContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static InstitutionContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new InstitutionContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static InstitutionContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new InstitutionContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static InstitutionContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new InstitutionContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<InstitutionContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(InstitutionContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<InstitutionContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(InstitutionContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<InstitutionContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(InstitutionContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<InstitutionContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(InstitutionContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class InstitutionInfo extends DynamicStruct {
        public String id;

        public String facultyId;

        public String majorId;

        public String account;

        public String password;

        public String institutionName;

        public String institutionPhone;

        public String institutionEmail;

        public String institutionPlace;

        public InstitutionInfo(String id, String facultyId, String majorId, String account, String password, String institutionName, String institutionPhone, String institutionEmail, String institutionPlace) {
            super(new org.web3j.abi.datatypes.Utf8String(id),new org.web3j.abi.datatypes.Utf8String(facultyId),new org.web3j.abi.datatypes.Utf8String(majorId),new org.web3j.abi.datatypes.Utf8String(account),new org.web3j.abi.datatypes.Utf8String(password),new org.web3j.abi.datatypes.Utf8String(institutionName),new org.web3j.abi.datatypes.Utf8String(institutionPhone),new org.web3j.abi.datatypes.Utf8String(institutionEmail),new org.web3j.abi.datatypes.Utf8String(institutionPlace));
            this.id = id;
            this.facultyId = facultyId;
            this.majorId = majorId;
            this.account = account;
            this.password = password;
            this.institutionName = institutionName;
            this.institutionPhone = institutionPhone;
            this.institutionEmail = institutionEmail;
            this.institutionPlace = institutionPlace;
        }

        public InstitutionInfo(Utf8String id, Utf8String facultyId, Utf8String majorId, Utf8String account, Utf8String password, Utf8String institutionName, Utf8String institutionPhone, Utf8String institutionEmail, Utf8String institutionPlace) {
            super(id,facultyId,majorId,account,password,institutionName,institutionPhone,institutionEmail,institutionPlace);
            this.id = id.getValue();
            this.facultyId = facultyId.getValue();
            this.majorId = majorId.getValue();
            this.account = account.getValue();
            this.password = password.getValue();
            this.institutionName = institutionName.getValue();
            this.institutionPhone = institutionPhone.getValue();
            this.institutionEmail = institutionEmail.getValue();
            this.institutionPlace = institutionPlace.getValue();
        }
    }

    public static class ExtraInfo extends DynamicStruct {
        public String id;

        public BigInteger status;

        public String authorCertificatePic;

        public BigInteger createTime;

        public BigInteger auditTime;

        public String message;

        public String reason;

        public ExtraInfo(String id, BigInteger status, String authorCertificatePic, BigInteger createTime, BigInteger auditTime, String message, String reason) {
            super(new org.web3j.abi.datatypes.Utf8String(id),new org.web3j.abi.datatypes.generated.Uint256(status),new org.web3j.abi.datatypes.Utf8String(authorCertificatePic),new org.web3j.abi.datatypes.generated.Uint256(createTime),new org.web3j.abi.datatypes.generated.Uint256(auditTime),new org.web3j.abi.datatypes.Utf8String(message),new org.web3j.abi.datatypes.Utf8String(reason));
            this.id = id;
            this.status = status;
            this.authorCertificatePic = authorCertificatePic;
            this.createTime = createTime;
            this.auditTime = auditTime;
            this.message = message;
            this.reason = reason;
        }

        public ExtraInfo(Utf8String id, Uint256 status, Utf8String authorCertificatePic, Uint256 createTime, Uint256 auditTime, Utf8String message, Utf8String reason) {
            super(id,status,authorCertificatePic,createTime,auditTime,message,reason);
            this.id = id.getValue();
            this.status = status.getValue();
            this.authorCertificatePic = authorCertificatePic.getValue();
            this.createTime = createTime.getValue();
            this.auditTime = auditTime.getValue();
            this.message = message.getValue();
            this.reason = reason.getValue();
        }
    }

    public static class DeleteExtraMsgEventResponse extends BaseEventResponse {
        public Boolean code;
    }

    public static class DeleteMsgEventResponse extends BaseEventResponse {
        public Boolean code;
    }
}
