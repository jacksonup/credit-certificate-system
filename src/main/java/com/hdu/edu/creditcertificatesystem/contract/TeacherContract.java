package com.hdu.edu.creditcertificatesystem.contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple10;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */

/**
 * @author 阵雨
 * @version 1.0
 */
@SuppressWarnings("rawtypes")
public class TeacherContract extends Contract {
    public static final String BINARY = "608060405260028054905060035534801561001957600080fd5b506131a7806100296000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806364e518641161007157806364e518641461018d57806365d747d6146101bd578063ac0451bb146101d9578063ae6ef78c14610212578063c46c9a211461022e578063fd2b166e1461025e576100b4565b806334b65c87146100b9578063465c4105146100d7578063485c79471461010757806353ed51431461013757806359583c2a146101555780635c2aed9014610171575b600080fd5b6100c161028e565b6040516100ce919061254b565b60405180910390f35b6100f160048036038101906100ec91906126b6565b610459565b6040516100fe9190612749565b60405180910390f35b610121600480360381019061011c9190612790565b610536565b60405161012e9190612996565b60405180910390f35b61013f610b5a565b60405161014c9190612996565b60405180910390f35b61016f600480360381019061016a9190612a9e565b61105f565b005b61018b60048036038101906101869190612cab565b611298565b005b6101a760048036038101906101a29190612cf4565b611589565b6040516101b49190612749565b60405180910390f35b6101d760048036038101906101d29190612d3d565b6115bf565b005b6101f360048036038101906101ee9190612cf4565b611699565b6040516102099a99989796959493929190612dc3565b60405180910390f35b61022c60048036038101906102279190612cab565b611abb565b005b61024860048036038101906102439190612cab565b611c92565b604051610255919061254b565b60405180910390f35b61027860048036038101906102739190612d3d565b612126565b6040516102859190612e90565b60405180910390f35b6102966121d2565b6040518061014001604052806040518060400160405280600381526020017f686868000000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600381526020017f68686800000000000000000000000000000000000000000000000000000000008152508152602001600081526020016040518060400160405280600381526020017f686868000000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600381526020017f686868000000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600381526020017f686868000000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600381526020017f686868000000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600381526020017f686868000000000000000000000000000000000000000000000000000000000081525081526020016103e781526020016103e7815250905090565b6000808390506000839050805182511461047857600092505050610530565b60005b82518110156105285781818151811061049757610496612eb2565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168382815181106104d7576104d6612eb2565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146105155760009350505050610530565b808061052090612f10565b91505061047b565b506001925050505b92915050565b6060600060028054905067ffffffffffffffff8111156105595761055861258b565b5b60405190808252806020026020018201604052801561059257816020015b61057f6121d2565b8152602001906001900390816105775790505b5090506000805b600280549050811015610a46576000600282815481106105bc576105bb612eb2565b5b906000526020600020016040516105d39190613059565b9081526020016040518091039020604051806101400160405290816000820180546105fd90612f88565b80601f016020809104026020016040519081016040528092919081815260200182805461062990612f88565b80156106765780601f1061064b57610100808354040283529160200191610676565b820191906000526020600020905b81548152906001019060200180831161065957829003601f168201915b5050505050815260200160018201805461068f90612f88565b80601f01602080910402602001604051908101604052809291908181526020018280546106bb90612f88565b80156107085780601f106106dd57610100808354040283529160200191610708565b820191906000526020600020905b8154815290600101906020018083116106eb57829003601f168201915b505050505081526020016002820154815260200160038201805461072b90612f88565b80601f016020809104026020016040519081016040528092919081815260200182805461075790612f88565b80156107a45780601f10610779576101008083540402835291602001916107a4565b820191906000526020600020905b81548152906001019060200180831161078757829003601f168201915b505050505081526020016004820180546107bd90612f88565b80601f01602080910402602001604051908101604052809291908181526020018280546107e990612f88565b80156108365780601f1061080b57610100808354040283529160200191610836565b820191906000526020600020905b81548152906001019060200180831161081957829003601f168201915b5050505050815260200160058201805461084f90612f88565b80601f016020809104026020016040519081016040528092919081815260200182805461087b90612f88565b80156108c85780601f1061089d576101008083540402835291602001916108c8565b820191906000526020600020905b8154815290600101906020018083116108ab57829003601f168201915b505050505081526020016006820180546108e190612f88565b80601f016020809104026020016040519081016040528092919081815260200182805461090d90612f88565b801561095a5780601f1061092f5761010080835404028352916020019161095a565b820191906000526020600020905b81548152906001019060200180831161093d57829003601f168201915b5050505050815260200160078201805461097390612f88565b80601f016020809104026020016040519081016040528092919081815260200182805461099f90612f88565b80156109ec5780601f106109c1576101008083540402835291602001916109ec565b820191906000526020600020905b8154815290600101906020018083116109cf57829003601f168201915b5050505050815260200160088201548152602001600982015481525050838380610a1590612f10565b945081518110610a2857610a27612eb2565b5b60200260200101819052508080610a3e90612f10565b915050610599565b5084841015610a56575050610b54565b600181610a639190613070565b841115610a7a57600181610a779190613070565b93505b60018585610a889190613070565b610a9291906130a4565b67ffffffffffffffff811115610aab57610aaa61258b565b5b604051908082528060200260200182016040528015610ae457816020015b610ad16121d2565b815260200190600190039081610ac95790505b5092506000905060008590505b848111610b5057828181518110610b0b57610b0a612eb2565b5b6020026020010151848380610b1f90612f10565b945081518110610b3257610b31612eb2565b5b60200260200101819052508080610b4890612f10565b915050610af1565b5050505b92915050565b606060028054905067ffffffffffffffff811115610b7b57610b7a61258b565b5b604051908082528060200260200182016040528015610bb457816020015b610ba16121d2565b815260200190600190039081610b995790505b50905060005b60028054905081101561105b57600060028281548110610bdd57610bdc612eb2565b5b90600052602060002001604051610bf49190613059565b908152602001604051809103902060405180610140016040529081600082018054610c1e90612f88565b80601f0160208091040260200160405190810160405280929190818152602001828054610c4a90612f88565b8015610c975780601f10610c6c57610100808354040283529160200191610c97565b820191906000526020600020905b815481529060010190602001808311610c7a57829003601f168201915b50505050508152602001600182018054610cb090612f88565b80601f0160208091040260200160405190810160405280929190818152602001828054610cdc90612f88565b8015610d295780601f10610cfe57610100808354040283529160200191610d29565b820191906000526020600020905b815481529060010190602001808311610d0c57829003601f168201915b5050505050815260200160028201548152602001600382018054610d4c90612f88565b80601f0160208091040260200160405190810160405280929190818152602001828054610d7890612f88565b8015610dc55780601f10610d9a57610100808354040283529160200191610dc5565b820191906000526020600020905b815481529060010190602001808311610da857829003601f168201915b50505050508152602001600482018054610dde90612f88565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0a90612f88565b8015610e575780601f10610e2c57610100808354040283529160200191610e57565b820191906000526020600020905b815481529060010190602001808311610e3a57829003601f168201915b50505050508152602001600582018054610e7090612f88565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9c90612f88565b8015610ee95780601f10610ebe57610100808354040283529160200191610ee9565b820191906000526020600020905b815481529060010190602001808311610ecc57829003601f168201915b50505050508152602001600682018054610f0290612f88565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2e90612f88565b8015610f7b5780601f10610f5057610100808354040283529160200191610f7b565b820191906000526020600020905b815481529060010190602001808311610f5e57829003601f168201915b50505050508152602001600782018054610f9490612f88565b80601f0160208091040260200160405190810160405280929190818152602001828054610fc090612f88565b801561100d5780601f10610fe25761010080835404028352916020019161100d565b820191906000526020600020905b815481529060010190602001808311610ff057829003601f168201915b505050505081526020016008820154815260200160098201548152505082828151811061103d5761103c612eb2565b5b6020026020010181905250808061105390612f10565b915050610bba565b5090565b60005b81518110156112945760018282815181106110805761107f612eb2565b5b6020026020010151604051611095919061312b565b908152602001604051809103902060009054906101000a900460ff16156112485760008060018484815181106110ce576110cd612eb2565b5b60200260200101516040516110e3919061312b565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600090505b600280549050811015611201576111e48383815181106111305761112f612eb2565b5b60200260200101516002838154811061114c5761114b612eb2565b5b90600052602060002001805461116190612f88565b80601f016020809104026020016040519081016040528092919081815260200182805461118d90612f88565b80156111da5780601f106111af576101008083540402835291602001916111da565b820191906000526020600020905b8154815290600101906020018083116111bd57829003601f168201915b5050505050610459565b156111ee57611201565b80806111f990612f10565b91505061110d565b61120a816115bf565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a89600160405161123a9190612749565b60405180910390a150611281565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a8960006040516112789190612749565b60405180910390a15b808061128c90612f10565b915050611062565b5050565b600181600001516040516112ac919061312b565b908152602001604051809103902060009054906101000a900460ff166114745780600082600001516040516112e1919061312b565b9081526020016040518091039020600082015181600001908051906020019061130b929190612225565b506020820151816001019080519060200190611328929190612225565b5060408201518160020155606082015181600301908051906020019061134f929190612225565b50608082015181600401908051906020019061136c929190612225565b5060a0820151816005019080519060200190611389929190612225565b5060c08201518160060190805190602001906113a6929190612225565b5060e08201518160070190805190602001906113c3929190612225565b506101008201518160080155610120820151816009015590505060018082600001516040516113f2919061312b565b908152602001604051809103902060006101000a81548160ff02191690831515021790555060028160000151908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190611456929190612225565b506003600081548092919061146a90612f10565b9190505550611586565b8060008260000151604051611489919061312b565b908152602001604051809103902060008201518160000190805190602001906114b3929190612225565b5060208201518160010190805190602001906114d0929190612225565b506040820151816002015560608201518160030190805190602001906114f7929190612225565b506080820151816004019080519060200190611514929190612225565b5060a0820151816005019080519060200190611531929190612225565b5060c082015181600601908051906020019061154e929190612225565b5060e082015181600701908051906020019061156b929190612225565b50610100820151816008015561012082015181600901559050505b50565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b600060028054905090508082106115d65750611696565b60008290505b6001826115e99190613070565b8110156116635760026001826115ff91906130a4565b815481106116105761160f612eb2565b5b906000526020600020016002828154811061162e5761162d612eb2565b5b9060005260206000200190805461164490612f88565b61164f9291906122ab565b50808061165b90612f10565b9150506115dc565b50600280548061167657611675613142565b5b6001900381819060005260206000200160006116929190612338565b9055505b50565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546116d290612f88565b80601f01602080910402602001604051908101604052809291908181526020018280546116fe90612f88565b801561174b5780601f106117205761010080835404028352916020019161174b565b820191906000526020600020905b81548152906001019060200180831161172e57829003601f168201915b50505050509080600101805461176090612f88565b80601f016020809104026020016040519081016040528092919081815260200182805461178c90612f88565b80156117d95780601f106117ae576101008083540402835291602001916117d9565b820191906000526020600020905b8154815290600101906020018083116117bc57829003601f168201915b5050505050908060020154908060030180546117f490612f88565b80601f016020809104026020016040519081016040528092919081815260200182805461182090612f88565b801561186d5780601f106118425761010080835404028352916020019161186d565b820191906000526020600020905b81548152906001019060200180831161185057829003601f168201915b50505050509080600401805461188290612f88565b80601f01602080910402602001604051908101604052809291908181526020018280546118ae90612f88565b80156118fb5780601f106118d0576101008083540402835291602001916118fb565b820191906000526020600020905b8154815290600101906020018083116118de57829003601f168201915b50505050509080600501805461191090612f88565b80601f016020809104026020016040519081016040528092919081815260200182805461193c90612f88565b80156119895780601f1061195e57610100808354040283529160200191611989565b820191906000526020600020905b81548152906001019060200180831161196c57829003601f168201915b50505050509080600601805461199e90612f88565b80601f01602080910402602001604051908101604052809291908181526020018280546119ca90612f88565b8015611a175780601f106119ec57610100808354040283529160200191611a17565b820191906000526020600020905b8154815290600101906020018083116119fa57829003601f168201915b505050505090806007018054611a2c90612f88565b80601f0160208091040260200160405190810160405280929190818152602001828054611a5890612f88565b8015611aa55780601f10611a7a57610100808354040283529160200191611aa5565b820191906000526020600020905b815481529060010190602001808311611a8857829003601f168201915b505050505090806008015490806009015490508a565b60018160000151604051611acf919061312b565b908152602001604051809103902060009054906101000a900460ff1615611c565760008060018360000151604051611b07919061312b565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600090505b600280549050811015611c0f57611bf2826000015160028381548110611b5a57611b59612eb2565b5b906000526020600020018054611b6f90612f88565b80601f0160208091040260200160405190810160405280929190818152602001828054611b9b90612f88565b8015611be85780601f10611bbd57610100808354040283529160200191611be8565b820191906000526020600020905b815481529060010190602001808311611bcb57829003601f168201915b5050505050610459565b15611bfc57611c0f565b8080611c0790612f10565b915050611b31565b611c18816115bf565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a896001604051611c489190612749565b60405180910390a150611c8f565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a896000604051611c869190612749565b60405180910390a15b50565b611c9a6121d2565b60018260000151604051611cae919061312b565b908152602001604051809103902060009054906101000a900460ff16156121205760008260000151604051611ce3919061312b565b908152602001604051809103902060405180610140016040529081600082018054611d0d90612f88565b80601f0160208091040260200160405190810160405280929190818152602001828054611d3990612f88565b8015611d865780601f10611d5b57610100808354040283529160200191611d86565b820191906000526020600020905b815481529060010190602001808311611d6957829003601f168201915b50505050508152602001600182018054611d9f90612f88565b80601f0160208091040260200160405190810160405280929190818152602001828054611dcb90612f88565b8015611e185780601f10611ded57610100808354040283529160200191611e18565b820191906000526020600020905b815481529060010190602001808311611dfb57829003601f168201915b5050505050815260200160028201548152602001600382018054611e3b90612f88565b80601f0160208091040260200160405190810160405280929190818152602001828054611e6790612f88565b8015611eb45780601f10611e8957610100808354040283529160200191611eb4565b820191906000526020600020905b815481529060010190602001808311611e9757829003601f168201915b50505050508152602001600482018054611ecd90612f88565b80601f0160208091040260200160405190810160405280929190818152602001828054611ef990612f88565b8015611f465780601f10611f1b57610100808354040283529160200191611f46565b820191906000526020600020905b815481529060010190602001808311611f2957829003601f168201915b50505050508152602001600582018054611f5f90612f88565b80601f0160208091040260200160405190810160405280929190818152602001828054611f8b90612f88565b8015611fd85780601f10611fad57610100808354040283529160200191611fd8565b820191906000526020600020905b815481529060010190602001808311611fbb57829003601f168201915b50505050508152602001600682018054611ff190612f88565b80601f016020809104026020016040519081016040528092919081815260200182805461201d90612f88565b801561206a5780601f1061203f5761010080835404028352916020019161206a565b820191906000526020600020905b81548152906001019060200180831161204d57829003601f168201915b5050505050815260200160078201805461208390612f88565b80601f01602080910402602001604051908101604052809291908181526020018280546120af90612f88565b80156120fc5780601f106120d1576101008083540402835291602001916120fc565b820191906000526020600020905b8154815290600101906020018083116120df57829003601f168201915b50505050508152602001600882015481526020016009820154815250509050612121565b5b919050565b6002818154811061213657600080fd5b90600052602060002001600091509050805461215190612f88565b80601f016020809104026020016040519081016040528092919081815260200182805461217d90612f88565b80156121ca5780601f1061219f576101008083540402835291602001916121ca565b820191906000526020600020905b8154815290600101906020018083116121ad57829003601f168201915b505050505081565b604051806101400160405280606081526020016060815260200160008152602001606081526020016060815260200160608152602001606081526020016060815260200160008152602001600081525090565b82805461223190612f88565b90600052602060002090601f016020900481019282612253576000855561229a565b82601f1061226c57805160ff191683800117855561229a565b8280016001018555821561229a579182015b8281111561229957825182559160200191906001019061227e565b5b5090506122a79190612378565b5090565b8280546122b790612f88565b90600052602060002090601f0160209004810192826122d95760008555612327565b82601f106122ea5780548555612327565b8280016001018555821561232757600052602060002091601f016020900482015b8281111561232657825482559160010191906001019061230b565b5b5090506123349190612378565b5090565b50805461234490612f88565b6000825580601f106123565750612375565b601f0160209004906000526020600020908101906123749190612378565b5b50565b5b80821115612391576000816000905550600101612379565b5090565b600081519050919050565b600082825260208201905092915050565b60005b838110156123cf5780820151818401526020810190506123b4565b838111156123de576000848401525b50505050565b6000601f19601f8301169050919050565b600061240082612395565b61240a81856123a0565b935061241a8185602086016123b1565b612423816123e4565b840191505092915050565b6000819050919050565b6124418161242e565b82525050565b600061014083016000830151848203600086015261246582826123f5565b9150506020830151848203602086015261247f82826123f5565b91505060408301516124946040860182612438565b50606083015184820360608601526124ac82826123f5565b915050608083015184820360808601526124c682826123f5565b91505060a083015184820360a08601526124e082826123f5565b91505060c083015184820360c08601526124fa82826123f5565b91505060e083015184820360e086015261251482826123f5565b91505061010083015161252b610100860182612438565b50610120830151612540610120860182612438565b508091505092915050565b600060208201905081810360008301526125658184612447565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6125c3826123e4565b810181811067ffffffffffffffff821117156125e2576125e161258b565b5b80604052505050565b60006125f561256d565b905061260182826125ba565b919050565b600067ffffffffffffffff8211156126215761262061258b565b5b61262a826123e4565b9050602081019050919050565b82818337600083830152505050565b600061265961265484612606565b6125eb565b90508281526020810184848401111561267557612674612586565b5b612680848285612637565b509392505050565b600082601f83011261269d5761269c612581565b5b81356126ad848260208601612646565b91505092915050565b600080604083850312156126cd576126cc612577565b5b600083013567ffffffffffffffff8111156126eb576126ea61257c565b5b6126f785828601612688565b925050602083013567ffffffffffffffff8111156127185761271761257c565b5b61272485828601612688565b9150509250929050565b60008115159050919050565b6127438161272e565b82525050565b600060208201905061275e600083018461273a565b92915050565b61276d8161242e565b811461277857600080fd5b50565b60008135905061278a81612764565b92915050565b600080604083850312156127a7576127a6612577565b5b60006127b58582860161277b565b92505060206127c68582860161277b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061014083016000830151848203600086015261281a82826123f5565b9150506020830151848203602086015261283482826123f5565b91505060408301516128496040860182612438565b506060830151848203606086015261286182826123f5565b9150506080830151848203608086015261287b82826123f5565b91505060a083015184820360a086015261289582826123f5565b91505060c083015184820360c08601526128af82826123f5565b91505060e083015184820360e08601526128c982826123f5565b9150506101008301516128e0610100860182612438565b506101208301516128f5610120860182612438565b508091505092915050565b600061290c83836127fc565b905092915050565b6000602082019050919050565b600061292c826127d0565b61293681856127db565b935083602082028501612948856127ec565b8060005b8581101561298457848403895281516129658582612900565b945061297083612914565b925060208a0199505060018101905061294c565b50829750879550505050505092915050565b600060208201905081810360008301526129b08184612921565b905092915050565b600067ffffffffffffffff8211156129d3576129d261258b565b5b602082029050602081019050919050565b600080fd5b60006129fc6129f7846129b8565b6125eb565b90508083825260208201905060208402830185811115612a1f57612a1e6129e4565b5b835b81811015612a6657803567ffffffffffffffff811115612a4457612a43612581565b5b808601612a518982612688565b85526020850194505050602081019050612a21565b5050509392505050565b600082601f830112612a8557612a84612581565b5b8135612a958482602086016129e9565b91505092915050565b600060208284031215612ab457612ab3612577565b5b600082013567ffffffffffffffff811115612ad257612ad161257c565b5b612ade84828501612a70565b91505092915050565b600080fd5b600080fd5b60006101408284031215612b0857612b07612ae7565b5b612b136101406125eb565b9050600082013567ffffffffffffffff811115612b3357612b32612aec565b5b612b3f84828501612688565b600083015250602082013567ffffffffffffffff811115612b6357612b62612aec565b5b612b6f84828501612688565b6020830152506040612b838482850161277b565b604083015250606082013567ffffffffffffffff811115612ba757612ba6612aec565b5b612bb384828501612688565b606083015250608082013567ffffffffffffffff811115612bd757612bd6612aec565b5b612be384828501612688565b60808301525060a082013567ffffffffffffffff811115612c0757612c06612aec565b5b612c1384828501612688565b60a08301525060c082013567ffffffffffffffff811115612c3757612c36612aec565b5b612c4384828501612688565b60c08301525060e082013567ffffffffffffffff811115612c6757612c66612aec565b5b612c7384828501612688565b60e083015250610100612c888482850161277b565b61010083015250610120612c9e8482850161277b565b6101208301525092915050565b600060208284031215612cc157612cc0612577565b5b600082013567ffffffffffffffff811115612cdf57612cde61257c565b5b612ceb84828501612af1565b91505092915050565b600060208284031215612d0a57612d09612577565b5b600082013567ffffffffffffffff811115612d2857612d2761257c565b5b612d3484828501612688565b91505092915050565b600060208284031215612d5357612d52612577565b5b6000612d618482850161277b565b91505092915050565b600082825260208201905092915050565b6000612d8682612395565b612d908185612d6a565b9350612da08185602086016123b1565b612da9816123e4565b840191505092915050565b612dbd8161242e565b82525050565b6000610140820190508181036000830152612dde818d612d7b565b90508181036020830152612df2818c612d7b565b9050612e01604083018b612db4565b8181036060830152612e13818a612d7b565b90508181036080830152612e278189612d7b565b905081810360a0830152612e3b8188612d7b565b905081810360c0830152612e4f8187612d7b565b905081810360e0830152612e638186612d7b565b9050612e73610100830185612db4565b612e81610120830184612db4565b9b9a5050505050505050505050565b60006020820190508181036000830152612eaa8184612d7b565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612f1b8261242e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612f4e57612f4d612ee1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612fa057607f821691505b60208210811415612fb457612fb3612f59565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154612fe781612f88565b612ff18186612fba565b9450600182166000811461300c576001811461301d57613050565b60ff19831686528186019350613050565b61302685612fc5565b60005b8381101561304857815481890152600182019150602081019050613029565b838801955050505b50505092915050565b60006130658284612fda565b915081905092915050565b600061307b8261242e565b91506130868361242e565b92508282101561309957613098612ee1565b5b828203905092915050565b60006130af8261242e565b91506130ba8361242e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156130ef576130ee612ee1565b5b828201905092915050565b600061310582612395565b61310f8185612fba565b935061311f8185602086016123b1565b80840191505092915050565b600061313782846130fa565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212204b9574f27a70d188b1e5a6d1a099cfc1ad40c206733d1afb793fa912da3c5c1964736f6c634300080a0033";

    public static final String FUNC_BATCHDELETE = "batchDelete";

    public static final String FUNC_DELETETEACHER = "deleteTeacher";

    public static final String FUNC_GETATEACHERINFO = "getATeacherInfo";

    public static final String FUNC_GETALL = "getAll";

    public static final String FUNC_GETENTITY = "getEntity";

    public static final String FUNC_GETLISTPAGE = "getListPage";

    public static final String FUNC_ISEQUAL = "isEqual";

    public static final String FUNC_REMOVETEACHERINFOKEYATINDEX = "removeTeacherInfoKeyAtIndex";

    public static final String FUNC_SAVE = "save";

    public static final String FUNC_TEACHERINFOINSERTED = "teacherInfoInserted";

    public static final String FUNC_TEACHERINFOKEY = "teacherInfoKey";

    public static final String FUNC_TEACHERINFOS = "teacherInfos";

    public static final Event DELETEMSG_EVENT = new Event("DeleteMsg",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
    ;

    @Deprecated
    protected TeacherContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected TeacherContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected TeacherContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected TeacherContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<DeleteMsgEventResponse> getDeleteMsgEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEMSG_EVENT, transactionReceipt);
        ArrayList<DeleteMsgEventResponse> responses = new ArrayList<DeleteMsgEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.code = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, DeleteMsgEventResponse>() {
            @Override
            public DeleteMsgEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DELETEMSG_EVENT, log);
                DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
                typedResponse.log = log;
                typedResponse.code = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DELETEMSG_EVENT));
        return deleteMsgEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> batchDelete(List<String> accountList) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_BATCHDELETE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                        org.web3j.abi.datatypes.Utf8String.class,
                        org.web3j.abi.Utils.typeMap(accountList, org.web3j.abi.datatypes.Utf8String.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deleteTeacher(TeacherInfo _teacher) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DELETETEACHER,
                Arrays.<Type>asList(_teacher),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TeacherInfo> getATeacherInfo() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETATEACHERINFO,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<TeacherInfo>() {}));
        return executeRemoteCallSingleValueReturn(function, TeacherInfo.class);
    }

    public RemoteFunctionCall<List> getAll() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETALL,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<TeacherInfo>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<TeacherInfo> getEntity(TeacherInfo _teacher) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETENTITY,
                Arrays.<Type>asList(_teacher),
                Arrays.<TypeReference<?>>asList(new TypeReference<TeacherInfo>() {}));
        return executeRemoteCallSingleValueReturn(function, TeacherInfo.class);
    }

    public RemoteFunctionCall<List> getListPage(BigInteger begin, BigInteger end) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETLISTPAGE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(begin),
                        new org.web3j.abi.datatypes.generated.Uint256(end)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<TeacherInfo>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Boolean> isEqual(String a, String b) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISEQUAL,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(a),
                        new org.web3j.abi.datatypes.Utf8String(b)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> removeTeacherInfoKeyAtIndex(BigInteger index) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVETEACHERINFOKEYATINDEX,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(index)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> save(TeacherInfo _teacher) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SAVE,
                Arrays.<Type>asList(_teacher),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> teacherInfoInserted(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TEACHERINFOINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> teacherInfoKey(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TEACHERINFOKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple10<String, String, BigInteger, String, String, String, String, String, BigInteger, BigInteger>> teacherInfos(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TEACHERINFOS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple10<String, String, BigInteger, String, String, String, String, String, BigInteger, BigInteger>>(function,
                new Callable<Tuple10<String, String, BigInteger, String, String, String, String, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple10<String, String, BigInteger, String, String, String, String, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple10<String, String, BigInteger, String, String, String, String, String, BigInteger, BigInteger>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (BigInteger) results.get(2).getValue(),
                                (String) results.get(3).getValue(),
                                (String) results.get(4).getValue(),
                                (String) results.get(5).getValue(),
                                (String) results.get(6).getValue(),
                                (String) results.get(7).getValue(),
                                (BigInteger) results.get(8).getValue(),
                                (BigInteger) results.get(9).getValue());
                    }
                });
    }

    @Deprecated
    public static TeacherContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new TeacherContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static TeacherContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new TeacherContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static TeacherContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new TeacherContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static TeacherContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new TeacherContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<TeacherContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(TeacherContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<TeacherContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(TeacherContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<TeacherContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(TeacherContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<TeacherContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(TeacherContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class TeacherInfo extends DynamicStruct {
        public String account;

        public String teacherAccount;

        public BigInteger sexual;

        public String IDPhoto;

        public String position;

        public String politicalOutlook;

        public String educationalBg;

        public String department;

        public BigInteger duration;

        public BigInteger birthday;

        public TeacherInfo(String account, String teacherAccount, BigInteger sexual, String IDPhoto, String position, String politicalOutlook, String educationalBg, String department, BigInteger duration, BigInteger birthday) {
            super(new org.web3j.abi.datatypes.Utf8String(account),new org.web3j.abi.datatypes.Utf8String(teacherAccount),new org.web3j.abi.datatypes.generated.Uint256(sexual),new org.web3j.abi.datatypes.Utf8String(IDPhoto),new org.web3j.abi.datatypes.Utf8String(position),new org.web3j.abi.datatypes.Utf8String(politicalOutlook),new org.web3j.abi.datatypes.Utf8String(educationalBg),new org.web3j.abi.datatypes.Utf8String(department),new org.web3j.abi.datatypes.generated.Uint256(duration),new org.web3j.abi.datatypes.generated.Uint256(birthday));
            this.account = account;
            this.teacherAccount = teacherAccount;
            this.sexual = sexual;
            this.IDPhoto = IDPhoto;
            this.position = position;
            this.politicalOutlook = politicalOutlook;
            this.educationalBg = educationalBg;
            this.department = department;
            this.duration = duration;
            this.birthday = birthday;
        }

        public TeacherInfo(Utf8String account, Utf8String teacherAccount, Uint256 sexual, Utf8String IDPhoto, Utf8String position, Utf8String politicalOutlook, Utf8String educationalBg, Utf8String department, Uint256 duration, Uint256 birthday) {
            super(account,teacherAccount,sexual,IDPhoto,position,politicalOutlook,educationalBg,department,duration,birthday);
            this.account = account.getValue();
            this.teacherAccount = teacherAccount.getValue();
            this.sexual = sexual.getValue();
            this.IDPhoto = IDPhoto.getValue();
            this.position = position.getValue();
            this.politicalOutlook = politicalOutlook.getValue();
            this.educationalBg = educationalBg.getValue();
            this.department = department.getValue();
            this.duration = duration.getValue();
            this.birthday = birthday.getValue();
        }
    }

    public static class DeleteMsgEventResponse extends BaseEventResponse {
        public Boolean code;
    }
}
