package com.hdu.edu.creditcertificatesystem.contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple11;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class TeacherContract extends Contract {
    public static final String BINARY = "608060405260028054905060035534801561001957600080fd5b50614c91806100296000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063856e59bb1161008c578063db0606a111610066578063db0606a11461028b578063f15dc1cf146102a7578063f8aa752f146102d7578063fd2b166e14610307576100ea565b8063856e59bb146102055780639f32516414610221578063ac0451bb14610251576100ea565b806353ed5143116100c857806353ed51431461017f57806359583c2a1461019d57806364e51864146101b957806365d747d6146101e9576100ea565b806303e3acaf146100ef578063465c41051461011f578063485c79471461014f575b600080fd5b61010960048036038101906101049190613bb6565b610337565b6040516101169190613eb5565b60405180910390f35b6101396004803603810190610134919061400c565b610b9e565b604051610146919061409f565b60405180910390f35b610169600480360381019061016491906140ba565b610c7b565b6040516101769190613eb5565b60405180910390f35b610187611441565b6040516101949190613eb5565b60405180910390f35b6101b760048036038101906101b291906141e0565b611ae8565b005b6101d360048036038101906101ce9190614229565b611d21565b6040516101e0919061409f565b60405180910390f35b61020360048036038101906101fe9190614272565b611d57565b005b61021f600480360381019061021a91906144cd565b611e31565b005b61023b60048036038101906102369190614516565b6121aa565b6040516102489190614581565b60405180910390f35b61026b60048036038101906102669190614229565b61222e565b6040516102829b9a999897969594939291906145e6565b60405180910390f35b6102a560048036038101906102a091906144cd565b6127ee565b005b6102c160048036038101906102bc91906146d7565b6129c5565b6040516102ce9190613eb5565b60405180910390f35b6102f160048036038101906102ec91906144cd565b613262565b6040516102fe9190614874565b60405180910390f35b610321600480360381019061031c9190614272565b613898565b60405161032e9190614896565b60405180910390f35b6060600060028054905067ffffffffffffffff81111561035a57610359613ee1565b5b60405190808252806020026020018201604052801561039357816020015b610380613944565b8152602001906001900390816103785790505b5090506000805b600280549050811015610a8857878573ffffffffffffffffffffffffffffffffffffffff1663e044b83e600284815481106103d8576103d76148b8565b5b906000526020600020016040518263ffffffff1660e01b81526004016103fe91906149dd565b602060405180830381865afa15801561041b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043f9190614a14565b1415610a755760006002828154811061045b5761045a6148b8565b5b906000526020600020016040516104729190614acb565b90815260200160405180910390206040518061016001604052908160008201805461049c90614916565b80601f01602080910402602001604051908101604052809291908181526020018280546104c890614916565b80156105155780601f106104ea57610100808354040283529160200191610515565b820191906000526020600020905b8154815290600101906020018083116104f857829003601f168201915b5050505050815260200160018201805461052e90614916565b80601f016020809104026020016040519081016040528092919081815260200182805461055a90614916565b80156105a75780601f1061057c576101008083540402835291602001916105a7565b820191906000526020600020905b81548152906001019060200180831161058a57829003601f168201915b50505050508152602001600282015481526020016003820180546105ca90614916565b80601f01602080910402602001604051908101604052809291908181526020018280546105f690614916565b80156106435780601f1061061857610100808354040283529160200191610643565b820191906000526020600020905b81548152906001019060200180831161062657829003601f168201915b5050505050815260200160048201805461065c90614916565b80601f016020809104026020016040519081016040528092919081815260200182805461068890614916565b80156106d55780601f106106aa576101008083540402835291602001916106d5565b820191906000526020600020905b8154815290600101906020018083116106b857829003601f168201915b505050505081526020016005820180546106ee90614916565b80601f016020809104026020016040519081016040528092919081815260200182805461071a90614916565b80156107675780601f1061073c57610100808354040283529160200191610767565b820191906000526020600020905b81548152906001019060200180831161074a57829003601f168201915b5050505050815260200160068201805461078090614916565b80601f01602080910402602001604051908101604052809291908181526020018280546107ac90614916565b80156107f95780601f106107ce576101008083540402835291602001916107f9565b820191906000526020600020905b8154815290600101906020018083116107dc57829003601f168201915b5050505050815260200160078201805461081290614916565b80601f016020809104026020016040519081016040528092919081815260200182805461083e90614916565b801561088b5780601f106108605761010080835404028352916020019161088b565b820191906000526020600020905b81548152906001019060200180831161086e57829003601f168201915b505050505081526020016008820180546108a490614916565b80601f01602080910402602001604051908101604052809291908181526020018280546108d090614916565b801561091d5780601f106108f25761010080835404028352916020019161091d565b820191906000526020600020905b81548152906001019060200180831161090057829003601f168201915b5050505050815260200160098201805461093690614916565b80601f016020809104026020016040519081016040528092919081815260200182805461096290614916565b80156109af5780601f10610984576101008083540402835291602001916109af565b820191906000526020600020905b81548152906001019060200180831161099257829003601f168201915b50505050508152602001600a820180546109c890614916565b80601f01602080910402602001604051908101604052809291908181526020018280546109f490614916565b8015610a415780601f10610a1657610100808354040283529160200191610a41565b820191906000526020600020905b815481529060010190602001808311610a2457829003601f168201915b505050505081525050838380610a5690614b11565b945081518110610a6957610a686148b8565b5b60200260200101819052505b8080610a8090614b11565b91505061039a565b5085851015610a98575050610b96565b600181610aa59190614b5a565b851115610abc57600181610ab99190614b5a565b94505b60018686610aca9190614b5a565b610ad49190614b8e565b67ffffffffffffffff811115610aed57610aec613ee1565b5b604051908082528060200260200182016040528015610b2657816020015b610b13613944565b815260200190600190039081610b0b5790505b5092506000905060008690505b858111610b9257828181518110610b4d57610b4c6148b8565b5b6020026020010151848380610b6190614b11565b945081518110610b7457610b736148b8565b5b60200260200101819052508080610b8a90614b11565b915050610b33565b5050505b949350505050565b60008083905060008390508051825114610bbd57600092505050610c75565b60005b8251811015610c6d57818181518110610bdc57610bdb6148b8565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916838281518110610c1c57610c1b6148b8565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610c5a5760009350505050610c75565b8080610c6590614b11565b915050610bc0565b506001925050505b92915050565b6060600060028054905067ffffffffffffffff811115610c9e57610c9d613ee1565b5b604051908082528060200260200182016040528015610cd757816020015b610cc4613944565b815260200190600190039081610cbc5790505b5090506000805b60028054905081101561132d57600060028281548110610d0157610d006148b8565b5b90600052602060002001604051610d189190614acb565b908152602001604051809103902060405180610160016040529081600082018054610d4290614916565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6e90614916565b8015610dbb5780601f10610d9057610100808354040283529160200191610dbb565b820191906000526020600020905b815481529060010190602001808311610d9e57829003601f168201915b50505050508152602001600182018054610dd490614916565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0090614916565b8015610e4d5780601f10610e2257610100808354040283529160200191610e4d565b820191906000526020600020905b815481529060010190602001808311610e3057829003601f168201915b5050505050815260200160028201548152602001600382018054610e7090614916565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9c90614916565b8015610ee95780601f10610ebe57610100808354040283529160200191610ee9565b820191906000526020600020905b815481529060010190602001808311610ecc57829003601f168201915b50505050508152602001600482018054610f0290614916565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2e90614916565b8015610f7b5780601f10610f5057610100808354040283529160200191610f7b565b820191906000526020600020905b815481529060010190602001808311610f5e57829003601f168201915b50505050508152602001600582018054610f9490614916565b80601f0160208091040260200160405190810160405280929190818152602001828054610fc090614916565b801561100d5780601f10610fe25761010080835404028352916020019161100d565b820191906000526020600020905b815481529060010190602001808311610ff057829003601f168201915b5050505050815260200160068201805461102690614916565b80601f016020809104026020016040519081016040528092919081815260200182805461105290614916565b801561109f5780601f106110745761010080835404028352916020019161109f565b820191906000526020600020905b81548152906001019060200180831161108257829003601f168201915b505050505081526020016007820180546110b890614916565b80601f01602080910402602001604051908101604052809291908181526020018280546110e490614916565b80156111315780601f1061110657610100808354040283529160200191611131565b820191906000526020600020905b81548152906001019060200180831161111457829003601f168201915b5050505050815260200160088201805461114a90614916565b80601f016020809104026020016040519081016040528092919081815260200182805461117690614916565b80156111c35780601f10611198576101008083540402835291602001916111c3565b820191906000526020600020905b8154815290600101906020018083116111a657829003601f168201915b505050505081526020016009820180546111dc90614916565b80601f016020809104026020016040519081016040528092919081815260200182805461120890614916565b80156112555780601f1061122a57610100808354040283529160200191611255565b820191906000526020600020905b81548152906001019060200180831161123857829003601f168201915b50505050508152602001600a8201805461126e90614916565b80601f016020809104026020016040519081016040528092919081815260200182805461129a90614916565b80156112e75780601f106112bc576101008083540402835291602001916112e7565b820191906000526020600020905b8154815290600101906020018083116112ca57829003601f168201915b5050505050815250508383806112fc90614b11565b94508151811061130f5761130e6148b8565b5b6020026020010181905250808061132590614b11565b915050610cde565b508484101561133d57505061143b565b60018161134a9190614b5a565b8411156113615760018161135e9190614b5a565b93505b6001858561136f9190614b5a565b6113799190614b8e565b67ffffffffffffffff81111561139257611391613ee1565b5b6040519080825280602002602001820160405280156113cb57816020015b6113b8613944565b8152602001906001900390816113b05790505b5092506000905060008590505b848111611437578281815181106113f2576113f16148b8565b5b602002602001015184838061140690614b11565b945081518110611419576114186148b8565b5b6020026020010181905250808061142f90614b11565b9150506113d8565b5050505b92915050565b606060028054905067ffffffffffffffff81111561146257611461613ee1565b5b60405190808252806020026020018201604052801561149b57816020015b611488613944565b8152602001906001900390816114805790505b50905060005b600280549050811015611ae4576000600282815481106114c4576114c36148b8565b5b906000526020600020016040516114db9190614acb565b90815260200160405180910390206040518061016001604052908160008201805461150590614916565b80601f016020809104026020016040519081016040528092919081815260200182805461153190614916565b801561157e5780601f106115535761010080835404028352916020019161157e565b820191906000526020600020905b81548152906001019060200180831161156157829003601f168201915b5050505050815260200160018201805461159790614916565b80601f01602080910402602001604051908101604052809291908181526020018280546115c390614916565b80156116105780601f106115e557610100808354040283529160200191611610565b820191906000526020600020905b8154815290600101906020018083116115f357829003601f168201915b505050505081526020016002820154815260200160038201805461163390614916565b80601f016020809104026020016040519081016040528092919081815260200182805461165f90614916565b80156116ac5780601f10611681576101008083540402835291602001916116ac565b820191906000526020600020905b81548152906001019060200180831161168f57829003601f168201915b505050505081526020016004820180546116c590614916565b80601f01602080910402602001604051908101604052809291908181526020018280546116f190614916565b801561173e5780601f106117135761010080835404028352916020019161173e565b820191906000526020600020905b81548152906001019060200180831161172157829003601f168201915b5050505050815260200160058201805461175790614916565b80601f016020809104026020016040519081016040528092919081815260200182805461178390614916565b80156117d05780601f106117a5576101008083540402835291602001916117d0565b820191906000526020600020905b8154815290600101906020018083116117b357829003601f168201915b505050505081526020016006820180546117e990614916565b80601f016020809104026020016040519081016040528092919081815260200182805461181590614916565b80156118625780601f1061183757610100808354040283529160200191611862565b820191906000526020600020905b81548152906001019060200180831161184557829003601f168201915b5050505050815260200160078201805461187b90614916565b80601f01602080910402602001604051908101604052809291908181526020018280546118a790614916565b80156118f45780601f106118c9576101008083540402835291602001916118f4565b820191906000526020600020905b8154815290600101906020018083116118d757829003601f168201915b5050505050815260200160088201805461190d90614916565b80601f016020809104026020016040519081016040528092919081815260200182805461193990614916565b80156119865780601f1061195b57610100808354040283529160200191611986565b820191906000526020600020905b81548152906001019060200180831161196957829003601f168201915b5050505050815260200160098201805461199f90614916565b80601f01602080910402602001604051908101604052809291908181526020018280546119cb90614916565b8015611a185780601f106119ed57610100808354040283529160200191611a18565b820191906000526020600020905b8154815290600101906020018083116119fb57829003601f168201915b50505050508152602001600a82018054611a3190614916565b80601f0160208091040260200160405190810160405280929190818152602001828054611a5d90614916565b8015611aaa5780601f10611a7f57610100808354040283529160200191611aaa565b820191906000526020600020905b815481529060010190602001808311611a8d57829003601f168201915b505050505081525050828281518110611ac657611ac56148b8565b5b60200260200101819052508080611adc90614b11565b9150506114a1565b5090565b60005b8151811015611d1d576001828281518110611b0957611b086148b8565b5b6020026020010151604051611b1e9190614c15565b908152602001604051809103902060009054906101000a900460ff1615611cd1576000806001848481518110611b5757611b566148b8565b5b6020026020010151604051611b6c9190614c15565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600090505b600280549050811015611c8a57611c6d838381518110611bb957611bb86148b8565b5b602002602001015160028381548110611bd557611bd46148b8565b5b906000526020600020018054611bea90614916565b80601f0160208091040260200160405190810160405280929190818152602001828054611c1690614916565b8015611c635780601f10611c3857610100808354040283529160200191611c63565b820191906000526020600020905b815481529060010190602001808311611c4657829003601f168201915b5050505050610b9e565b15611c7757611c8a565b8080611c8290614b11565b915050611b96565b611c9381611d57565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a896001604051611cc3919061409f565b60405180910390a150611d0a565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a896000604051611d01919061409f565b60405180910390a15b8080611d1590614b11565b915050611aeb565b5050565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b60006002805490509050808210611d6e5750611e2e565b60008290505b600182611d819190614b5a565b811015611dfb576002600182611d979190614b8e565b81548110611da857611da76148b8565b5b9060005260206000200160028281548110611dc657611dc56148b8565b5b90600052602060002001908054611ddc90614916565b611de792919061399e565b508080611df390614b11565b915050611d74565b506002805480611e0e57611e0d614c2c565b5b600190038181906000526020600020016000611e2a9190613a2b565b9055505b50565b60018160000151604051611e459190614c15565b908152602001604051809103902060009054906101000a900460ff16612051578060008260000151604051611e7a9190614c15565b90815260200160405180910390206000820151816000019080519060200190611ea4929190613a6b565b506020820151816001019080519060200190611ec1929190613a6b565b50604082015181600201556060820151816003019080519060200190611ee8929190613a6b565b506080820151816004019080519060200190611f05929190613a6b565b5060a0820151816005019080519060200190611f22929190613a6b565b5060c0820151816006019080519060200190611f3f929190613a6b565b5060e0820151816007019080519060200190611f5c929190613a6b565b50610100820151816008019080519060200190611f7a929190613a6b565b50610120820151816009019080519060200190611f98929190613a6b565b5061014082015181600a019080519060200190611fb6929190613a6b565b509050506001808260000151604051611fcf9190614c15565b908152602001604051809103902060006101000a81548160ff02191690831515021790555060028160000151908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190612033929190613a6b565b506003600081548092919061204790614b11565b91905055506121a7565b80600082600001516040516120669190614c15565b90815260200160405180910390206000820151816000019080519060200190612090929190613a6b565b5060208201518160010190805190602001906120ad929190613a6b565b506040820151816002015560608201518160030190805190602001906120d4929190613a6b565b5060808201518160040190805190602001906120f1929190613a6b565b5060a082015181600501908051906020019061210e929190613a6b565b5060c082015181600601908051906020019061212b929190613a6b565b5060e0820151816007019080519060200190612148929190613a6b565b50610100820151816008019080519060200190612166929190613a6b565b50610120820151816009019080519060200190612184929190613a6b565b5061014082015181600a0190805190602001906121a2929190613a6b565b509050505b50565b60008173ffffffffffffffffffffffffffffffffffffffff1663e044b83e846040518263ffffffff1660e01b81526004016121e59190614896565b602060405180830381865afa158015612202573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122269190614a14565b905092915050565b60008180516020810182018051848252602083016020850120818352809550505050505060009150905080600001805461226790614916565b80601f016020809104026020016040519081016040528092919081815260200182805461229390614916565b80156122e05780601f106122b5576101008083540402835291602001916122e0565b820191906000526020600020905b8154815290600101906020018083116122c357829003601f168201915b5050505050908060010180546122f590614916565b80601f016020809104026020016040519081016040528092919081815260200182805461232190614916565b801561236e5780601f106123435761010080835404028352916020019161236e565b820191906000526020600020905b81548152906001019060200180831161235157829003601f168201915b50505050509080600201549080600301805461238990614916565b80601f01602080910402602001604051908101604052809291908181526020018280546123b590614916565b80156124025780601f106123d757610100808354040283529160200191612402565b820191906000526020600020905b8154815290600101906020018083116123e557829003601f168201915b50505050509080600401805461241790614916565b80601f016020809104026020016040519081016040528092919081815260200182805461244390614916565b80156124905780601f1061246557610100808354040283529160200191612490565b820191906000526020600020905b81548152906001019060200180831161247357829003601f168201915b5050505050908060050180546124a590614916565b80601f01602080910402602001604051908101604052809291908181526020018280546124d190614916565b801561251e5780601f106124f35761010080835404028352916020019161251e565b820191906000526020600020905b81548152906001019060200180831161250157829003601f168201915b50505050509080600601805461253390614916565b80601f016020809104026020016040519081016040528092919081815260200182805461255f90614916565b80156125ac5780601f10612581576101008083540402835291602001916125ac565b820191906000526020600020905b81548152906001019060200180831161258f57829003601f168201915b5050505050908060070180546125c190614916565b80601f01602080910402602001604051908101604052809291908181526020018280546125ed90614916565b801561263a5780601f1061260f5761010080835404028352916020019161263a565b820191906000526020600020905b81548152906001019060200180831161261d57829003601f168201915b50505050509080600801805461264f90614916565b80601f016020809104026020016040519081016040528092919081815260200182805461267b90614916565b80156126c85780601f1061269d576101008083540402835291602001916126c8565b820191906000526020600020905b8154815290600101906020018083116126ab57829003601f168201915b5050505050908060090180546126dd90614916565b80601f016020809104026020016040519081016040528092919081815260200182805461270990614916565b80156127565780601f1061272b57610100808354040283529160200191612756565b820191906000526020600020905b81548152906001019060200180831161273957829003601f168201915b50505050509080600a01805461276b90614916565b80601f016020809104026020016040519081016040528092919081815260200182805461279790614916565b80156127e45780601f106127b9576101008083540402835291602001916127e4565b820191906000526020600020905b8154815290600101906020018083116127c757829003601f168201915b505050505090508b565b600181600001516040516128029190614c15565b908152602001604051809103902060009054906101000a900460ff1615612989576000806001836000015160405161283a9190614c15565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600090505b6002805490508110156129425761292582600001516002838154811061288d5761288c6148b8565b5b9060005260206000200180546128a290614916565b80601f01602080910402602001604051908101604052809291908181526020018280546128ce90614916565b801561291b5780601f106128f05761010080835404028352916020019161291b565b820191906000526020600020905b8154815290600101906020018083116128fe57829003601f168201915b5050505050610b9e565b1561292f57612942565b808061293a90614b11565b915050612864565b61294b81611d57565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a89600160405161297b919061409f565b60405180910390a1506129c2565b7fcdb72d06565be2e6e4048e127d72c0d6cd72635cbae3d499c02100a7cd5c0a8960006040516129b9919061409f565b60405180910390a15b50565b6060600060028054905067ffffffffffffffff8111156129e8576129e7613ee1565b5b604051908082528060200260200182016040528015612a2157816020015b612a0e613944565b815260200190600190039081612a065790505b5090506000805b60028054905081101561314d57612b05600060028381548110612a4e57612a4d6148b8565b5b90600052602060002001604051612a659190614acb565b90815260200160405180910390206008018054612a8190614916565b80601f0160208091040260200160405190810160405280929190818152602001828054612aad90614916565b8015612afa5780601f10612acf57610100808354040283529160200191612afa565b820191906000526020600020905b815481529060010190602001808311612add57829003601f168201915b505050505088610b9e565b1561313a57600060028281548110612b2057612b1f6148b8565b5b90600052602060002001604051612b379190614acb565b908152602001604051809103902060405180610160016040529081600082018054612b6190614916565b80601f0160208091040260200160405190810160405280929190818152602001828054612b8d90614916565b8015612bda5780601f10612baf57610100808354040283529160200191612bda565b820191906000526020600020905b815481529060010190602001808311612bbd57829003601f168201915b50505050508152602001600182018054612bf390614916565b80601f0160208091040260200160405190810160405280929190818152602001828054612c1f90614916565b8015612c6c5780601f10612c4157610100808354040283529160200191612c6c565b820191906000526020600020905b815481529060010190602001808311612c4f57829003601f168201915b5050505050815260200160028201548152602001600382018054612c8f90614916565b80601f0160208091040260200160405190810160405280929190818152602001828054612cbb90614916565b8015612d085780601f10612cdd57610100808354040283529160200191612d08565b820191906000526020600020905b815481529060010190602001808311612ceb57829003601f168201915b50505050508152602001600482018054612d2190614916565b80601f0160208091040260200160405190810160405280929190818152602001828054612d4d90614916565b8015612d9a5780601f10612d6f57610100808354040283529160200191612d9a565b820191906000526020600020905b815481529060010190602001808311612d7d57829003601f168201915b50505050508152602001600582018054612db390614916565b80601f0160208091040260200160405190810160405280929190818152602001828054612ddf90614916565b8015612e2c5780601f10612e0157610100808354040283529160200191612e2c565b820191906000526020600020905b815481529060010190602001808311612e0f57829003601f168201915b50505050508152602001600682018054612e4590614916565b80601f0160208091040260200160405190810160405280929190818152602001828054612e7190614916565b8015612ebe5780601f10612e9357610100808354040283529160200191612ebe565b820191906000526020600020905b815481529060010190602001808311612ea157829003601f168201915b50505050508152602001600782018054612ed790614916565b80601f0160208091040260200160405190810160405280929190818152602001828054612f0390614916565b8015612f505780601f10612f2557610100808354040283529160200191612f50565b820191906000526020600020905b815481529060010190602001808311612f3357829003601f168201915b50505050508152602001600882018054612f6990614916565b80601f0160208091040260200160405190810160405280929190818152602001828054612f9590614916565b8015612fe25780601f10612fb757610100808354040283529160200191612fe2565b820191906000526020600020905b815481529060010190602001808311612fc557829003601f168201915b50505050508152602001600982018054612ffb90614916565b80601f016020809104026020016040519081016040528092919081815260200182805461302790614916565b80156130745780601f1061304957610100808354040283529160200191613074565b820191906000526020600020905b81548152906001019060200180831161305757829003601f168201915b50505050508152602001600a8201805461308d90614916565b80601f01602080910402602001604051908101604052809291908181526020018280546130b990614916565b80156131065780601f106130db57610100808354040283529160200191613106565b820191906000526020600020905b8154815290600101906020018083116130e957829003601f168201915b50505050508152505083838061311b90614b11565b94508151811061312e5761312d6148b8565b5b60200260200101819052505b808061314590614b11565b915050612a28565b508484101561315d57505061325b565b60018161316a9190614b5a565b8411156131815760018161317e9190614b5a565b93505b6001858561318f9190614b5a565b6131999190614b8e565b67ffffffffffffffff8111156131b2576131b1613ee1565b5b6040519080825280602002602001820160405280156131eb57816020015b6131d8613944565b8152602001906001900390816131d05790505b5092506000905060008590505b84811161325757828181518110613212576132116148b8565b5b602002602001015184838061322690614b11565b945081518110613239576132386148b8565b5b6020026020010181905250808061324f90614b11565b9150506131f8565b5050505b9392505050565b61326a613944565b6001826000015160405161327e9190614c15565b908152602001604051809103902060009054906101000a900460ff161561389257600082600001516040516132b39190614c15565b9081526020016040518091039020604051806101600160405290816000820180546132dd90614916565b80601f016020809104026020016040519081016040528092919081815260200182805461330990614916565b80156133565780601f1061332b57610100808354040283529160200191613356565b820191906000526020600020905b81548152906001019060200180831161333957829003601f168201915b5050505050815260200160018201805461336f90614916565b80601f016020809104026020016040519081016040528092919081815260200182805461339b90614916565b80156133e85780601f106133bd576101008083540402835291602001916133e8565b820191906000526020600020905b8154815290600101906020018083116133cb57829003601f168201915b505050505081526020016002820154815260200160038201805461340b90614916565b80601f016020809104026020016040519081016040528092919081815260200182805461343790614916565b80156134845780601f1061345957610100808354040283529160200191613484565b820191906000526020600020905b81548152906001019060200180831161346757829003601f168201915b5050505050815260200160048201805461349d90614916565b80601f01602080910402602001604051908101604052809291908181526020018280546134c990614916565b80156135165780601f106134eb57610100808354040283529160200191613516565b820191906000526020600020905b8154815290600101906020018083116134f957829003601f168201915b5050505050815260200160058201805461352f90614916565b80601f016020809104026020016040519081016040528092919081815260200182805461355b90614916565b80156135a85780601f1061357d576101008083540402835291602001916135a8565b820191906000526020600020905b81548152906001019060200180831161358b57829003601f168201915b505050505081526020016006820180546135c190614916565b80601f01602080910402602001604051908101604052809291908181526020018280546135ed90614916565b801561363a5780601f1061360f5761010080835404028352916020019161363a565b820191906000526020600020905b81548152906001019060200180831161361d57829003601f168201915b5050505050815260200160078201805461365390614916565b80601f016020809104026020016040519081016040528092919081815260200182805461367f90614916565b80156136cc5780601f106136a1576101008083540402835291602001916136cc565b820191906000526020600020905b8154815290600101906020018083116136af57829003601f168201915b505050505081526020016008820180546136e590614916565b80601f016020809104026020016040519081016040528092919081815260200182805461371190614916565b801561375e5780601f106137335761010080835404028352916020019161375e565b820191906000526020600020905b81548152906001019060200180831161374157829003601f168201915b5050505050815260200160098201805461377790614916565b80601f01602080910402602001604051908101604052809291908181526020018280546137a390614916565b80156137f05780601f106137c5576101008083540402835291602001916137f0565b820191906000526020600020905b8154815290600101906020018083116137d357829003601f168201915b50505050508152602001600a8201805461380990614916565b80601f016020809104026020016040519081016040528092919081815260200182805461383590614916565b80156138825780601f1061385757610100808354040283529160200191613882565b820191906000526020600020905b81548152906001019060200180831161386557829003601f168201915b5050505050815250509050613893565b5b919050565b600281815481106138a857600080fd5b9060005260206000200160009150905080546138c390614916565b80601f01602080910402602001604051908101604052809291908181526020018280546138ef90614916565b801561393c5780601f106139115761010080835404028352916020019161393c565b820191906000526020600020905b81548152906001019060200180831161391f57829003601f168201915b505050505081565b60405180610160016040528060608152602001606081526020016000815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b8280546139aa90614916565b90600052602060002090601f0160209004810192826139cc5760008555613a1a565b82601f106139dd5780548555613a1a565b82800160010185558215613a1a57600052602060002091601f016020900482015b82811115613a195782548255916001019190600101906139fe565b5b509050613a279190613af1565b5090565b508054613a3790614916565b6000825580601f10613a495750613a68565b601f016020900490600052602060002090810190613a679190613af1565b5b50565b828054613a7790614916565b90600052602060002090601f016020900481019282613a995760008555613ae0565b82601f10613ab257805160ff1916838001178555613ae0565b82800160010185558215613ae0579182015b82811115613adf578251825591602001919060010190613ac4565b5b509050613aed9190613af1565b5090565b5b80821115613b0a576000816000905550600101613af2565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b613b3581613b22565b8114613b4057600080fd5b50565b600081359050613b5281613b2c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613b8382613b58565b9050919050565b613b9381613b78565b8114613b9e57600080fd5b50565b600081359050613bb081613b8a565b92915050565b60008060008060808587031215613bd057613bcf613b18565b5b6000613bde87828801613b43565b9450506020613bef87828801613b43565b9350506040613c0087828801613b43565b9250506060613c1187828801613ba1565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613c83578082015181840152602081019050613c68565b83811115613c92576000848401525b50505050565b6000601f19601f8301169050919050565b6000613cb482613c49565b613cbe8185613c54565b9350613cce818560208601613c65565b613cd781613c98565b840191505092915050565b613ceb81613b22565b82525050565b6000610160830160008301518482036000860152613d0f8282613ca9565b91505060208301518482036020860152613d298282613ca9565b9150506040830151613d3e6040860182613ce2565b5060608301518482036060860152613d568282613ca9565b91505060808301518482036080860152613d708282613ca9565b91505060a083015184820360a0860152613d8a8282613ca9565b91505060c083015184820360c0860152613da48282613ca9565b91505060e083015184820360e0860152613dbe8282613ca9565b915050610100830151848203610100860152613dda8282613ca9565b915050610120830151848203610120860152613df68282613ca9565b915050610140830151848203610140860152613e128282613ca9565b9150508091505092915050565b6000613e2b8383613cf1565b905092915050565b6000602082019050919050565b6000613e4b82613c1d565b613e558185613c28565b935083602082028501613e6785613c39565b8060005b85811015613ea35784840389528151613e848582613e1f565b9450613e8f83613e33565b925060208a01995050600181019050613e6b565b50829750879550505050505092915050565b60006020820190508181036000830152613ecf8184613e40565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b613f1982613c98565b810181811067ffffffffffffffff82111715613f3857613f37613ee1565b5b80604052505050565b6000613f4b613b0e565b9050613f578282613f10565b919050565b600067ffffffffffffffff821115613f7757613f76613ee1565b5b613f8082613c98565b9050602081019050919050565b82818337600083830152505050565b6000613faf613faa84613f5c565b613f41565b905082815260208101848484011115613fcb57613fca613edc565b5b613fd6848285613f8d565b509392505050565b600082601f830112613ff357613ff2613ed7565b5b8135614003848260208601613f9c565b91505092915050565b6000806040838503121561402357614022613b18565b5b600083013567ffffffffffffffff81111561404157614040613b1d565b5b61404d85828601613fde565b925050602083013567ffffffffffffffff81111561406e5761406d613b1d565b5b61407a85828601613fde565b9150509250929050565b60008115159050919050565b61409981614084565b82525050565b60006020820190506140b46000830184614090565b92915050565b600080604083850312156140d1576140d0613b18565b5b60006140df85828601613b43565b92505060206140f085828601613b43565b9150509250929050565b600067ffffffffffffffff82111561411557614114613ee1565b5b602082029050602081019050919050565b600080fd5b600061413e614139846140fa565b613f41565b9050808382526020820190506020840283018581111561416157614160614126565b5b835b818110156141a857803567ffffffffffffffff81111561418657614185613ed7565b5b8086016141938982613fde565b85526020850194505050602081019050614163565b5050509392505050565b600082601f8301126141c7576141c6613ed7565b5b81356141d784826020860161412b565b91505092915050565b6000602082840312156141f6576141f5613b18565b5b600082013567ffffffffffffffff81111561421457614213613b1d565b5b614220848285016141b2565b91505092915050565b60006020828403121561423f5761423e613b18565b5b600082013567ffffffffffffffff81111561425d5761425c613b1d565b5b61426984828501613fde565b91505092915050565b60006020828403121561428857614287613b18565b5b600061429684828501613b43565b91505092915050565b600080fd5b600080fd5b600061016082840312156142c0576142bf61429f565b5b6142cb610160613f41565b9050600082013567ffffffffffffffff8111156142eb576142ea6142a4565b5b6142f784828501613fde565b600083015250602082013567ffffffffffffffff81111561431b5761431a6142a4565b5b61432784828501613fde565b602083015250604061433b84828501613b43565b604083015250606082013567ffffffffffffffff81111561435f5761435e6142a4565b5b61436b84828501613fde565b606083015250608082013567ffffffffffffffff81111561438f5761438e6142a4565b5b61439b84828501613fde565b60808301525060a082013567ffffffffffffffff8111156143bf576143be6142a4565b5b6143cb84828501613fde565b60a08301525060c082013567ffffffffffffffff8111156143ef576143ee6142a4565b5b6143fb84828501613fde565b60c08301525060e082013567ffffffffffffffff81111561441f5761441e6142a4565b5b61442b84828501613fde565b60e08301525061010082013567ffffffffffffffff8111156144505761444f6142a4565b5b61445c84828501613fde565b6101008301525061012082013567ffffffffffffffff811115614482576144816142a4565b5b61448e84828501613fde565b6101208301525061014082013567ffffffffffffffff8111156144b4576144b36142a4565b5b6144c084828501613fde565b6101408301525092915050565b6000602082840312156144e3576144e2613b18565b5b600082013567ffffffffffffffff81111561450157614500613b1d565b5b61450d848285016142a9565b91505092915050565b6000806040838503121561452d5761452c613b18565b5b600083013567ffffffffffffffff81111561454b5761454a613b1d565b5b61455785828601613fde565b925050602061456885828601613ba1565b9150509250929050565b61457b81613b22565b82525050565b60006020820190506145966000830184614572565b92915050565b600082825260208201905092915050565b60006145b882613c49565b6145c2818561459c565b93506145d2818560208601613c65565b6145db81613c98565b840191505092915050565b6000610160820190508181036000830152614601818e6145ad565b90508181036020830152614615818d6145ad565b9050614624604083018c614572565b8181036060830152614636818b6145ad565b9050818103608083015261464a818a6145ad565b905081810360a083015261465e81896145ad565b905081810360c083015261467281886145ad565b905081810360e083015261468681876145ad565b905081810361010083015261469b81866145ad565b90508181036101208301526146b081856145ad565b90508181036101408301526146c581846145ad565b90509c9b505050505050505050505050565b6000806000606084860312156146f0576146ef613b18565b5b600084013567ffffffffffffffff81111561470e5761470d613b1d565b5b61471a86828701613fde565b935050602061472b86828701613b43565b925050604061473c86828701613b43565b9150509250925092565b60006101608301600083015184820360008601526147648282613ca9565b9150506020830151848203602086015261477e8282613ca9565b91505060408301516147936040860182613ce2565b50606083015184820360608601526147ab8282613ca9565b915050608083015184820360808601526147c58282613ca9565b91505060a083015184820360a08601526147df8282613ca9565b91505060c083015184820360c08601526147f98282613ca9565b91505060e083015184820360e08601526148138282613ca9565b91505061010083015184820361010086015261482f8282613ca9565b91505061012083015184820361012086015261484b8282613ca9565b9150506101408301518482036101408601526148678282613ca9565b9150508091505092915050565b6000602082019050818103600083015261488e8184614746565b905092915050565b600060208201905081810360008301526148b081846145ad565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061492e57607f821691505b60208210811415614942576149416148e7565b5b50919050565b60008190508160005260206000209050919050565b6000815461496a81614916565b614974818661459c565b9450600182166000811461498f57600181146149a1576149d4565b60ff19831686526020860193506149d4565b6149aa85614948565b60005b838110156149cc578154818901526001820191506020810190506149ad565b808801955050505b50505092915050565b600060208201905081810360008301526149f7818461495d565b905092915050565b600081519050614a0e81613b2c565b92915050565b600060208284031215614a2a57614a29613b18565b5b6000614a38848285016149ff565b91505092915050565b600081905092915050565b60008154614a5981614916565b614a638186614a41565b94506001821660008114614a7e5760018114614a8f57614ac2565b60ff19831686528186019350614ac2565b614a9885614948565b60005b83811015614aba57815481890152600182019150602081019050614a9b565b838801955050505b50505092915050565b6000614ad78284614a4c565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000614b1c82613b22565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415614b4f57614b4e614ae2565b5b600182019050919050565b6000614b6582613b22565b9150614b7083613b22565b925082821015614b8357614b82614ae2565b5b828203905092915050565b6000614b9982613b22565b9150614ba483613b22565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115614bd957614bd8614ae2565b5b828201905092915050565b6000614bef82613c49565b614bf98185614a41565b9350614c09818560208601613c65565b80840191505092915050565b6000614c218284614be4565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212201fb2f88e09ed2f9179058b06d7b28072e9c91f575aba15ad77c009118de2f84764736f6c634300080a0033";

    public static final String FUNC_BATCHDELETE = "batchDelete";

    public static final String FUNC_DELETETEACHER = "deleteTeacher";

    public static final String FUNC_GETALL = "getAll";

    public static final String FUNC_GETENTITY = "getEntity";

    public static final String FUNC_GETLISTPAGE = "getListPage";

    public static final String FUNC_GETLISTPAGEBYROLE = "getListPageByRole";

    public static final String FUNC_GETLISTPAGEBYSECTOR = "getListPageBySector";

    public static final String FUNC_ISEQUAL = "isEqual";

    public static final String FUNC_REMOVETEACHERINFOKEYATINDEX = "removeTeacherInfoKeyAtIndex";

    public static final String FUNC_SAVE = "save";

    public static final String FUNC_TEACHERINFOINSERTED = "teacherInfoInserted";

    public static final String FUNC_TEACHERINFOKEY = "teacherInfoKey";

    public static final String FUNC_TEACHERINFOS = "teacherInfos";

    public static final String FUNC_TEST = "test";

    public static final Event DELETEMSG_EVENT = new Event("DeleteMsg",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
    ;

    @Deprecated
    protected TeacherContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected TeacherContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected TeacherContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected TeacherContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<DeleteMsgEventResponse> getDeleteMsgEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEMSG_EVENT, transactionReceipt);
        ArrayList<DeleteMsgEventResponse> responses = new ArrayList<DeleteMsgEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.code = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, DeleteMsgEventResponse>() {
            @Override
            public DeleteMsgEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DELETEMSG_EVENT, log);
                DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
                typedResponse.log = log;
                typedResponse.code = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DELETEMSG_EVENT));
        return deleteMsgEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> batchDelete(List<String> accountList) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_BATCHDELETE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                        org.web3j.abi.datatypes.Utf8String.class,
                        org.web3j.abi.Utils.typeMap(accountList, org.web3j.abi.datatypes.Utf8String.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deleteTeacher(TeacherInfo _teacher) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DELETETEACHER,
                Arrays.<Type>asList(_teacher),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List> getAll() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETALL,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<TeacherInfo>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<TeacherInfo> getEntity(TeacherInfo _teacher) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETENTITY,
                Arrays.<Type>asList(_teacher),
                Arrays.<TypeReference<?>>asList(new TypeReference<TeacherInfo>() {}));
        return executeRemoteCallSingleValueReturn(function, TeacherInfo.class);
    }

    public RemoteFunctionCall<List> getListPage(BigInteger begin, BigInteger end) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETLISTPAGE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(begin),
                        new org.web3j.abi.datatypes.generated.Uint256(end)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<TeacherInfo>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getListPageByRole(BigInteger _role, BigInteger begin, BigInteger end, String _userContract) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETLISTPAGEBYROLE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_role),
                        new org.web3j.abi.datatypes.generated.Uint256(begin),
                        new org.web3j.abi.datatypes.generated.Uint256(end),
                        new org.web3j.abi.datatypes.Address(160, _userContract)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<TeacherInfo>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getListPageBySector(String _department, BigInteger begin, BigInteger end) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETLISTPAGEBYSECTOR,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_department),
                        new org.web3j.abi.datatypes.generated.Uint256(begin),
                        new org.web3j.abi.datatypes.generated.Uint256(end)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<TeacherInfo>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Boolean> isEqual(String a, String b) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISEQUAL,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(a),
                        new org.web3j.abi.datatypes.Utf8String(b)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> removeTeacherInfoKeyAtIndex(BigInteger index) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVETEACHERINFOKEYATINDEX,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(index)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> save(TeacherInfo _teacher) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SAVE,
                Arrays.<Type>asList(_teacher),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> teacherInfoInserted(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TEACHERINFOINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> teacherInfoKey(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TEACHERINFOKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple11<String, String, BigInteger, String, String, String, String, String, String, String, String>> teacherInfos(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TEACHERINFOS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple11<String, String, BigInteger, String, String, String, String, String, String, String, String>>(function,
                new Callable<Tuple11<String, String, BigInteger, String, String, String, String, String, String, String, String>>() {
                    @Override
                    public Tuple11<String, String, BigInteger, String, String, String, String, String, String, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple11<String, String, BigInteger, String, String, String, String, String, String, String, String>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (BigInteger) results.get(2).getValue(),
                                (String) results.get(3).getValue(),
                                (String) results.get(4).getValue(),
                                (String) results.get(5).getValue(),
                                (String) results.get(6).getValue(),
                                (String) results.get(7).getValue(),
                                (String) results.get(8).getValue(),
                                (String) results.get(9).getValue(),
                                (String) results.get(10).getValue());
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> test(String _account, String _userContract) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TEST,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_account),
                        new org.web3j.abi.datatypes.Address(160, _userContract)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    @Deprecated
    public static TeacherContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new TeacherContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static TeacherContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new TeacherContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static TeacherContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new TeacherContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static TeacherContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new TeacherContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<TeacherContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(TeacherContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<TeacherContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(TeacherContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<TeacherContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(TeacherContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<TeacherContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(TeacherContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class TeacherInfo extends DynamicStruct {
        public String account;

        public String teacherName;

        public BigInteger sexual;

        public String IDPhoto;

        public String position;

        public String duty;

        public String politicalOutlook;

        public String educationalBg;

        public String department;

        public String duration;

        public String birthday;

        public TeacherInfo(String account, String teacherName, BigInteger sexual, String IDPhoto, String position, String duty, String politicalOutlook, String educationalBg, String department, String duration, String birthday) {
            super(new org.web3j.abi.datatypes.Utf8String(account),new org.web3j.abi.datatypes.Utf8String(teacherName),new org.web3j.abi.datatypes.generated.Uint256(sexual),new org.web3j.abi.datatypes.Utf8String(IDPhoto),new org.web3j.abi.datatypes.Utf8String(position),new org.web3j.abi.datatypes.Utf8String(duty),new org.web3j.abi.datatypes.Utf8String(politicalOutlook),new org.web3j.abi.datatypes.Utf8String(educationalBg),new org.web3j.abi.datatypes.Utf8String(department),new org.web3j.abi.datatypes.Utf8String(duration),new org.web3j.abi.datatypes.Utf8String(birthday));
            this.account = account;
            this.teacherName = teacherName;
            this.sexual = sexual;
            this.IDPhoto = IDPhoto;
            this.position = position;
            this.duty = duty;
            this.politicalOutlook = politicalOutlook;
            this.educationalBg = educationalBg;
            this.department = department;
            this.duration = duration;
            this.birthday = birthday;
        }

        public TeacherInfo(Utf8String account, Utf8String teacherName, Uint256 sexual, Utf8String IDPhoto, Utf8String position, Utf8String duty, Utf8String politicalOutlook, Utf8String educationalBg, Utf8String department, Utf8String duration, Utf8String birthday) {
            super(account,teacherName,sexual,IDPhoto,position,duty,politicalOutlook,educationalBg,department,duration,birthday);
            this.account = account.getValue();
            this.teacherName = teacherName.getValue();
            this.sexual = sexual.getValue();
            this.IDPhoto = IDPhoto.getValue();
            this.position = position.getValue();
            this.duty = duty.getValue();
            this.politicalOutlook = politicalOutlook.getValue();
            this.educationalBg = educationalBg.getValue();
            this.department = department.getValue();
            this.duration = duration.getValue();
            this.birthday = birthday.getValue();
        }
    }

    public static class DeleteMsgEventResponse extends BaseEventResponse {
        public Boolean code;
    }
}